{"version":3,"sources":["components/TopPanel.jsx","scripts/shellGenerator.js","components/ShellDialog.jsx","components/EditorToolbar.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/EditorBottomPanel.jsx","components/SplitEditor.jsx","components/Tabs/TabStyles.js","components/Tabs/ToolHeader.jsx","components/Tabs/Tools/Match.jsx","components/Tabs/Tools/RegexMatch.jsx","components/Tabs/Tools/Compare.jsx","components/Tabs/FindTab.jsx","components/Tabs/Tools/Replace.jsx","components/Tabs/Tools/RegexReplace.jsx","components/Tabs/ReplaceTab.jsx","components/Tabs/Tools/FilterColumns.jsx","components/Tabs/Tools/FilterLines.jsx","components/Tabs/Tools/CutLines.jsx","components/Tabs/Tools/Trim.jsx","components/Tabs/Tools/RemoveExtraSpaces.jsx","components/Tabs/Tools/Unique.jsx","components/Tabs/ReduceTab.jsx","components/Tabs/Tools/InsertColumn.jsx","components/Tabs/Tools/SwapColumns.jsx","components/Tabs/Tools/ConvertCase.jsx","components/Tabs/Tools/Sort.jsx","components/Tabs/Tools/Reverse.jsx","components/Tabs/Tools/LineNumbers.jsx","components/Tabs/ModifyTab.jsx","components/ToolTabs.jsx","components/Edits/Tools/EditMatch.jsx","components/Edits/Tools/EditRegexMatch.jsx","components/Edits/Tools/EditReplace.jsx","components/Edits/Tools/EditRegexReplace.jsx","components/Edits/Tools/EditCompare.jsx","components/Edits/Tools/EditFilterColumns.jsx","components/Edits/Tools/EditFilterLines.jsx","components/Edits/Tools/EditCutLines.jsx","components/Edits/Tools/EditInsertColumn.jsx","components/Edits/Tools/EditSwapColumns.jsx","components/Edits/Tools/EditConvertCase.jsx","components/Edits/Tools/EditSort.jsx","components/Edits/Tools/EditReverse.jsx","components/Edits/Tools/EditUnique.jsx","components/Edits/Tools/EditLineNumbers.jsx","components/Edits/EditDialog.jsx","components/ToolList.jsx","components/Alerts.jsx","scripts/generatorID.js","scripts/WebWorker.js","scripts/pipeWorker.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","light","grey","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","flex","link","textDecoration","DenseAppBar","React","memo","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","Tooltip","title","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","fontSize","itemIcon","ListItemText","Videocam","GitHub","CardMembership","regexEscape","regex","replace","awkRegexEscape","awkDelimiter","delimiter","awkSlashEscape","getToolCommand","tool","command","toolname","inColumn","casesensitive","occurrence","expression","matchCommand","regexMatchCommand","find","replaceCommand","regexReplaceCommand","separator","column","comparator","value","compareCommand","start","parseInt","filterColumnsCommand","content","filterLinesCommand","res","i","colBubble","insertColumnCommand","first","second","swapColumnsCommand","textCase","convertCaseCommand","count","cutLinesCommand","order","ignoreLeadingBlanks","sortCommand","direction","reverseCommand","countPrefix","uniqueCommand","startingNumber","lineNumbersCommand","marginBottom","textContent","closeButton","right","top","ShellDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","close","fullWidth","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","pipeline","result","length","active","shellGenerator","minHeight","height","btn","padding","margin","toolbarIcon","marginRight","popmenu","zIndex","input","display","activeButton","searchBox","flexDirection","flexWrap","justifyContent","alignItems","searchBtns","paddingLeft","paddingRight","borderRadius","searchBtnIcons","search","shape","fade","width","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","EditorToolbar","setInput","undo","redo","clearAllBreakpoints","showAlert","wrap","toggleWrap","findAll","inspectMode","toggleInspectMode","setPipelineActivity","clearPipeline","openFile","setOpenFile","openEditor","setOpenEditor","openPipeline","setOpenPipeline","openSearch","setOpenSearch","openShellDialog","setOpenShellDialog","searchExpression","setSearchExpression","searchRegExp","setSearchRegExp","searchCaseSensitive","setSearchCaseSensitive","fileRef","createRef","fileButtonRef","useRef","editorButtonRef","pipelineButtonRef","searchButtonRef","expandFile","useCallback","prev","expandEditor","expandInspect","expandSearch","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","loadFile","e","a","reader","FileReader","onload","readAsText","files","downloadResult","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Button","ref","Popper","role","undefined","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","accept","multiple","onChange","htmlFor","Publish","GetApp","ListAlt","Undo","Redo","WrapText","ViewDay","Clear","BugReport","Done","ClearAll","FiberNew","Search","size","Translate","TextFields","InputBase","placeholder","inputProps","backwards","caseSensitive","wholeWord","regExp","SkipPrevious","SkipNext","AllInclusive","EditorIn","forwardRef","edit","toggleBreakpoint","onCursorChange","aceIn","useImperativeHandle","properties","editor","resize","session","clearBreakpoints","useEffect","on","domEvent","indexOf","clientX","getBoundingClientRect","left","row","getDocumentPosition","getBreakpoints","setBreakpoint","clearBreakpoint","stop","newValue","console","log","selection","mode","name","showPrintMargin","hScrollBarAlwaysVisible","debounceChangePeriod","wrapEnabled","editorProps","$blockScrolling","EditorOut","state","bind","this","refs","aceOut","readOnly","Component","item","enabled","disabled","violet","EditorBottomPanel","line","setPosition","ColorLinearProgress","barColorPrimary","LinearProgress","SplitEditor","editorContent","editText","editorResult","pipeProgress","bottomPanel","setWrap","handleResize","initialEditorHeight","window","innerHeight","cursor","Fragment","defaultSize","minWidth","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","onResize","borderBottom","split","minSize","maxSize","toolHeader","toolName","fontWeight","toolInfo","divider","marginTop","infoCloseButton","infoTitleIcon","infoTitle","infoContent","ToolHeader","description","showInfo","setShowInfo","Info","styles","button","textField","flexCenter","flexStart","opts","MatchTool","matchFind","setMatchFind","matchCaseSensitive","setMatchCaseSensitive","setOccurrence","matchInColumn","setMatchInColumn","matchColumnDelimiter","setMatchColumnDelimiter","matchFindError","setMatchFindError","matchColumnError","setMatchColumnError","matchDelimiterError","setMatchDelimiterError","FormControl","InputLabel","Select","labelId","TextField","label","InputLabelProps","shrink","error","helperText","required","addTool","startIcon","Add","RegexMatchTool","regexMatchFind","setRegexMatchFind","regexMatchCaseSensitive","setRegexMatchCaseSensitive","regexMatchInColumn","setRegexMatchInColumn","regexMatchColumnDelimiter","setRegexMatchColumnDelimiter","regexMatchFindError","setRegexMatchFindError","regexMatchColumnError","setRegexMatchColumnError","regexMatchDelimiterError","setRegexMatchDelimiterError","validExpression","RegExp","handleRegexMatch","CompareTool","compareValue","setCompareValue","setComparator","setInColumn","setDelimiter","valueError","setValueError","inColumnError","setInColumnError","delimiterError","setDelimiterError","lightBlue","secondary","green","FindTab","Grid","container","xs","Match","Divider","orientation","RegexMatch","Compare","ReplaceTool","replaceFind","setReplaceFind","replaceReplace","setReplaceReplace","replaceCaseSensitive","setReplaceCaseSensitive","replaceInColumn","setReplaceInColumn","replaceColumnDelimiter","setReplaceColumnDelimiter","replaceFindError","setReplaceFindError","replaceReplaceError","setReplaceReplaceError","replaceColumnError","setReplaceColumnError","replaceDelimiterError","setReplaceDelimiterError","RegexReplaceTool","regexReplaceFind","setRegexReplaceFind","regexReplaceReplace","setRegexReplaceReplace","regexReplaceCaseSensitive","setRegexReplaceCaseSensitive","regexReplaceInColumn","setRegexReplaceInColumn","regexReplaceColumnDelimiter","setRegexReplaceColumnDelimiter","regexReplaceFindError","setRegexReplaceFindError","regexReplaceColumnError","setRegexReplaceColumnError","regexReplaceDelimiterError","setRegexReplaceDelimiterError","handleRegexReplace","FindAndReplaceTab","Replace","RegexReplace","FilterColumnsTool","setVariant","positionError","setPositionError","FilterLinesTool","setContent","CutLinesTool","setCount","countError","setCountError","TrimTool","RemoveExtraSpacesTool","checkbox","UniqueTool","setCaseSensitive","setCountPrefix","countDisabled","setCountDisabled","option","handleVariant","FormControlLabel","control","Checkbox","checked","ReduceTab","Unique","FilterColumns","FilterLines","CutLines","RemoveExtraSpaces","Trim","flexEnd","collapse","InsertColumnTool","focused","setFocused","contentError","setContentError","Collapse","in","collapsedHeight","multiline","rows","onFocus","onBlur","SwapColumnsTool","firstPosition","setFirstPosition","secondPosition","setSecondPosition","firstPositionError","setFirstPositionError","secondPositionError","setSecondPositionError","ConvertCaseTool","setTextCase","SortTool","setOrder","setIgnoreLeadingBlanks","ReverseTool","setDirection","LineNumbersTool","setStartingNumber","ModifyTab","InsertColumn","Sort","SwapColumns","LineNumbers","Reverse","ConvertCase","TabPanel","children","index","other","component","hidden","Box","p","a11yProps","ToolTabs","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","FindReplace","RemoveCircleOutline","Build","ReplaceTab","EditMatch","handleUpdate","updateTool","EditRegexMatch","EditReplace","EditRegexReplace","EditCompare","EditFilterColumns","EditFilterLines","EditCutLines","EditInsertColumn","EditSwapColumns","EditConvertCase","EditSort","EditReverse","EditUnique","EditLineNumbers","paddingBottom","titleIcon","dialogActions","paddingTop","confirmIcon","closeIcon","EditDialog","toolRef","Edit","mapToolname","mapToolContent","DialogActions","tooltip","textTransform","textAlign","letterSpacing","boxShadow","titleLabel","list","listItem","itemDeactivated","overflow","toolText","violetWord","lightGreenWord","greenWord","blueWord","lightBlueWord","yellowWord","darkYellowWord","redWord","lightRedWord","greenBlueWord","turquoiseWord","lightTurquoiseWord","listIcon","marginLR","ToolList","tools","removeTool","reactiveTool","sort","openEditDialog","setOpenEditDialog","toolToEdit","DragHandle","SortableHandle","mapComparator","mapFilterLinesContent","mapCase","mapUniqueVariant","mapTool","SortableItem","SortableElement","ListItem","ContainerComponent","popupId","bindTrigger","MoreVert","bindMenu","includes","isEditable","openEdit","VisibilityOff","Visibility","Delete","SortableListContainer","SortableContainer","List","map","Settings","lockAxis","useDragHandle","onSortEnd","helperClass","variantIcon","success","CheckCircle","warning","Warning","Error","info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Alerts","prop","showSnackbar","setShowSnackbar","snackbarInfo","setSnackbarInfo","snackbarQueue","openSnackbar","push","Date","getTime","processSnackbarQueue","shift","closeSnackbar","reason","Snackbar","autoHideDuration","onExited","ContentProps","lastID","WebWorker","worker","code","toString","blob","Worker","getMatchOptions","regexReplaceAll","lines","tmp","match","specificMatch","j","firstChar","lastChar","join","findNextLine","text","data","findPrevLine","processTool","splitedText","columns","slice","z","matchTool","regexMatchTool","replaceTool","regexReplaceTool","compareTool","splice","filterColumnsTool","charAt","filterLinesTool","cutLinesTool","givenColumn","lineNumber","concat","Array","fill","insertColumnTool","temp","swapColumnsTool","toUpperCase","toLowerCase","convertCaseTool","trim","trimTool","removeExtraSpacesTool","b","sortTool","reverse","reverseTool","unshift","uniqueTool","lineNumbersTool","processInspectTool","matchInspectTool","regexMatchInspectTool","x","replaceInspectTool","regexReplaceInspectTool","compareInspectTool","filterColumnsInspectTool","filterLinesInspectTool","cutLinesInspectTool","givenColumnLine","number","insertColumnInspectTool","swapColumnsInspectTool","convertCaseInspectTool","trimInspectTool","removeExtraSpacesInspectTool","sortInspectTool","reverseInspectTool","nextLine","prevLine","lastIndex","uniqueInspectTool","lineNumbersInspectTool","self","addEventListener","processData","unit","Math","ceil","postMessage","tempData","breakpoint","emptyBreakpoints","App","alertRef","setPipeline","setEditorContent","setEditorResult","setInspectMode","setPipeProgress","c","filter","each","onSortPipeline","oldIndex","newIndex","arrayMove","pipeWorker","onmessage","terminate","TopPanel","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c964b4ae.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam, CardMembership } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme, Tooltip } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n}))(MenuItem);\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"rgb(30, 30, 30)\",\n        light: grey[200],\n        dark: grey[900],\n      },\n      type: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appName: {\n      marginLeft: theme.spacing(10),\n      flex: 1,\n  },\n  link: {\n      textDecoration: 'none',\n      color: 'inherit',\n  },\n}));\n\nconst DenseAppBar = React.memo(() => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography className={classes.appName} variant=\"h6\" color=\"inherit\">\n                React App\n              </Typography>\n              <Tooltip title=\"Menu\">\n                <IconButton edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n                  <MenuIcon />\n                </IconButton>\n              </Tooltip>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Description fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Documentation\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Videocam fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Video\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <GitHub fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"GitHub\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <CardMembership fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Credits\" />\n                        </StyledMenuItem>\n                    </a>\n                </StyledMenu>\n            </Toolbar>\n          </AppBar>\n        </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default DenseAppBar;","\nfunction regexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\nfunction awkRegexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\\\\\\\\\$&\");\n};\n\nfunction awkDelimiter(delimiter) {\n    if (delimiter === ' ') {\n        return \"[ ]\";\n    }\n    else {\n        return delimiter;\n    }\n}\n\nfunction replaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction awkSlashEscape(regex) {\n    return regex.replace(/[\\\\]/g, \"\\\\$&\");\n}\n\nfunction regexReplaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + tool.find + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + tool.find + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction matchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction regexMatchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction compareCommand(tool) {\n    var separator = tool.inColumn === \"\" ? \"\\\\n\" : tool.delimiter;\n    var column = tool.inColumn === \"\" ? \"1\" : tool.inColumn;\n    var comparator = \"\";\n\n    switch (tool.comparator) {\n        case \"gt\":\n            comparator = \">\";\n            break;\n        case \"ge\":\n            comparator = \">=\";\n            break;\n        case \"lt\":\n            comparator = \"<\";\n            break;\n        case \"le\":\n            comparator = \"<=\";\n            break;\n        case \"eq\":\n            comparator = \"==\";\n            break;\n        default:\n            comparator = \"\";\n    }\n    return \"awk -F '\" + awkDelimiter(separator) + \"' '$\" + column + \" \" + comparator + \" \\\"\" + awkSlashEscape(tool.value) + \"\\\"'\";\n}\n\nfunction filterColumnsCommand(tool) {\n    var start = \"\";\n\n    switch (tool.variant) {\n        case \"remove\":\n            if (parseInt(tool.position) !== 1) {\n                start = \"-\" + parseInt(tool.position - 1) + \",\";\n            }\n\n            return \"cut -d '\" + tool.delimiter + \"' -f \" + start + (parseInt(tool.position) + 1) + \"-\";\n        case \"cut\":\n            return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '{print $\" + tool.position + \"}'\"; \n        default:\n            return \"\";\n    }\n}\n\nfunction filterLinesCommand(tool) {\n    switch (tool.content) {\n        case \"empty\":\n            return \"sed '/^$/d'\";\n        case \"whiteChars\":\n            return \"awk 'NF > 0'\";\n        default:\n            return \"\";\n    }\n}\n\nfunction insertColumnCommand(tool) {\n    const colBubble = (position) => {\n        if (parseInt(position) === 1) {\n            return \"\";\n        }\n        var res = \"t=$1;\";\n\n        for (let i = 1; i < position; i++) {\n            res += \"$\" + i + \"=$\" + (parseInt(i) + 1) + \";\";\n        }\n        return \" | awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{\" + res + \"$\" + tool.position + \"=t;print;}'\";\n    }\n\n    return \"pr -mts'\" + tool.delimiter + \"' $COLUMN_FILE /dev/stdin\" + colBubble(tool.position);\n}\n\nfunction swapColumnsCommand(tool) {\n    return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{t=$\" + tool.first + \";$\" + tool.first + \"=$\" + tool.second + \";$\" + tool.second + \"=t;print;}'\";\n}\n\nfunction convertCaseCommand(tool) {\n    switch (tool.textCase) {\n        case \"uppercase\":\n            return \"tr '[:lower:]' '[:upper:]'\";\n        case \"lowercase\":\n            return \"tr '[:upper:]' '[:lower:]'\";\n        default:\n            return \"\";\n    }\n}\n\n// https://unix.stackexchange.com/questions/102008/how-do-i-trim-leading-and-trailing-whitespace-from-each-line-of-some-output\nfunction trimCommand() {\n    return \"sed 's/^[[:blank:]]*//;s/[[:blank:]]*$//'\";\n}\n\nfunction removeExtraSpacesCommand() {\n    return \"tr -s ' '\";\n}\n\nfunction cutLinesCommand(tool) {\n    switch (tool.variant) {\n        case \"head\":\n            return \"head -n \" + tool.count;\n        case \"tail\":\n            return \"tail -n \" + tool.count;\n        default:\n            return \"\";\n    }\n}\n\nfunction sortCommand(tool) {\n    var command = \"LC_ALL=C sort -s\";\n    \n    if (tool.order === \"descending\") {\n        command += \"r\";\n    }\n    if (tool.casesensitive === false) {\n        command += \"f\";\n    }\n    if (tool.ignoreLeadingBlanks === true) {\n        command += \"b\";\n    }\n    return command;\n}\n\nfunction reverseCommand(tool) {\n    switch (tool.direction) {\n        case \"horizontal\":\n            return \"rev\";\n        case \"vertical\":\n            return \"tac\";\n        default:\n            return \"\";\n    }\n}\n\nfunction uniqueCommand(tool) {\n    var command = \"uniq\";\n\n    if (tool.casesensitive === false) {\n        command += \" -i\";\n    }\n    switch (tool.variant) {\n        case \"merge\":\n            if (tool.countPrefix === true) {\n                return command += \" -c | sed 's/^[[:blank:]]*//'\";\n            }\n            return command;\n        case \"unique\":\n            return command + \" -u\";\n        case \"duplicate\":\n            return command + \" -D\";\n        default:\n            return \"\";\n    }\n}\n\nfunction lineNumbersCommand(tool) {\n    var command = \"nl -s '\" + tool.delimiter + \"' -v \" + tool.startingNumber;\n\n    switch (tool.variant) {\n        case \"all\":\n            return command + \" -b a | sed 's/^[[:blank:]]*//'\";\n        case \"nonempty\":\n            return command + \" -b t | sed 's/^[[:blank:]]*//'\";\n        default:\n            return \"\";\n    }\n}\n\nfunction getToolCommand(tool) {\n    var command = \"\";\n\n    switch (tool.toolname) {\n        case \"match\":\n            command = matchCommand(tool);\n            break;\n        case \"regexMatch\":\n            command = regexMatchCommand(tool);\n            break;\n        case \"replace\":\n            command = replaceCommand(tool);\n            break;\n        case \"regexReplace\":\n            command = regexReplaceCommand(tool);\n            break;\n        case \"compare\":\n            command = compareCommand(tool);\n            break;\n        case \"filterColumns\":\n            command = filterColumnsCommand(tool);\n            break;\n        case \"filterLines\":\n            command = filterLinesCommand(tool);\n            break;\n        case \"insertColumn\":\n            command = insertColumnCommand(tool);\n            break;\n        case \"swapColumns\":\n            command = swapColumnsCommand(tool);\n            break;\n        case \"convertCase\":\n            command = convertCaseCommand(tool);\n            break;\n        case \"trim\":\n            command = trimCommand();\n            break;\n        case \"removeExtraSpaces\":\n            command = removeExtraSpacesCommand();\n            break;\n        case \"cutLines\":\n            command = cutLinesCommand(tool);\n            break;\n        case \"sort\":\n            command = sortCommand(tool);\n            break;\n        case \"reverse\":\n            command = reverseCommand(tool);\n            break;\n        case \"unique\":\n            command = uniqueCommand(tool);\n            break;\n        case \"lineNumbers\":\n            command = lineNumbersCommand(tool);\n            break;\n        default:\n            return;\n    }\n    return \" | \" + command;\n}\n\nexport default function (pipeline) {\n    var result = \"cat $FILENAME\";\n\n    for (var i = 0; i < pipeline.length; i++) {\n        if (pipeline[i].active === true) {\n            result += getToolCommand(pipeline[i]);\n        }\n    }\n\n    return result;\n}","import React from \"react\";\nimport { Dialog, Tooltip, useTheme, makeStyles, DialogTitle, DialogContent, useMediaQuery, MuiThemeProvider, DialogContentText } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport shellGenerator from \"../scripts/shellGenerator\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: \"#ff9408\",\n    },\n    content: {\n        marginBottom: \"20px\",\n    },\n    textContent: {\n        color: \"white\",\n        marginBottom: \"0px\",\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n}));\n\nfunction ShellDialog(props) {    // TODO: dodelat (ikonky, stylyzace)\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                Shell script\n                <Tooltip title={\"Close\"}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.close}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </DialogTitle>\n            <DialogContent dividers className={classes.content}>\n                <DialogContentText\n                    className={classes.textContent}\n                    id=\"scroll-dialog-text\"\n                    tabIndex={-1}\n                >\n                    {shellGenerator(props.pipeline)}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default ShellDialog;","import React, { useRef, useState, useCallback } from \"react\";\nimport { Toolbar, Button, IconButton, makeStyles, Popper, Grow, Paper, MenuItem, MenuList, ClickAwayListener, InputBase, Tooltip } from \"@material-ui/core\";\nimport { Description, FiberNew, Done, Publish, GetApp, Undo, Redo, BugReport, Clear, ClearAll, ListAlt, WrapText, Search, Translate, TextFields, SkipNext, SkipPrevious, AllInclusive, ViewDay } from \"@material-ui/icons\";\nimport { fade } from \"@material-ui/core/styles\";\nimport ShellDialog from \"./ShellDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(35, 35, 35)\",\n        //marginTop: \"3px\",\n        minHeight: \"33px\",\n        height: \"33px\",\n    },\n    btn: {\n        height: \"33px\",\n        padding: \"0px 10px 0px 10px\",\n        margin: \"0px\",\n    },\n    toolbarIcon: {\n        marginRight: \"6px\",\n    },\n    popmenu: {\n        zIndex: \"9999\",\n    },\n    input: {\n        display: \"none\",\n    },\n\n    activeButton: {\n        backgroundColor: \"#039be5 !important\",\n    },\n    searchBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"stretch\",\n    },\n    searchBtns: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        borderRadius: \"4px\",\n    },\n    searchBtnIcons: {\n        height: \"10px\",\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1),\n          width: 'auto',\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    searchIcon: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 5),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst EditorToolbar = React.memo(({ setInput, result, undo, redo, clearAllBreakpoints, showAlert, wrap, toggleWrap, find, findAll, inspectMode, toggleInspectMode, pipeline, setPipelineActivity, clearPipeline }) => {\n    const classes = useStyles();\n\n    const [openFile, setOpenFile] = useState(false);\n    const [openEditor, setOpenEditor] = useState(false);\n    const [openPipeline, setOpenPipeline] = useState(false);\n    const [openSearch, setOpenSearch] = useState(false);\n    const [openShellDialog, setOpenShellDialog] = useState(false);\n\n    const [searchExpression, setSearchExpression] = useState(\"\");   // TODO: Predelat jednotlivy casti na mensi komponenty (asi)\n    const [searchRegExp, setSearchRegExp] = useState(false);\n    const [searchCaseSensitive, setSearchCaseSensitive] = useState(false);\n\n    const fileRef = React.createRef();\n    \n    const fileButtonRef = useRef(null);\n    const editorButtonRef = useRef(null);\n    const pipelineButtonRef = useRef(null);\n    const searchButtonRef = useRef(null);\n\n    const expandFile = useCallback(() => {\n        setOpenFile(prev => !prev);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandEditor = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(prev => !prev);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandInspect = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(prev => !prev);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandSearch = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(prev => !prev);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleClose = useCallback((event) => {\n        // Otevreni dalsiho selectu\n        if ((fileButtonRef.current && fileButtonRef.current.contains(event.target)) || \n            (editorButtonRef.current && editorButtonRef.current.contains(event.target)) ||\n            (pipelineButtonRef.current && pipelineButtonRef.current.contains(event.target)) ||\n            (searchButtonRef.current && searchButtonRef.current.contains(event.target))) {\n            return;\n        }\n        \n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleListKeyDown = useCallback((event) => {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpenFile(false);\n          setOpenEditor(false);\n          setOpenPipeline(false);\n        }\n    }, [setOpenFile, setOpenEditor, setOpenPipeline]);\n\n    const loadFile = useCallback(async(e) => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n\n        reader.onload = async (e) => { \n          setInput(e.target.result);\n        };\n        reader.readAsText(e.target.files[0]);\n        showAlert(\"info\", \"Info: File imported.\");\n    }, [setInput, showAlert]);\n\n    const downloadResult = useCallback(async() => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([result], {type: 'text/plain'});\n\n        element.href = URL.createObjectURL(file);\n        element.download = \"result.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }, [result]);\n\n    return (\n        <Toolbar className={classes.root}>\n            <Button \n                className={classes.btn}\n                ref={fileButtonRef}\n                onClick={expandFile}\n            >\n                <Description fontSize=\"small\" className={classes.toolbarIcon} />\n                File\n            </Button>\n            <Popper className={classes.popmenu} open={openFile} anchorEl={fileButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList autoFocusItem={openFile} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <input\n                            accept=\"text/plain\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            ref={fileRef}\n                            onChange={e => `${loadFile(e)} ${handleClose(e)}`}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <MenuItem>\n                                <Publish fontSize=\"small\" className={classes.toolbarIcon}/>\n                                Import\n                            </MenuItem>\n                        </label>\n                        <MenuItem onClick={downloadResult}>\n                            <GetApp fontSize=\"small\" className={classes.toolbarIcon} />\n                            Download\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={editorButtonRef}\n                onClick={expandEditor}\n            >\n                <ListAlt fontSize=\"small\" className={classes.toolbarIcon} />\n                Editor\n            </Button>\n            <Popper className={classes.popmenu} open={openEditor} anchorEl={editorButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={openEditor} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${undo(e)} ${handleClose(e)}`}>\n                            <Undo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Undo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${redo(e)} ${handleClose(e)}`}>\n                            <Redo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Redo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleWrap(e)} ${handleClose(e)}`}>\n                            <WrapText fontSize=\"small\" className={classes.toolbarIcon} />\n                            { wrap ? \"Disable wrap\" : \"Enable wrap\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleInspectMode(e)} ${handleClose(e)}`}>\n                            <ViewDay fontSize=\"small\" className={classes.toolbarIcon} />\n                            { inspectMode ? \"Disable inspector\" : \"Enable inspector\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearAllBreakpoints(e)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Remove all breakpoints\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={pipelineButtonRef}\n                onClick={expandInspect}\n            >\n                <BugReport fontSize=\"small\" className={classes.toolbarIcon} />\n                Pipeline\n            </Button>\n            <Popper className={classes.popmenu} open={openPipeline} anchorEl={pipelineButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList autoFocusItem={openPipeline} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${setPipelineActivity(true)} ${handleClose(e)}`}>\n                            <Done fontSize=\"small\" className={classes.toolbarIcon} />\n                            Enable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setPipelineActivity(false)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Disable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearPipeline()} ${handleClose(e)}`}>\n                            <ClearAll fontSize=\"small\" className={classes.toolbarIcon} />\n                            Clear pipeline\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setOpenShellDialog(true)} ${handleClose(e)}`}>\n                            <FiberNew fontSize=\"small\" className={classes.toolbarIcon} />\n                            Create shell script\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={searchButtonRef}\n                onClick={expandSearch}\n            >\n                <Search fontSize=\"small\" className={classes.toolbarIcon} />\n                Search\n            </Button>\n            <Popper className={classes.popmenu} open={openSearch} anchorEl={searchButtonRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                    <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                            <div className={classes.searchBox}>\n                                <Tooltip title=\"RegExp\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchRegExp && classes.activeButton }`}\n                                    onClick={() => setSearchRegExp(prev => !prev)}\n                                >\n                                    <Translate />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Case sensitive\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchCaseSensitive && classes.activeButton }`}\n                                    onClick={() => setSearchCaseSensitive(prev => !prev)}\n                                >\n                                    <TextFields />\n                                </IconButton>\n                                </Tooltip>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <Search />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        onChange={event => setSearchExpression(event.target.value)}\n                                        value={searchExpression}\n                                    />\n                                    <Tooltip title=\"Remove\">\n                                    <IconButton size=\"small\" style={{marginRight: \"5px\"}} \n                                        onClick={() => setSearchExpression(\"\")}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    </Tooltip>\n                                </div>\n                                <Tooltip title=\"Previous\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                    onClick={() => find(searchExpression, { backwards: true, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipPrevious />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next\">\n                                <IconButton size=\"small\" className={classes.searchBtns}\n                                     onClick={() => find(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipNext />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"All\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                     onClick={() => findAll(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <AllInclusive />\n                                </IconButton>\n                                </Tooltip>\n                            </div>\n                        </ClickAwayListener>\n                    </Paper>\n                </Grow>\n            )}\n            </Popper>\n            {openShellDialog &&\n                <ShellDialog \n                    open={openShellDialog}\n                    close={() => setOpenShellDialog(false)}\n                    pipeline={pipeline}\n                />\n            }\n        </ Toolbar>\n    );\n});\n\nexport default EditorToolbar;","import React, { forwardRef, useImperativeHandle, useEffect, useRef, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nconst EditorIn = React.memo(forwardRef(({ content, edit, wrap, toggleBreakpoint, onCursorChange }, ref) => {\n  const aceIn = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    find(expression, properties){\n      aceIn.current.editor.find(expression, properties);\n    },\n    \n    findAll(expression, properties) {\n      aceIn.current.editor.findAll(expression, properties);\n    },\n\n    resize() {\n      aceIn.current.editor.resize();\n    },\n\n    undo()  {\n      aceIn.current.editor.undo();\n    },\n  \n    redo  ()  {\n      aceIn.current.editor.redo();\n    },\n  \n    clearAllBreakpoints  ()  {\n      aceIn.current.editor.session.clearBreakpoints();\n    },\n}));\n\n  /**\n   * https://ourcodeworld.com/articles/read/1052/how-to-add-toggle-breakpoints-on-the-ace-editor-gutter\n  */\nuseEffect(() => {\n  aceIn.current.editor.on(\"guttermousedown\", function(e) {\n    var target = e.domEvent.target;\n\n    if (target.className.indexOf(\"ace_gutter-cell\") === -1) {\n        return;\n    }\n\n    /*// Pokud neni editor focusnut ignorovat nastaveni breakpointu (mozna se bude hodit).\n    if (!(e.editor.isFocused())){\n        return; \n    }*/\n\n    // Misto za cislici ignorujeme pro nastaveni breakpointu\n    if (e.clientX > 25 + target.getBoundingClientRect().left) {\n        return;\n    }\n\n    var row = e.getDocumentPosition().row;\n    var breakpoints = e.editor.session.getBreakpoints(row, 0);\n\n    if (typeof breakpoints[row] === typeof undefined) {\n      e.editor.session.setBreakpoint(row);\n    }\n    else {\n        e.editor.session.clearBreakpoint(row);\n    }\n\n    e.stop();\n    \n    toggleBreakpoint(breakpoints);\n    });\n  }, [toggleBreakpoint]);\n\n\n  const onChange = useCallback((newValue) => {\n    edit(newValue);\n    console.log(aceIn.current.editor.session.getBreakpoints());\n  }, [edit]);\n  \n    return ( \n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        onChange={onChange}\n        onCursorChange={(selection, event) => onCursorChange(selection, event)}\n        ref={aceIn}\n        value={content}\n        mode=\"plain_text\"\n        name=\"EditorIn\"\n        height=\"100%\"\n        width=\"100%\"\n        placeholder=\"Insert your input here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        debounceChangePeriod={1500}\n        wrapEnabled={wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n}));\n \nexport default EditorIn;","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n//<button onClick={()=> {this.refs.AceOut.editor.find(\"a\")}}>Undo</button>\nclass EditorOut extends Component {\n  state = {  }\n  \n  constructor(props) {\n    super(props);\n    this.resize = this.resize.bind(this);\n  }\n\n  find(expression, properties) {\n    this.refs.aceOut.editor.find(expression, properties);\n  }\n\n  findAll(expression, properties) {\n    this.refs.aceOut.editor.findAll(expression, properties);\n  }\n\n  resize() {\n    this.refs.aceOut.editor.resize();\n  }\n\n  render() { \n    return (\n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        ref=\"aceOut\"\n        value={this.props.content}\n        name=\"EditorOut\"\n        height=\"100%\"\n        width=\"100%\"\n        mode=\"plain_text\"\n        readOnly={true}\n        placeholder=\"Your output will be here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        wrapEnabled={this.props.wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  }\n}\n \nexport default EditorOut;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(33, 33, 33)\",\n        height: \"18px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        padding: \"1px 20px\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        flexWrap: \"nowrap\",\n        flexDirection: \"row-reverse\",\n        fontSize: \"13px\",\n        borderRadius: \"0px\",\n    },\n    item: {\n        marginLeft: \"15px\",\n    },\n    enabled: {\n        color: \"green\",\n    },\n    disabled: {\n        color: \"#bf001d\",\n    },\n    violet: {\n        color: \"#e35d14\",\n    },\n}));\n\nconst EditorBottomPanel = React.memo(forwardRef(({wrap, inspectMode}, ref) => {\n    const classes = useStyles();\n\n    const [position, setPosition] = useState({line: 1, column: 1});\n\n\n    useImperativeHandle(ref, () => ({\n        setPosition(line, column) {\n            setPosition(state => ({...state, line: line, column: column}));\n        }\n            \n    }));\n\n    return (\n        <Paper elevation={7} className={classes.root}>\n            <span className={classes.item}>Wrap: {wrap ? <span className={classes.enabled}>Enabled</span> : <span className={classes.disabled}>Disabled</span>}</span>\n            <span className={classes.item}>Mode: <span className={classes.violet}>{ inspectMode ? \"Inspect\" : \"Auto\" }</span></span>\n            <span>Ln {position.line}, Col {position.column}</span>\n        </Paper>\n    );\n}));\n\nexport default EditorBottomPanel;","import React, { useRef, useState, useCallback } from \"react\";\nimport EditorToolbar from \"./EditorToolbar\";\nimport SplitPane from \"react-split-pane\";\nimport { Resizable } from \"re-resizable\";\nimport EditorIn from \"./EditorIn\";\nimport EditorOut from \"./EditorOut\";\nimport { LinearProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditorBottomPanel from \"./EditorBottomPanel\";\nimport \"./SplitEditor.css\";\n\nconst ColorLinearProgress = withStyles({\n    barColorPrimary: {\n      backgroundColor: '#028fd4',\n    },\n})(LinearProgress);\n\nconst SplitEditor = React.memo(({ editorContent, editText, editorResult, showAlert, toggleBreakpoint, inspectMode, toggleInspectMode, pipeProgress, pipeline, setPipelineActivity, clearPipeline }) => {\n    const aceIn = useRef();\n    const aceOut = useRef();\n    const bottomPanel = useRef();\n\n    const [wrap, setWrap] = useState(false);\n\n    const find = useCallback((expression, properties) => {\n        aceIn.current.find(expression, properties);\n        aceOut.current.find(expression, properties);\n    }, []);\n\n    const findAll = useCallback((expression, properties) => {\n        aceIn.current.findAll(expression, properties);\n        aceOut.current.findAll(expression, properties);\n    }, []);\n\n    const toggleWrap = useCallback(() => {\n        setWrap(prev => !prev);\n    }, [setWrap]);\n\n    const handleResize = useCallback(() => {\n        aceIn.current.resize();\n        aceOut.current.resize();\n    }, []);\n\n    const undo = useCallback(() => {\n        aceIn.current.undo();\n    }, []);\n\n    const redo = useCallback(() => {\n        aceIn.current.redo();\n    }, []);\n\n    const clearAllBreakpoints = useCallback(() => {\n        aceIn.current.clearAllBreakpoints();\n        toggleBreakpoint([]);\n    }, [toggleBreakpoint]);\n\n    const initialEditorHeight = useCallback(() => {\n        const height = window.innerHeight - 1047;   // 1047 celkova vyska ostatniho contentu\n\n        return height < 480 ? \"480px\" : height;\n    }, []);\n\n    const onCursorChange = useCallback((selection, event) => {\n        bottomPanel.current.setPosition(selection.cursor.row + 1, selection.cursor.column + 1);\n    }, []);\n\n    return ( \n        <React.Fragment>\n            <EditorToolbar \n                setInput={editText} \n                result={editorResult} \n                undo={undo} \n                redo={redo}\n                clearAllBreakpoints={clearAllBreakpoints}\n                showAlert={showAlert} \n                wrap={wrap}\n                toggleWrap={toggleWrap}\n                find={find}\n                findAll={findAll}\n                inspectMode={inspectMode}\n                toggleInspectMode={toggleInspectMode}\n                pipeline={pipeline}\n                setPipelineActivity={setPipelineActivity}\n                clearPipeline={clearPipeline}\n            />\n            <Resizable\n                defaultSize={{ width: \"100%\", height: initialEditorHeight() }}\n                minHeight={100}\n                minWidth=\"100%\"\n                maxWidth=\"100%\"\n                enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n                onResize={() => handleResize()}\n                style={{display: \"flex\", flexDirection: \"column\", flexWrap: \"nowrap\", justifyContent: \"flex-start\",\n                    alignItems: \"stretch\", borderBottom: \"1px solid rgb(30, 30, 30)\"}}\n            >\n                <SplitPane \n                    className=\"SplitEditor\" \n                    split=\"vertical\" \n                    style={{height: \"100%\", position: \"static\"}} \n                    minSize={200} maxSize={-200} \n                    defaultSize={\"50%\"} \n                    onChange={() => handleResize()}\n                >\n                    <EditorIn ref={ aceIn } content={editorContent} edit={editText} wrap={wrap} toggleBreakpoint={toggleBreakpoint} onCursorChange={onCursorChange} />\n                    <EditorOut ref={ aceOut } content={editorResult} wrap={wrap} />\n                </SplitPane>\n                    <ColorLinearProgress variant=\"determinate\" value={pipeProgress} />\n                    <EditorBottomPanel ref={bottomPanel} wrap={wrap} inspectMode={inspectMode} />\n            </Resizable>\n        </React.Fragment>\n    );  \n});\n \nexport default SplitEditor;","export default {\n    toolHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    toolName: {\n        color: \"#d9d9d9\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n        display: \"inline\",\n    },\n    toolInfo: {\n        marginLeft: \"5px\",\n        marginBottom: \"5px\",\n        color: \"#d9d9d9\",\n        \"&:hover\": {\n            color: \"#039be5\",\n        }\n    },\n    divider: {\n\t    marginTop: \"20px\",\n    },\n    infoCloseButton: {\n        marginLeft: \"50px\",\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n    infoTitleIcon: {\n        marginRight: \"15px\",\n        color: \"#09b011\",\n    },\n    infoTitle: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#09b011\",\n        fontWeight: \"bold\",\n        fontSize: \"26px\",\n    },\n    infoContent: {\n        marginBottom: \"20px\",\n    }\n};","import React, { useState } from \"react\";\nimport { Typography, IconButton, Tooltip, useTheme, useMediaQuery, MuiThemeProvider, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport { Info, Close } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\n\nconst ToolHeader = React.memo(({ classes, toolname, description }) => {\n    const [showInfo, setShowInfo] = useState(false);\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={classes.toolHeader}>\n                <Typography variant=\"h5\" className={classes.toolName}>{toolname}</Typography>\n                <Tooltip title=\"Info\">\n                    <IconButton \n                        className={classes.toolInfo}\n                        onClick={() => setShowInfo(true)}\n                        size=\"small\"\n                    >\n                        <Info />\n                    </IconButton>\n                </Tooltip>\n            </div>\n            {showInfo &&\n            <Dialog\n            open={showInfo}\n            onClose={() => setShowInfo(false)}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"sm\"\n            aria-labelledby=\"info-dialog-title\"\n            >\n                <DialogTitle id=\"info-dialog-title\">\n                    <div className={classes.infoTitle}>\n                        <Info className={classes.infoTitleIcon} fontSize=\"large\" />\n                        <span>{toolname + \" info\"}</span>\n                    </div>\n                    <Tooltip title={\"Close\"}>\n                        <IconButton aria-label=\"close\" className={classes.infoCloseButton} onClick={() => setShowInfo(false)}>\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </DialogTitle>\n                <DialogContent dividers className={classes.infoContent}>\n                    {description}\n                </DialogContent>\n            </Dialog>}\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ToolHeader);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction MatchTool(props) {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(\"\");\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [matchInColumn, setMatchInColumn] = useState(\"\");\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(\"\");\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    const handleMatch = () => {\n        if (matchFind === \"\"){\n            setMatchFindError(true);\n        }\n\n        if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n            setMatchDelimiterError(true);\n        }\n\n        if (matchInColumn !== \"\" && matchInColumn <= 0) {\n            setMatchColumnError(true);\n        }\n\n        if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n            props.addTool({toolname: \"match\", expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Match added into the pipeline.\");\n            setMatchFind(\"\");\n            setMatchInColumn(\"\");\n            setMatchColumnDelimiter(\"\");\n            setMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"match-occurence-label\"\n                      id=\"match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"match-case-label\"\n                      id=\"match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"match-expression\"\n                    label=\"Find\"\n                    value={matchFind}\n                    required={true}\n                    onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={matchFindError === true}\n                    helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-match\"\n                    className={classes.button}\n                    onClick={() => handleMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default MatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexMatchTool(props) {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(\"\");\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(\"\");\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(\"\");\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    const handleRegexMatch = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexMatchFind);\n        } \n        catch (e) {\n            setRegexMatchFindError(true);\n            validExpression = false;\n        }\n\n        if (regexMatchFind === \"\"){\n            setRegexMatchFindError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n            setRegexMatchDelimiterError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n            setRegexMatchColumnError(true);\n        }\n\n        if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexMatch\", expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex match added into the pipeline.\");\n            setRegexMatchFind(\"\");\n            setRegexMatchInColumn(\"\");\n            setRegexMatchColumnDelimiter(\"\");\n            setRegexMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-match-occurence-label\"\n                      id=\"regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-match-case-label\"\n                      id=\"regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-match-expression\"\n                    label=\"Regular expression\"\n                    value={regexMatchFind}\n                    required={true}\n                    onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={regexMatchFindError === true}\n                    helperText={regexMatchFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-match\"\n                    className={classes.button}\n                    onClick={() => handleRegexMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexMatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CompareTool(props) {\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(\"\");\n    const [comparator, setComparator] = useState(\"gt\")\n    const [inColumn, setInColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleCompare = () => {\n        if (compareValue === \"\"){\n            setValueError(true);\n        }\n\n        if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (inColumn !== \"\" && inColumn <= 0) {\n            setInColumnError(true);\n        }\n\n        if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n            props.addTool({toolname: \"compare\", value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Compare added into the pipeline.\");\n            setCompareValue(\"\");\n            setInColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding compare into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"compare-comparator-label\"\n                      id=\"compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"compare-value\"\n                    label=\"Compare value\"\n                    value={compareValue}\n                    required={true}\n                    onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                    className={classes.textField}\n                    error={valueError === true}\n                    helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-compare\"\n                    className={classes.button}\n                    onClick={() => handleCompare()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default CompareTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Match from \"./Tools/Match\";\nimport RegexMatch from \"./Tools/RegexMatch\";\nimport Compare from \"./Tools/Compare\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Match\" description={\n                        <React.Fragment>\n                            <p>Searches for <b>pattern</b> in each line independently. If line contains specified text, then is preproduced to the output.</p>\n                            <h4>Options:</h4>\n                            <ul>\n                                <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                            </ul>\n                        </React.Fragment>\n                    } \n                />\n                    <Match addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex match\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently. If line contains expression, then is preproduced to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexMatch addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Compare\" description={\n                            <React.Fragment>\n                                <p>Compare each line with <b>requested value</b>. If comparison matches <b>comparator</b>, then line is preproduced to the output. The comparison is made on an <b>ASCII</b> basis.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Comparator -</b> Specifies mathematical comparison.</li>\n                                    <li><b>Column - </b> sets a column specifically for comparison. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        }\n                    />\n                    <Compare addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReplaceTool(props) {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [replaceInColumn, setReplaceInColumn] = useState(\"\");\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(\"\");\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n\n        if (replaceFind === replaceReplace && replaceFind !== \"\") {\n            setReplaceReplaceError(true);\n        }\n\n        if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n            setReplaceDelimiterError(true);\n        }\n\n        if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n            setReplaceColumnError(true);\n        }\n\n        if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n            props.addTool({toolname: \"replace\", find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n            setReplaceInColumn(\"\");\n            setReplaceColumnDelimiter(\"\");\n            setReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"replace-occurence-label\"\n                      id=\"replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"replace-case-label\"\n                      id=\"replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"replace-find\"\n                    label=\"Find\"\n                    value={replaceFind}\n                    required={true}\n                    onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={replaceFindError === true}\n                    helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-replace\"\n                    label=\"Replace\"\n                    value={replaceReplace}\n                    onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                    className={classes.textField}\n                    error={replaceReplaceError === true}\n                    helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-replace\"\n                    className={classes.button}\n                    onClick={() => handleReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ReplaceTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexReplaceTool(props) {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(\"\");\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(\"\");\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(\"\");\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(\"\");\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    const handleRegexReplace = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexReplaceFind);\n        } \n        catch (e) {\n            setRegexReplaceFindError(true);\n            validExpression = false;\n        }\n\n        if (regexReplaceFind === \"\"){\n            setRegexReplaceFindError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n            setRegexReplaceDelimiterError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n            setRegexReplaceColumnError(true);\n        }\n\n        if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexReplace\", find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex replace added into the pipeline.\");\n            setRegexReplaceFind(\"\");\n            setRegexReplaceReplace(\"\");\n            setRegexReplaceInColumn(\"\");\n            setRegexReplaceColumnDelimiter(\"\");\n            setRegexReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-occurence-label\"\n                      id=\"regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-case-label\"\n                      id=\"regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-replace-find\"\n                    label=\"Regular expression\"\n                    value={regexReplaceFind}\n                    required={true}\n                    onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={regexReplaceFindError === true}\n                    helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-replace\"\n                    label=\"Replace\"\n                    value={regexReplaceReplace}\n                    onChange={event => setRegexReplaceReplace(event.target.value)}\n                    className={classes.textField}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-replace\"\n                    className={classes.button}\n                    onClick={() => handleRegexReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexReplaceTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Replace from \"./Tools/Replace\";\nimport RegexReplace from \"./Tools/RegexReplace\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindAndReplaceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Replace\" description={\n                            <React.Fragment>\n                                <p>Searches for <b>pattern</b> in each line independently and replace them with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Replace addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex replace\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently and replace matches with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexReplace addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindAndReplaceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterColumnsTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"remove\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleFilterColumns = () => {\n        if (position === \"\" || position <= 0){\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"filterColumns\", variant: variant, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Filter columns added into the pipeline.\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"filter-columns-variant-label\"\n                  id=\"filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <TextField\n                id=\"filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.textField}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-columns\"\n                className={classes.button}\n                onClick={() => handleFilterColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(\"empty\");\n\n    const handleRemoveLines = () => {\n        props.addTool({toolname: \"filterLines\", content: content});\n        props.showAlert(\"success\", \"Success: Filter lines added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-lines-content-label\">Content</InputLabel>\n                <Select\n                  labelId=\"filter-lines-content-label\"\n                  id=\"filter-lines-content\"\n                  className={classes.opts}\n                  value={content}\n                  onChange={(event) => setContent(event.target.value)}\n                >\n                    <MenuItem value={\"empty\"}>Empty</MenuItem>\n                    <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-lines\"\n                className={classes.button}\n                onClick={() => handleRemoveLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterLinesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CutLinesTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"head\");\n    const [count, setCount] = useState(\"\");\n\n    const [countError, setCountError] = useState(false);\n\n    const handleCutLines = () => {\n        if (count === \"\" || count <= 0) {\n            setCountError(true);\n        }\n\n        if (count !== \"\" && count > 0) {\n            props.addTool({toolname: \"cutLines\", variant: variant, count: count});\n            props.showAlert(\"success\", \"Success: Cut lines added into the pipeline.\");\n            setCount(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding cut lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"cut-lines-variant-label\"\n                    id=\"cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-cut-lines\"\n                className={classes.button}\n                onClick={() => handleCutLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default CutLinesTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction TrimTool(props) {\n    const classes = useStyles();\n\n    const handleTrim = () => {\n        props.addTool({toolname: \"trim\"});\n        props.showAlert(\"success\", \"Success: Trim added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-trim\"\n                onClick={() => handleTrim()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default TrimTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction RemoveExtraSpacesTool(props) {\n    const classes = useStyles();\n\n    const handleRemoveExtraSpaces = () => {\n        props.addTool({toolname: \"removeExtraSpaces\"});\n        props.showAlert(\"success\", \"Success: Remove extra spaces added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-remove-extra-spaces\"\n                onClick={() => handleRemoveExtraSpaces()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default RemoveExtraSpacesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nfunction UniqueTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"merge\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [countPrefix, setCountPrefix] = useState(false);\n    const [countDisabled, setCountDisabled] = useState(false);\n\n    const handleUnique = () => {\n        props.addTool({toolname: \"unique\", variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n        props.showAlert(\"success\", \"Success: Unique added into the pipeline.\");\n    }\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"unique-variant-label\"\n                  id=\"unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"unique-case-label\"\n                  id=\"unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-unique\"\n                className={classes.button}\n                onClick={() => handleUnique()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default UniqueTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport FilterColumns from \"./Tools/FilterColumns\";\nimport FilterLines from \"./Tools/FilterLines\";\nimport CutLines from \"./Tools/CutLines\";\nimport Trim from \"./Tools/Trim\";\nimport RemoveExtraSpaces from \"./Tools/RemoveExtraSpaces\";\nimport Unique from \"./Tools/Unique\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ReduceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Unique\" description={\n                            <React.Fragment>\n                                <p>Filter adjacent matching lines from input, writing to output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Merge</b> matching lines are merged to the first occurrence. Unique does not detect repeated lines unless they are adjacent. You may want to sort the input first.<br /><b>Unique only</b> only print unique lines.<br /><b>Duplicate only</b> only print duplicate lines, one for each group.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Unique addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter columns\" description={\n                            <React.Fragment>\n                                <p>Removes or cuts a column from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Remove</b> removes a column from the text.<br /><b>Cut</b> cuts a column from the text.</li>\n                                    <li><b>Position - </b> sets the column position to perform the operation. Numbering starts from 1.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter lines\" description={\n                            <React.Fragment>\n                                <p>Removes lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> sets the content of the row to be filtered.<br /><b>Empty</b> removes all lines without content.<br /><b>White characters</b> removes all lines containing white characters like spaces, tabs, etc.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Cut lines\" description={\n                            <React.Fragment>\n                                <p>Cuts lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Head</b> cut lines from the beginning of the text.<br /><b>Tail</b> cut lines from the end of the text.</li>\n                                    <li><b>Count - </b> sets the number of lines to be cutted.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <CutLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Remove extra spaces\" description={\n                                <React.Fragment>\n                                    <p>Removes all adjacent spaces from text and replace them with single space.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <RemoveExtraSpaces addTool={addTool} showAlert={showAlert} />\n                    </div>\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Trim\" description={\n                                <React.Fragment>\n                                    <p>Removes all leading and trailing spaces on each line.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <Trim addTool={addTool} showAlert={showAlert} />\n                    </div>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ReduceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, Collapse } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexEnd: {\n        marginTop: \"16px\",\n        display: \"flex\",\n        alignItems: \"flex-end\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    collapse: {\n        width: \"100%\",\n        flex: 1,\n    },\n}));\n\nfunction InsertColumnTool(props) {\n    const classes = useStyles();\n\n    const [focused, setFocused] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleInsertColumn = () => {\n        if (content === \"\"){\n            setContentError(true);\n        }\n\n        if (position === \"\" || position <= 0) {\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"insertColumn\", content: content, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Insert column added into the pipeline.\");\n            setContent(\"\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n            setFocused(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding insert column into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <TextField\n                    id=\"insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    required={true}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"insert-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexEnd}>\n                <Collapse className={classes.collapse} in={focused} collapsedHeight={\"50px\"} >\n                    <TextField\n                        id=\"insert-column-content\"\n                        label=\"Content\"\n                        value={content}\n                        required={true}\n                        variant=\"filled\"\n                        onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                        className={classes.textField}\n                        style={{width: \"100%\"}}\n                        error={contentError === true}\n                        helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                        multiline={true}\n                        rows={10}\n                        onFocus={() => setFocused(true)}\n                        onBlur={() => content === \"\" ? setFocused(false) : null}\n                    />\n                </Collapse>\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-insert-column\"\n                    className={classes.button}\n                    onClick={() => handleInsertColumn()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default InsertColumnTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SwapColumnsTool(props) {\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(\"\");\n    const [secondPosition, setSecondPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleSwapColumns = () => {\n        if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n            setFirstPositionError(true);\n        }\n\n        if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n            setSecondPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n            props.addTool({toolname: \"swapColumns\", first: firstPosition, second: secondPosition, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Swap columns added into the pipeline.\");\n            setFirstPosition(\"\");\n            setSecondPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding swap columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-swap-columns\"\n                className={classes.button}\n                onClick={() => handleSwapColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SwapColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ConvertCaseTool(props) {\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(\"uppercase\");\n\n    const handleConvertCase = () => {\n        props.addTool({toolname: \"convertCase\", textCase: textCase});\n        props.showAlert(\"success\", \"Success: Convert case added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"convert-case-case-label\"\n                  id=\"convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-convert-case\"\n                className={classes.button}\n                onClick={() => handleConvertCase()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ConvertCaseTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SortTool(props) {\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(\"ascending\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(false);\n\n    const handleSort = () => {\n        props.addTool({toolname: \"sort\", order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n        props.showAlert(\"success\", \"Success: Sort added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"sort-order-label\"\n                  id=\"sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"sort-case-label\"\n                  id=\"sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-sort\"\n                className={classes.button}\n                onClick={() => handleSort()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SortTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReverseTool(props) {\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(\"vertical\");\n\n    const handleReverse = () => {\n        props.addTool({toolname: \"reverse\", direction: direction});\n        props.showAlert(\"success\", \"Success: Reverse added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"reverse-direction-label\"\n                  id=\"reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-reverse\"\n                className={classes.button}\n                onClick={() => handleReverse()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ReverseTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"400px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction LineNumbersTool(props) {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(\"\");\n    const [variant, setVariant] = useState(\"all\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const handleLineNumbers = () => {\n        props.addTool({toolname: \"lineNumbers\", variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n        props.showAlert(\"success\", \"Success: Line numbers added into the pipeline.\");\n        setStartingNumber(\"\");\n        setDelimiter(\"\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"line-numbers-variant-label\"\n                  id=\"line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"all\"}>All lines</MenuItem>\n                    <MenuItem value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-line-numbers\"\n                className={classes.button}\n                onClick={() => handleLineNumbers()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default LineNumbersTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport InsertColumn from \"./Tools/InsertColumn\";\nimport SwapColumns from \"./Tools/SwapColumns\";\nimport ConvertCase from \"./Tools/ConvertCase\";\nimport Sort from \"./Tools/Sort\";\nimport Reverse from \"./Tools/Reverse\";\nimport LineNumbers from \"./Tools/LineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ModifyTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Insert column\" description={\n                            <React.Fragment>\n                                <p>Insert column with specified <b>content</b> on given position. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> specifies content of the new column.</li>\n                                    <li><b>Position -</b> determines the position of the new column. Numbering starts from 1.</li>\n                                    <li><b>Delimiter - </b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <InsertColumn addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Sort\" description={\n                            <React.Fragment>\n                                <p>Sort lines of text. The sort is made on an <b>ASCII</b> basis character by character from the beginning of line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Order -</b> determines the order of sort.<br /><b>Ascending</b> is arranged from smallest to the largest value.<br /><b>Descending</b> is arranged from the largest value to the smallest.</li>\n                                    <li><b>Case -</b> specify if sort is ignoring capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Sort addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Swap columns\" description={\n                            <React.Fragment>\n                                <p>Swap columns in text on given positions. Numbering of positions starts from 1. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>First position -</b> specifies the location of the first column.</li>\n                                    <li><b>Second position -</b> specifies the location of the second column.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <SwapColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Line numbers\" description={\n                            <React.Fragment>\n                                <p>Adds a line number to the begging of the line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> determines on which lines the numbers will be added.<br /><b>Non empty</b> adds to all non-empty lines.<br /><b>All</b> add numbers to all lines.</li>\n                                    <li><b>Starting number -</b> defines the starting number. This number is increasing by each next line. Default value is 1 if not specified.</li>\n                                    <li><b>Delimiter -</b> sets content to be added after line number. Default is space if not specified.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <LineNumbers addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Reverse\" description={\n                            <React.Fragment>\n                                <p>Reverse text from the inptut and prints to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> sets the direction of rotation.<br /><b>Horizontal</b> each characters in line is reversed (from left to right).<br /><b>Vertical</b> reverse the order of lines (from top to bottom).</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Reverse addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Convert case\" description={\n                            <React.Fragment>\n                                <p>Convert case of all letters in text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Case -</b> defines case of letters.<br /><b>Upper case</b> converts a text to uppercase letters.<br /><b>Lower case</b> converts a text to lowercase letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <ConvertCase addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ModifyTab);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { Search, Build, FindReplace, RemoveCircleOutline } from \"@material-ui/icons\";\nimport FindTab from \"./Tabs/FindTab\";\nimport ReplaceTab from \"./Tabs/ReplaceTab\";\nimport ReduceTab from \"./Tabs/ReduceTab\";\nimport ModifyTab from \"./Tabs/ModifyTab\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: lightBlue[600],\n      light: lightBlue[300],\n      dark: lightBlue[900],\n    },\n    type: 'dark',\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px',\n    marginBottom: '20px',\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: 'rgb(50,50,50)',\n    color: 'white',\n  },\n  fullWidth: {\n    width: \"100% !important\",\n  },\n}));\n\nconst ToolTabs = React.memo(({ showAlert, addTool }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const fullWidth = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={`${classes.root} ${fullWidth && classes.fullWidth}`}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"tabs\"\n            scrollButtons=\"auto\"\n            centered\n          >\n            <Tab icon={<Search />} label=\"Find\" {...a11yProps(0)} />\n            <Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n            <Tab icon={<RemoveCircleOutline />} label=\"Reduce\" {...a11yProps(2)} />\n            <Tab icon={<Build />} label=\"Modify\" {...a11yProps(3)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel theme={theme} value={value} index={0}>\n          <FindTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ReplaceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <ReduceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <ModifyTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel> \n      </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ToolTabs;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(props.tool.expression);\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [matchInColumn, setMatchInColumn] = useState(props.tool.inColumn);\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (matchFind === \"\"){\n                setMatchFindError(true);\n            }\n    \n            if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n                setMatchDelimiterError(true);\n            }\n    \n            if (matchInColumn !== \"\" && matchInColumn <= 0) {\n                setMatchColumnError(true);\n            }\n            \n            if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n                props.updateTool({...props.tool, expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-match-occurence-label\"\n                      id=\"edit-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-match-case-label\"\n                      id=\"edit-match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-match-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={matchFind}\n                required={true}\n                onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                error={matchFindError === true}\n                helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(props.tool.expression);\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(props.tool.inColumn);\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexMatchFind);\n            } \n            catch (e) {\n                setRegexMatchFindError(true);\n                validExpression = false;\n            }\n\n            if (regexMatchFind === \"\"){\n                setRegexMatchFindError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n                setRegexMatchDelimiterError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n                setRegexMatchColumnError(true);\n            }\n            \n            if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-occurence-label\"\n                      id=\"edit-regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-case-label\"\n                      id=\"edit-regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-match-find\"\n                label=\"Regular expression\"\n                className={classes.textField}\n                value={regexMatchFind}\n                required={true}\n                onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                error={regexMatchFindError === true}\n                helperText={regexMatchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(props.tool.find);\n    const [replaceReplace, setReplaceReplace] = useState(props.tool.replace);\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [replaceInColumn, setReplaceInColumn] = useState(props.tool.inColumn);\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (replaceFind === \"\"){\n                setReplaceFindError(true);\n            }\n    \n            if (replaceFind === replaceReplace && replaceFind !== \"\") {\n                setReplaceReplaceError(true);\n            }\n    \n            if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n                setReplaceDelimiterError(true);\n            }\n    \n            if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n                setReplaceColumnError(true);\n            }\n    \n            if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n                props.updateTool({...props.tool, find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-occurence-label\"\n                      id=\"edit-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-case-label\"\n                      id=\"edit-replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={replaceFind}\n                required={true}\n                onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                error={replaceFindError === true}\n                helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={replaceReplace}\n                onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                error={replaceReplaceError === true}\n                helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(props.tool.find);\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(props.tool.replace);\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(props.tool.inColumn);\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexReplaceFind);\n            } \n            catch (e) {\n                setRegexReplaceFindError(true);\n                validExpression = false;\n            }\n\n            if (regexReplaceFind === \"\"){\n                setRegexReplaceFindError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n                setRegexReplaceDelimiterError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n                setRegexReplaceColumnError(true);\n            }\n\n            if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-occurence-label\"\n                      id=\"edit-regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-case-label\"\n                      id=\"edit-regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={regexReplaceFind}\n                required={true}\n                onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                error={regexReplaceFindError === true}\n                helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-regex-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={regexReplaceReplace}\n                onChange={event => setRegexReplaceReplace(event.target.value)}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditCompare = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(props.tool.value);\n    const [comparator, setComparator] = useState(props.tool.comparator)\n    const [inColumn, setInColumn] = useState(props.tool.inColumn);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {      \n            if (compareValue === \"\"){\n                setValueError(true);\n            }\n    \n            if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (inColumn !== \"\" && inColumn <= 0) {\n                setInColumnError(true);\n            }\n    \n            if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n                props.updateTool({...props.tool, value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"edit-compare-comparator-label\"\n                      id=\"edit-compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-compare-value\"\n                label=\"Compare value\"\n                value={compareValue}\n                required={true}\n                onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                className={classes.textField}\n                error={valueError === true}\n                helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCompare;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditFilterColumns = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (position === \"\" || position <= 0){\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, variant: variant, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-filter-columns-variant-label\"\n                  id=\"edit-filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterColumns;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditFilterLines = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, content: content});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-lines-content-label\">Content</InputLabel>\n                <Select\n                  labelId=\"edit-filter-lines-content-label\"\n                  id=\"edit-filter-lines-content\"\n                  className={classes.opts}\n                  value={content}\n                  onChange={(event) => setContent(event.target.value)}\n                >\n                    <MenuItem value={\"empty\"}>Empty</MenuItem>\n                    <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n    },\n}));\n\nconst EditCutLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [count, setCount] = useState(props.tool.count);\n\n    const [countError, setCountError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (count === \"\" || count <= 0) {\n                setCountError(true);\n            }\n            if (count !== \"\" && count > 0) {\n                props.updateTool({...props.tool, variant: variant, count: count});\n                props.close();\n            }     \n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"edit-cut-lines-variant-label\"\n                    id=\"edit-cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCutLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditInsertColumn = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"\"){\n                setContentError(true);\n            }\n    \n            if (position === \"\" || position <= 0) {\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, content: content, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                    id=\"edit-insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n            <TextField\n                id=\"edit-insert-column-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={position === \"\" ? false : true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-insert-column-content\"\n                label=\"Content\"\n                value={content}\n                required={true}\n                variant=\"filled\"\n                onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                className={classes.textField}\n                style={{width: \"100%\", marginTop: \"16px\"}}\n                error={contentError === true}\n                helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                multiline={true}\n                rows={10}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditInsertColumn;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditSwapColumns = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(props.tool.first);\n    const [secondPosition, setSecondPosition] = useState(props.tool.second);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n                setFirstPositionError(true);\n            }\n\n            if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n                setSecondPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n                props.updateTool({...props.tool, first: firstPosition, second: secondPosition, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"edit-swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditSwapColumns;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditConvertCase = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(props.tool.textCase);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, textCase: textCase});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-convert-case-case-label\"\n                  id=\"edit-convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditConvertCase;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n    flexCenter: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditSort = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(props.tool.order);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(props.tool.ignoreLeadingBlanks);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n            props.close();\n        }\n    }));\n\n    return (\n        <div className={classes.flexCenter}>\n            <FormControl>\n                <InputLabel id=\"edit-sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"edit-sort-order-label\"\n                  id=\"edit-sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-sort-case-label\"\n                  id=\"edit-sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"edit-sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n        </div>\n    );\n});\n\nexport default EditSort;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditReverse = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(props.tool.direction);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, direction: direction});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"edit-reverse-direction-label\"\n                  id=\"edit-reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditReverse;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditUnique = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [countPrefix, setCountPrefix] = useState(props.tool.countPrefix);\n    const [countDisabled, setCountDisabled] = useState(props.tool.variant === \"merge\" ? false : true);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n            props.close();\n        }\n    }));\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-unique-variant-label\"\n                  id=\"edit-unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-unique-case-label\"\n                  id=\"edit-unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\", flex: 1}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"edit-unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditUnique;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditLineNumbers = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(props.tool.startingNumber);\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-line-numbers-variant-label\"\n                  id=\"edit-line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"all\"}>All lines</MenuItem>\n                    <MenuItem value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"edit-line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditLineNumbers;","import React, { useRef } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, useMediaQuery, Tooltip, makeStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Done, Close, Edit } from \"@material-ui/icons\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport EditMatch from \"./Tools/EditMatch\";\nimport EditRegexMatch from \"./Tools/EditRegexMatch\";\nimport EditReplace from \"./Tools/EditReplace\";\nimport EditRegexReplace from \"./Tools/EditRegexReplace\";\nimport EditCompare from \"./Tools/EditCompare\";\nimport EditFilterColumns from \"./Tools/EditFilterColumns\";\nimport EditFilterLines from \"./Tools/EditFilterLines\";\nimport EditCutLines from \"./Tools/EditCutLines\";\nimport EditInsertColumn from \"./Tools/EditInsertColumn\";\nimport EditSwapColumns from \"./Tools/EditSwapColumns\";\nimport EditConvertCase from \"./Tools/EditConvertCase\";\nimport EditSort from \"./Tools/EditSort\";\nimport EditReverse from \"./Tools/EditReverse\";\nimport EditUnique from \"./Tools/EditUnique\";\nimport EditLineNumbers from \"./Tools/EditLineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        borderBottom: \"solid 1px grey\",\n        marginBottom: \"15px\",\n        paddingBottom: \"8px\",\n        color: \"#039be5\",\n    },\n    titleIcon: {\n        marginRight: \"15px\",\n        color: \"#039be5\",\n    },\n    dialogActions: {\n        paddingTop: \"0px\",\n    },\n    confirmIcon: {\n        color: \"#43a047\",\n    },\n    closeIcon: {\n        color: \"red\",\n    },\n}));\n\nfunction EditDialog(props) {\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const toolRef = useRef();\n\n    const mapToolname = (tool) => {\n        switch (tool.toolname) {\n            case \"match\": return \"Match\";\n            case \"regexMatch\": return \"Regex match\";\n            case \"replace\": return \"Replace\";\n            case \"regexReplace\": return \"Regex replace\";\n            case \"compare\": return \"Compare\";\n            case \"filterColumns\": return \"Filter columns\";\n            case \"filterLines\": return \"Filter lines\";\n            case \"cutLines\": return \"Cut lines\";\n            case \"insertColumn\": return \"Insert column\";\n            case \"swapColumns\": return \"Swap columns\";\n            case \"convertCase\": return \"Convert case\";\n            case \"sort\": return \"Sort\";\n            case \"reverse\": return \"Reverse\";\n            case \"unique\": return \"Unique\";\n            case \"lineNumbers\": return \"Line numbers\";\n            default: return;\n        }\n    };\n\n    /**\n     * Vypis html kontextu podle zvoleneho nastroje\n    */\n    const mapToolContent = (tool) => {\n        switch (tool.toolname) {\n            case \"match\":\n                return (\n                    <EditMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexMatch\":\n                return (\n                    <EditRegexMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"replace\":\n                return (\n                    <EditReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexReplace\":\n                return (\n                    <EditRegexReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"compare\":\n                return (\n                    <EditCompare ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterColumns\":\n                return (\n                    <EditFilterColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterLines\":\n                return (\n                    <EditFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"cutLines\":\n                return (\n                    <EditCutLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"insertColumn\":\n                return (\n                    <EditInsertColumn ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"swapColumns\":\n                return (\n                    <EditSwapColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"convertCase\":\n                return (\n                    <EditConvertCase ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"sort\":\n                return (\n                    <EditSort ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"reverse\":\n                return (\n                    <EditReverse ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"unique\":\n                return (\n                    <EditUnique ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"lineNumbers\":\n                return (\n                    <EditLineNumbers ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            default:\n                return;\n        }\n    };\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                <Edit className={classes.titleIcon} fontSize=\"large\" />\n                {mapToolname(props.tool)}\n            </DialogTitle>\n            <DialogContent>\n                {mapToolContent(props.tool)}\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <Tooltip className={classes.tooltip} title=\"Close\">\n                    <IconButton className={classes.closeIcon} onClick={() => props.close()}>\n                        <Close fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Confirm\">\n                    <IconButton className={classes.confirmIcon} onClick={() => toolRef.current.handleUpdate()}>\n                        <Done fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n            </DialogActions>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default EditDialog;","import React, { useState, useRef } from \"react\";\nimport { List, ListItem, makeStyles, IconButton, Menu, MenuItem, Tooltip, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Settings, Delete, Visibility, VisibilityOff, Edit, MoreVert } from \"@material-ui/icons\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport EditDialog from \"./Edits/EditDialog\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport { Resizable } from \"re-resizable\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        //width: \"95%\",\n        minWidth: \"95%\",\n        maxWidth: \"95%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        marginTop: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"rgb(50,50,50)\",\n        color: \"white\",\n        borderBottom: \"1px solid rgb(30, 30, 30)\",\n    },\n    fullWidth: {\n        width: \"100% !important\",\n        minWidth: \"100% !important\",\n        maxWidth: \"100% !important\",\n    },\n    title: {\n        height: \"22px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        fontSize: \"15px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    listItem: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n    },\n    itemDeactivated: {\n        color: \"grey !important\",\n    },\n    content: {\n        //height: \"208px\",\n        overflow: \"auto\",\n        flexGrow: \"1\",\n    },\n    toolName: {\n        color: \"#ff5d00\",\n        fontWeight: \"bold\",\n        marginRight: \"8px\",\n    },\n    toolText: {\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\",\n        height: \"100%\",\n        width: \"100%\",\n        cursor: \"grab\",\n    },\n    violetWord: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n    },\n    lightGreenWord: {\n        color: \"#a4ad00\",\n        fontWeight: \"bold\",\n    },\n    greenWord: {\n        color: \"#22ba09\",\n        fontWeight: \"bold\",\n    },\n    blueWord: {\n        color: \"#089dcf\",\n        fontWeight: \"bold\",\n    },\n    lightBlueWord: {\n        color: \"#0fbbff\",\n        fontWeight: \"bold\",\n    },\n    yellowWord: {\n        color: \"#ffcc00\",\n        fontWeight: \"bold\",\n    },\n    darkYellowWord: {\n        color: \"#ffb700\",\n        fontWeight: \"bold\",\n    },\n    redWord: {\n        color: \"#bd0032\",\n        fontWeight: \"bold\",\n    },\n    lightRedWord: {\n        color: \"#ff0a68\",\n        fontWeight: \"bold\",\n    },\n    greenBlueWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    turquoiseWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    lightTurquoiseWord: {\n        color: \"#14db78\",\n        fontWeight: \"bold\",\n    },\n    listIcon: {\n        marginRight: \"15px\",\n        color: \"#e0e0e0\",\n    },\n    marginLR: {\n        marginLeft: \"8px\",\n        marginRight: \"8px\",\n    },\n}));\n\nfunction mapComparator(comparator) {\n    switch (comparator) {\n        case \"gt\": return \"greater than\";\n        case \"ge\": return \"greater equal\";\n        case \"lt\": return \"less than\";\n        case \"le\": return \"less equal\";\n        case \"eq\": return \"equal\";\n        default: return \"\";\n    }\n};\n\nfunction mapCase(textCase) {\n    switch (textCase) {\n        case \"uppercase\": return \"upper case\";\n        case \"lowercase\": return \"lower case\";\n        default: return \"\";\n    }\n}\n\nfunction mapFilterLinesContent(content) {\n    switch (content) {\n        case \"empty\":\n            return \"with empty content\";\n        case \"whiteChars\":\n            return \"with white characters\";\n        default:\n            return \"\";\n    }\n}\n\nfunction mapUniqueVariant(variant) {\n    switch (variant) {\n        case \"merge\":\n            return \"merge\";\n        case \"unique\":\n            return \"unique only\";\n        case \"duplicate\":\n            return \"duplicate only\";\n        default:\n            return \"\";\n    }\n}\n\nfunction isEditable(tool) {\n    const nonEditable = [\"trim\", \"removeExtraSpaces\"];\n    \n    return nonEditable.includes(tool.toolname) ? false : true;\n}\n\nconst ToolList = React.memo(({ tools, removeTool, reactiveTool, updateTool, sort }) => {\n    const classes = useStyles();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const theme = useTheme();   // useMediaQuery\n    const fullWidth = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const toolToEdit = useRef({});\n\n    const openEdit = (tool) => {\n        toolToEdit.current = tool;\n        setOpenEditDialog(true);\n    }\n\n    const mapTool = (tool) => {\n        switch (tool.toolname) {\n            case \"regexMatch\":\n            case \"match\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"match\" ?  \"Match\" :\"Regex match\"}</span> \n                        <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"regexReplace\":\n            case \"replace\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"replace\" ?  \"Replace\" : \"Regex replace\"}</span>\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.find}\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>with</span> \n                        {tool.replace}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"compare\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Compare</span>\n                        <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{mapComparator(tool.comparator)}</span>\n                        {tool.value}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"filterColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter columns</span>\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>\n                            {tool.variant + \" \"}\n                            at\n                        </span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"filterLines\":\n                    return (\n                        <React.Fragment>\n                            <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter lines</span>\n                            <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>{mapFilterLinesContent(tool.content)}</span>\n                        </React.Fragment>\n                    );\n            case \"cutLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Cut lines</span>\n                        {tool.count}\n                        <span className={`${classes.lightGreenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>{\n                            tool.variant === \"head\" ? \"from the beggining\" : \"from the end\"\n                        }</span>\n                    </React.Fragment>\n                );\n            case \"insertColumn\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Insert column</span>\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>starting with</span>\n                        {tool.content.split('\\n')[0] + \"...\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>at</span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"swapColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Swap columns</span>\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>at</span>\n                        {tool.first + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>and</span>\n                        {tool.second + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"convertCase\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Convert case</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>to</span>\n                        {mapCase(tool.textCase)}\n                    </React.Fragment>\n                );\n            case \"trim\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Trim</span>\n                    </React.Fragment>\n                );\n            case \"removeExtraSpaces\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Remove extra spaces</span>\n                    </React.Fragment>\n                );\n            case \"sort\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Sort</span>\n                        <span className={`${classes.lightBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.order}\n                            {tool.casesensitive === true ? \" case sensitive \" : \" case isensitive \"}\n                            {tool.ignoreLeadingBlanks === true ? \" ignoring leading blanks\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"reverse\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Reverse</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`}>{tool.direction}</span>\n                    </React.Fragment>\n                );\n            case \"unique\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Unique</span>\n                        <span className={`${classes.lightRedWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \"}\n                            {mapUniqueVariant(tool.variant)}\n                            {tool.variant === \"merge\" && tool.countPrefix === true ? \" with count prefix\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"lineNumbers\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Line numbers</span>\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.variant + \" starting with\"}</span>\n                        {tool.startingNumber}\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>after that</span>\n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            default:\n                return;\n        }\n    }\n\n    const DragHandle = SortableHandle(({tool}) => (\n        <div className={classes.toolText}>\n          {mapTool(tool)}\n        </div>\n    ));\n\n    const SortableItem = SortableElement(({ tool }) => (\n        <ListItem key={tool.id} ContainerComponent=\"li\" divider={true} className={`${classes.listItem} ${!(tool.active) && classes.itemDeactivated}`}>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {properties => (\n                    <React.Fragment>\n                        <Tooltip title=\"Properties\">\n                            <IconButton \n                                className={classes.listIcon} \n                                variant=\"contained\" \n                                size=\"small\" \n                                {...bindTrigger(properties)}\n                            >\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu {...bindMenu(properties)}>\n                            {isEditable(tool) &&\n                                <MenuItem onClick={() => openEdit(tool)}>\n                                    <Edit className={classes.listIcon} /> Edit\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={() => reactiveTool(tool)}>\n                                {tool.active ? \n                                    (<React.Fragment> <VisibilityOff className={classes.listIcon} /> Deactivate </React.Fragment>) : \n                                    (<React.Fragment> <Visibility className={classes.listIcon} /> Activate </React.Fragment>)}\n                            </MenuItem>\n                            <MenuItem onClick={() => removeTool(tool)}>\n                                <Delete className={classes.listIcon} /> Delete\n                            </MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n            <DragHandle tool={tool}/>\n        </ListItem>\n    ));\n\n    const SortableListContainer = SortableContainer(({ tools }) => (\n        <List component=\"ul\" className={classes.list}>\n                {tools.map((tool, index) => (\n                    <SortableItem key={tool.id} index={index} tool={tool} />\n                ))}\n        </List>\n    ));\n\n    return (\n        <Resizable \n            className={`${classes.root} ${fullWidth && classes.fullWidth}`}\n            defaultSize={{ width: \"95%\", height: \"250px\" }}\n            minHeight={100}\n            enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n        >\n            <div className={classes.title}>\n                <Settings style={{fontSize: \"22px\", paddingLeft: \"5px\"}}/>\n                <div className={classes.titleLabel}>Pipeline</div>\n                <div />\n            </div>\n            <div className={classes.content}>\n                <SortableListContainer\n                    tools={tools}\n                    lockAxis='y'\n                    useDragHandle={true}\n                    onSortEnd={sort}\n                    helperClass={\"SortableHelper\"}\n                />\n            </div>\n            {openEditDialog && \n                <EditDialog \n                    open={openEditDialog}\n                    close={() => setOpenEditDialog(false)}\n                    tool={toolToEdit.current}\n                    updateTool={updateTool}\n            />}\n        </Resizable>\n    );\n});\n\nexport default ToolList;","import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\n\nconst variantIcon = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: blue[500],\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 25,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n  \nfunction CustomSnackbarContent(props) {\n    const classes = useStyles();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            message={\n                <span id=\"message-id\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                \n                    onClick={onClose}\n                >\n                    <Close />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n  \nCustomSnackbarContent.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nconst Alerts = React.memo(forwardRef(({ prop }, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n    const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n    const snackbarQueue = useRef([]);\n\n    useImperativeHandle(ref, () => ({\n        openSnackbar(variant, message) {\n            snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n        \n            if (showSnackbar) {\n                setShowSnackbar(false);\n            }\n            else {\n                processSnackbarQueue();\n            }\n          }\n    }));\n\n    const processSnackbarQueue = () => {\n        if (snackbarQueue.current.length > 0) {\n            setSnackbarInfo(snackbarQueue.current.shift());\n            setShowSnackbar(true);\n        }\n    };\n    \n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setShowSnackbar(false);\n    };\n    \n    const handleExited = () => {\n        processSnackbarQueue();\n    };\n\n    return (\n        <Snackbar\n            key={snackbarInfo ? snackbarInfo.key : undefined}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            open={showSnackbar}\n            autoHideDuration={2000}\n            onClose={closeSnackbar}\n            onExited={handleExited}\n            ContentProps={{ 'aria-describedby': 'message-id' }} \n        >\n            <CustomSnackbarContent\n                message={snackbarInfo ? snackbarInfo.message : undefined}\n                variant={snackbarInfo ? snackbarInfo.variant : undefined}\n                onClose={closeSnackbar}\n            />\n        </Snackbar>\n    );\n  }));\n\n  export default Alerts;","let lastID = 0;\n\nexport default function() {\n    lastID++;\n    return lastID;\n}","/**\n * https://medium.com/prolanceer/optimizing-react-app-performance-using-web-workers-79266afd4a7\n */\nexport default class WebWorker {\n    constructor (worker) {\n        const code = worker.toString();\n        const blob = new Blob(['('+code+')()']);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}","\nexport default () => {\n\n    // https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript\n    function regexEscape(regex) {\n        return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n      \n    /**\n     * Replace nastroj\n     * TODO: dodelat osetreni na undefined\n     */\n    function getMatchOptions(tool) {\n      if (tool.occurrence === \"all\") {\n          return tool.casesensitive === true ? \"g\" : \"gi\";\n      }\n      else {\n          return tool.casesensitive === true ? \"\" : \"i\";\n      }\n    }\n    \n    function replaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {\n                for (var i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else { \n                for (var z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function replaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    text[i].data = text[i].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (var x = 0; x < text.length; x++) {\n                    if (text[x].data === null) {\n                        continue;\n                    }\n\n                    if (text[x].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[x].data = text[x].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (var z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    function regexReplaceAll(lines, tool) {\n        var option = tool.casesensitive ? \"g\" : \"gi\";\n        var tmp = \"\";\n\n        for (let i = 0; i < lines.length; i++) {\n            tmp = lines[i].match(new RegExp(tool.find, option));\n\n            if (tmp === null) {\n                continue;\n            }\n\n            var specificMatch = true;\n            for (let j = 0; j < tmp.length; j++) {\n              if (tmp[j] === \"\" && tmp.length > 1) {\n                specificMatch = false;\n                break;\n              }\n            }\n\n            if (specificMatch === true) {\n                lines[i] = lines[i].replace(new RegExp(tool.find, option), tool.replace);\n                continue;\n            }\n            \n            var fullMatch = tmp[0].length === lines[i].length ? true : false;\n            if (fullMatch === true) {\n              lines[i] = tool.replace;\n            }\n            else {\n                lines[i] = lines[i].split(new RegExp(tool.find, option));\n                var firstChar = lines[i][0] === \"\" ? \"\" : tool.replace;\n                var lastChar = lines[i][lines[i].length - 1] === \"\" ? \"\" : tool.replace;\n                lines[i] = firstChar + lines[i].join(tool.replace) + lastChar;\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Regex replace nastroj\n     */\n    function regexReplaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var splitedText = text.split('\\n');\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                /*for (var y = 0; y < splitedText.length; y++) {  // TODO: otestovat na fullmatch\n                    splitedText[y] = splitedText[y].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return splitedText.join('\\n');*/\n                return regexReplaceAll(splitedText, tool).join('\\n');\n            }\n            else {                              // Pouze prvni vyskyt\n                for (let i = 0; i < splitedText.length; i++) {\n                    if (splitedText[i].match(new RegExp(tool.find, option)) !== null) {\n                        splitedText[i] = splitedText[i].replace(new RegExp(tool.find, option), tool.replace);\n                        return splitedText.join('\\n');\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = regexReplaceAll([columns[tool.inColumn - 1]], tool);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else {                              // Prvni vyskyt\n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function regexReplaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = regexReplaceAll([text[i].data], tool)[0];\n                    //text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[i].data = text[i].data.replace(new RegExp(tool.find, option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Match nastroj\n     */\n    function matchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            text = text.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option));\n            return text === null ? \"\" : text.join('\\n');\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n            var result = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            result += splitedText[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            return splitedText[z];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function matchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {        // Vsechny radky\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {  // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                    else {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                        else {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                            return text;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Regex match nastroj\n     */\n    function regexMatchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        var lines = text.split('\\n');\n        var result = \"\";\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else {\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            return lines[i];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function regexMatchInspectTool(text, tool) {    // TODO: osetreni na null\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) === null) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else { \n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    };\n\n    function filterColumnsTool(text, tool) {\n        text = text.split('\\n');\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return text.join('\\n');\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i] = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i] = \"\";\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    };\n\n    function filterColumnsInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i].data = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i].data = \"\";\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    };\n\n    /**\n     * Compare nastroj\n     */\n    function compareTool(text, tool) {\n        var lines = text.split('\\n');\n        var result = \"\";\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] > tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] > tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] >= tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] >= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] < tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] < tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < lines.length; i++) {\n                            if (lines[i] <= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < lines.length; i++) {\n                            columns = lines[i].split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (columns[tool.inColumn - 1] <= tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                    }\n                    return result.slice(0, -1);\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < lines.length; i++) {\n                                if (lines[i] === tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < lines.length; i++) {\n                                columns = lines[i].split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (columns[tool.inColumn - 1] === tool.value) {\n                                        result += lines[i] + '\\n';\n                                    }\n                                }\n                            }\n                        }\n                        return result.slice(0, -1);\n            default:\n                return text;\n        }\n    }\n\n    function compareInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data > tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] > tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data >= tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] >= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i] < tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] < tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            if (!(text[i].data <= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            columns = text[i].data.split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (!(columns[tool.inColumn - 1] <= tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                            else {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    return text;\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                if (!(text[i].data === tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                columns = text[i].data.split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (!(columns[tool.inColumn - 1] === tool.value)) {\n                                        text[i].data = null;\n                                    }\n                                }\n                                else {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * RemoveLines nastroj\n     */\n    function filterLinesTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                text = text.replace(/\\n+/g, '\\n');\n                break;\n            case \"whiteChars\":\n                text = text.replace(/^\\s*[\\r\\n]/gm, '');\n                text = text.replace(/[\\r\\n]\\s*$/g, '');\n                break;\n            default:\n                return text;\n        }\n        if (text.charAt(0) === '\\n') {\n            text = text.slice(1)\n        }\n        if (text.charAt(text.length - 1) === '\\n') {\n            text = text.slice(0, -1);\n        }\n        return text;\n    }\n\n    function filterLinesInspectTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"whiteChars\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.trim() === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Cut lines nastroj\n     */\n    function cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Insert column nastroj\n     */\n    function insertColumnTool(text, tool) {\n        text = text.split('\\n');\n        const givenColumn = tool.content.split('\\n');\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            columns = text[lineNumber].split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = columns.join(tool.delimiter);\n            lineNumber++;\n        }\n        while(lineNumber < givenColumn.length) {\n            text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = text[lineNumber].join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber] += tool.delimiter;\n            }\n            lineNumber++;\n        }\n        return text.join('\\n');\n    }\n\n    function insertColumnInspectTool(text, tool) {\n        const givenColumn = tool.content.split('\\n');\n        var givenColumnLine = 0;\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            if (text[lineNumber].data === null) {\n                lineNumber++;\n                continue;\n            }\n            columns = text[lineNumber].data.split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = columns.join(tool.delimiter);\n            givenColumnLine++;\n            lineNumber++;\n        }\n        while(givenColumnLine < givenColumn.length) {\n            text.push({number: lineNumber + 1, data: Array(tool.position - 1).fill(\"\")});\n            //text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].data.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = text[lineNumber].data.join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber].data += tool.delimiter;\n            }\n            givenColumnLine++;\n            lineNumber++;\n        }\n        return text;\n    }\n\n    /**\n     * Swap columns nastroj\n     */\n    function swapColumnsTool(text, tool) {\n        text = text.split('\\n');\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            column = text[i].split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i] = column.join(tool.delimiter);\n        }\n        return text.join('\\n');\n    }\n\n    function swapColumnsInspectTool(text, tool) {\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            column = text[i].data.split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i].data = column.join(tool.delimiter);\n        }\n        return text;\n    }\n\n    /**\n     * Convert case nastroj\n     */\n    function convertCaseTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                return text.toUpperCase();\n            case \"lowercase\":\n                return text.toLowerCase();\n            default:\n                return text;\n        }\n    }\n\n    function convertCaseInspectTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toUpperCase();\n                }\n                return text;\n            case \"lowercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toLowerCase();\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Trim nastroj\n     */\n    function trimTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].trim();\n        }\n\n        return lines.join('\\n');\n    }\n\n    function trimInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.trim();\n        }\n        return text;\n    }\n\n    /**\n     * Remove extra spaces nastroj\n     */\n    function removeExtraSpacesTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].replace(/\\s+/g, ' ');\n        }\n\n        return lines.join('\\n');\n    }\n\n    function removeExtraSpacesInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.replace(/\\s+/g, ' ');\n        }\n        return text;\n    }\n\n    /**\n     * Sort nastroj\n     * TODO: Mozna optimalizace porovnavaci funkce\n     */\n    function sortTool(text, tool) {\n        const compare = (a, b) => {\n            if (tool.casesensitive === false) {\n                a = a.toUpperCase();\n                b = b.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a = a.trim();\n                b = b.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a < b) {\n                    return -1;\n                }\n                if (a > b) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a > b) {\n                    return -1;\n                }\n                if (a < b) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n\n        text = text.split('\\n');\n        text.sort(compare);\n        return text.join('\\n');\n    }\n\n    function sortInspectTool(text, tool) {\n        const compareData = (a, b) => {\n            if (a.data === null) {\n                return 1;\n            }\n            if (b.data === null) {\n                return -1;\n            }\n            if (tool.casesensitive === false) {\n                a.data = a.data.toUpperCase();\n                b.data = b.data.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a.data = a.data.trim();\n                b.data = b.data.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a.data < b.data) {\n                    return -1;\n                }\n                if (a.data > b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a.data > b.data) {\n                    return -1;\n                }\n                if (a.data < b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n        text =text.sort(compareData);\n        return text;\n    }\n\n    /**\n     * Reverse nastroj\n     */\n    function reverseTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = text[i].split('');\n                    text[i] = text[i].reverse();\n                    text[i] = text[i].join('');\n                }\n                return text.join('\\n');\n            case \"vertical\":\n                text = text.reverse();\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function reverseInspectTool(text, tool) {\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.split('');\n                    text[i].data = text[i].data.reverse();\n                    text[i].data = text[i].data.join('');\n                }\n                return text;\n            case \"vertical\":\n                text = text.reverse();\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Unique nastroj\n     */\n    function uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n        for (let i = index + 1; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function findPrevLine(text, index) {\n        for (let i = index - 1; i >= 0; i--) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                            return text;\n                        }   \n                        if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                            text[i].data = null;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        text[nextLine.index].data = null;\n\n                        while ((nextLine = findNextLine(text, i)) !== null) {\n                            if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                                text[nextLine.index].data = null;\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        text[i].data = null;\n                        continue;\n                    }\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        for (var lastIndex = nextLine.index; (nextLine = findNextLine(text, nextLine.index)) !== null; lastIndex = nextLine.index) {\n                            if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                                i = nextLine.index - 1;\n                                break;\n                            }\n                        }\n                        i = lastIndex;\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Line numbers nastroj\n     */\n    function lineNumbersTool(text, tool) {\n        text = text.split('\\n');\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === \"\") {\n                        continue;\n                    }\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function lineNumbersInspectTool(text, tool) {\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null || text[i].data === \"\") {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Ridici funkce\n     */\n    function processTool(text, tool) {\n        var result = \"\";\n\n        switch (tool.toolname) {\n            case \"match\":\n                result = matchTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchTool(text, tool);\n                break;\n        \tcase \"replace\":\n        \t\tresult = replaceTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesTool(text);\n                break;\n            case \"sort\":\n                result = sortTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersTool(text, tool);\n                break;\n        \tdefault:\n        \t\tbreak;\n        } \n        return result;\n    };\n\n    function processInspectTool(text, tool) {\n        var result = \"\";\n      \n        switch (tool.toolname) {\n            case \"match\":\n                result = matchInspectTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchInspectTool(text, tool);\n                break;\n            case \"replace\":\n                result = replaceInspectTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceInspectTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareInspectTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsInspectTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesInspectTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesInspectTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnInspectTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsInspectTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseInspectTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimInspectTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesInspectTool(text);\n                break;\n            case \"sort\":\n                result = sortInspectTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseInspectTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueInspectTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersInspectTool(text, tool);\n                break;\n            default:\n                break;\n        }\n        return result;\n    };\n\n    self.addEventListener('message', event => { // eslint-disable-line no-restricted-globals\n        //var processData = event.data.inspectMode === true ? event.data.text.split('\\n') : event.data.text;\n        var processData = \"\";\n\n        if (event.data.inspectMode === false) {\n            processData = event.data.text;\n        }\n        else {\n            let lines = event.data.text.split('\\n');\n            processData = Array(lines.length);\n\n            for (let index = 0; index < processData.length; index++) {\n                processData[index] = {number: index + 1, data: lines[index]};\n            }\n        }\n\n        const pipeline = event.data.pipeline;\n        const unit = Math.ceil(100 / pipeline.length);\n\n        if (pipeline.length > 0) {\n            postMessage({type: \"progress\", data: 0});\n        }\n        \n        for (var i = 0; i < pipeline.length; i++) {\n        \tif (pipeline[i].active === true) {\n                if (event.data.inspectMode === false) {\n                    processData = processTool(processData, pipeline[i]);\n                }\n                else {\n                    processData = processInspectTool(processData, pipeline[i]);\n                }\n            }\n\n            postMessage({type: \"progress\", data: (i + 1) === pipeline.length ? 100 : (i + 1) * unit});\n        }\n\n        if (event.data.inspectMode === true) {\n            let lines = [];\n            let tempData = [];\n            console.log(processData);\n\n            for (var breakpoint in event.data.breakpoints) {\n                lines.push(parseInt(breakpoint) + 1);\n            }\n\n            for (let index = 0; index < processData.length; index++) {\n                if (lines.includes(processData[index].number) && processData[index].data !== null) {\n                    tempData.push(processData[index].data);\n                }\n            }\n\n            processData = tempData.join('\\n');\n        }\n        /*if (event.data.inspectMode === true) {\n            var temp = [];\n            console.log(processData);\n            for (var breakpoint in event.data.breakpoints) {\n                if (processData[breakpoint] !== null) {\n                    temp.push(processData[breakpoint]);\n                }\n            }\n            processData = temp.join('\\n');\n        }*/\n\n        postMessage({type: \"result\", data: processData});\n    });\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport ToolList from './components/ToolList';\nimport Alerts from './components/Alerts';\nimport arrayMove from 'array-move';\nimport newID from './scripts/generatorID';\nimport WebWorker from './scripts/WebWorker';\nimport pipeWorker from './scripts/pipeWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\n//-------------------------------DEBUG------------------------------------\n/*\nfunction cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\nfunction uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n      for (let i = index + 1; i < text.length; i++) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function findPrevLine(text, index) {\n      for (let i = index - 1; i >= 0; i--) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                  for (let i = text.length - 1; i >= 0; i--) {\n                      if (text[i].data === null) {\n                          continue;\n                      }\n                      prevLine = findPrevLine(text, i);\n                      if (prevLine === null) {\n                        return text;\n                      }\n\n                      if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                          text[i].data = null;\n                      }\n                      i = prevLine.index + 1;  \n                  }\n                  return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                      continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                      return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                      text[nextLine.index].data = null;\n\n                      while ((nextLine = findNextLine(text, i)) !== null) {\n                        if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                          text[nextLine.index].data = null;\n                        }\n                        else {\n                          break;\n                        }\n                      }\n                      text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                  if (text[i].data === null) {\n                    continue;\n                  }\n                  nextLine = findNextLine(text, i);\n                  if (nextLine === null) {\n                    text[i].data = null;\n                    continue;\n                  }\n                  if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                    for (var j = i; (nextLine = findNextLine(text, nextLine.index)) !== null; j++) {\n                      if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                        i = nextLine.index - 1;\n                        break;\n                      }\n                    }\n                    i = j + 1;\n                  }\n                  else {\n                    text[i].data = null;\n                  }\n              }\n              return text;\n            default:\n                return text;\n            }\n        }\n\nfunction processTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction processInspectTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueInspectTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesInspectTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction proc(data) { // eslint-disable-line no-restricted-globals\n  const pipeline = data.pipeline;\n  var processData = \"\";\n\n  if (data.inspectMode === false) {\n    processData = data.text;\n  }\n  else {\n      let lines = data.text.split('\\n');\n      processData = Array(lines.length);\n\n      for (let index = 0; index < processData.length; index++) {\n          processData[index] = {number: index + 1, data: lines[index]};\n      }\n  }\n  \n  for (var i = 0; i < pipeline.length; i++) {\n    if (pipeline[i].active === false)\n      continue;\n\n      if (data.inspectMode === false) {\n        processData = processTool(processData, pipeline[i]);\n      }\n      else {\n        processData = processInspectTool(processData, pipeline[i]);\n      }\n  }\n\n  if (data.inspectMode === true) {\n    let lines = [];\n    let tempData = [];\n\n    for (var breakpoint in data.breakpoints) {\n        lines.push(parseInt(breakpoint) + 1);\n    }\n\n    for (let index = 0; index < processData.length; index++) {\n        if (lines.includes(processData[index].number) && processData[index].data !== null) {\n            tempData.push(processData[index].data);\n        }\n    }\n\n    processData = tempData.join('\\n');\n}\n\n  return processData;\n};\n*/\n//------------------------------------------------------------------------\n\n/**\n * Funkce zkontroluje pole, zda nejsou nastavene breakpointy.\n * Kdyby byla velmi pomala, vytvorit workera.\n */\nfunction emptyBreakpoints(breakpoints) {\n  for (var i in breakpoints) {\n      if (typeof breakpoints[i] !== typeof undefined) {\n          return false;\n      }\n  }\n  return true;\n};\n\nfunction App() {\n  const alertRef = useRef();\n  const [pipeline, setPipeline] = useState([]);\n\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [editorResult, setEditorResult] = useState(\"\");\n  const [inspectMode, setInspectMode] = useState({enabled: false, breakpoints: []});\n  const [pipeProgress, setPipeProgress] = useState(100);\n  //const [inspectMode, setInspectMode] = useState(false);\n\n  const addTool = useCallback((tool) => {\n    tool.id = newID();\n    tool.active = true;\n    setPipeline(c => [...c, tool]);\n  }, [setPipeline]);\n\n  const removeTool = useCallback((tool) => {\n    setPipeline(c => c.filter(each => each.id !== tool.id));\n  }, [setPipeline]);\n\n  const updateTool = useCallback((tool) => {  // TODO: opravit jen na set\n    const tmp = [...pipeline];\n\n    for (var i in tmp) {\n      if (tmp[i].id === tool.id) {\n        tmp[i] = tool;\n        break;\n      }\n    }\n    setPipeline(tmp);\n  }, [pipeline, setPipeline]);\n\n  const reactiveTool = useCallback((tool) => {\n    setPipeline(state => state.map(each => {\n      if (each.id === tool.id) {\n        return {...each, active: !each.active}\n      }\n      else return each}));\n  }, [setPipeline]);\n\n  const onSortPipeline = useCallback(({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      setPipeline(pipeline => arrayMove(pipeline, oldIndex, newIndex));\n    }\n    console.log(pipeline);\n  }, [pipeline, setPipeline]);\n\n  const editText = useCallback((newValue) => {\n    setEditorContent(newValue);\n  }, [setEditorContent]);\n\n  const toggleInspectMode = useCallback(() => {\n    setInspectMode(state => ({ ...state, enabled: !state.enabled}));\n  }, [setInspectMode]);\n\n  const toggleBreakpoint = useCallback((breakpoints) => {\n    setInspectMode(state => ({ ...state, enabled: !emptyBreakpoints(breakpoints), breakpoints: breakpoints}));\n  }, [setInspectMode]);\n\n  const setPipelineActivity = useCallback((value) => {\n    setPipeline(state => state.map(tool => {return {...tool, active: value}}));\n  }, [setPipeline]);\n\n  const clearPipeline = useCallback(() => {\n    setPipeline([]);\n  }, [setPipeline]);\n\n  // Do dokumentace napsat proc neni async/await ale useEffect\n  // Popsat WebWorkers\n  useEffect(() => {\n    //---------------DEBUG---------------------\n    /*\n    setEditorResult(proc({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    }));\n    */\n    //-----------------------------------------\n    const worker = new WebWorker(pipeWorker);\n\n    worker.postMessage({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    });\n\n    worker.onmessage = (event) => {\n      if (event.data.type === \"progress\")\n        setPipeProgress(event.data.data);\n      else\n        setEditorResult(event.data.data);\n    };\n\n    return () => {  // Cleanup\n      worker.terminate();\n    };\n  }, [editorContent, pipeline, inspectMode, setEditorResult]);\n  \n  const showAlert = useCallback((variant, message) => {\n    alertRef.current.openSnackbar(variant, message);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <TopPanel />\n        <SplitEditor \n          editorContent={editorContent} \n          editText={editText} \n          editorResult={editorResult}\n          showAlert={showAlert} \n          toggleBreakpoint={toggleBreakpoint}\n          inspectMode={inspectMode.enabled}\n          toggleInspectMode={toggleInspectMode}\n          pipeProgress={pipeProgress}\n          pipeline={pipeline}\n          setPipelineActivity={setPipelineActivity}\n          clearPipeline={clearPipeline}\n        />\n        <ToolList \n          tools={pipeline}\n          removeTool={removeTool}\n          reactiveTool={reactiveTool}\n          updateTool={updateTool}\n          sort={onSortPipeline}\n        />\n        <ToolTabs showAlert={showAlert} addTool={addTool}/>\n        <Alerts ref={alertRef} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}