{"version":3,"sources":["components/TopPanel.jsx","scripts/shellGenerator.js","components/ShellDialog.jsx","components/EditorToolbar.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/EditorBottomPanel.jsx","components/SplitEditor.jsx","components/Tabs/TabStyles.js","components/Tabs/Tools/Match.jsx","components/Tabs/Tools/RegexMatch.jsx","components/Tabs/FindTab.jsx","components/Tabs/Tools/Replace.jsx","components/Tabs/Tools/RegexReplace.jsx","components/Tabs/ReplaceTab.jsx","components/Tabs/Tools/RemoveColumn.jsx","components/Tabs/ReduceTab.jsx","components/ToolTabs.jsx","components/Edits/Tools/EditMatch.jsx","components/Edits/Tools/EditRegexMatch.jsx","components/Edits/Tools/EditReplace.jsx","components/Edits/Tools/EditRegexReplace.jsx","components/Edits/Tools/EditRemoveColumn.jsx","components/Edits/EditDialog.jsx","components/ToolList.jsx","components/Alerts.jsx","scripts/generatorID.js","scripts/WebWorker.js","scripts/pipeWorker.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","light","grey","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","flex","link","textDecoration","DenseAppBar","React","memo","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","Tooltip","title","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","fontSize","itemIcon","ListItemText","Videocam","GitHub","CardMembership","regexEscape","regex","replace","awkRegexEscape","awkSlashEscape","getToolCommand","tool","command","toolname","inColumn","casesensitive","occurrence","expression","delimiter","matchCommand","regexMatchCommand","find","replaceCommand","regexReplaceCommand","start","parseInt","getRemoveColumnCommand","content","marginBottom","textContent","closeButton","right","top","ShellDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","close","fullWidth","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","pipeline","result","i","length","active","shellGenerator","minHeight","height","btn","padding","margin","toolbarIcon","marginRight","popmenu","zIndex","input","display","activeButton","searchBox","flexDirection","flexWrap","justifyContent","alignItems","searchBtns","paddingLeft","paddingRight","borderRadius","searchBtnIcons","search","shape","fade","width","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","EditorToolbar","setInput","undo","redo","clearAllBreakpoints","showAlert","wrap","toggleWrap","findAll","inspectMode","toggleInspectMode","setPipelineActivity","clearPipeline","openFile","setOpenFile","openEditor","setOpenEditor","openPipeline","setOpenPipeline","openSearch","setOpenSearch","openShellDialog","setOpenShellDialog","searchExpression","setSearchExpression","searchRegExp","setSearchRegExp","searchCaseSensitive","setSearchCaseSensitive","fileRef","createRef","fileButtonRef","useRef","editorButtonRef","pipelineButtonRef","searchButtonRef","expandFile","useCallback","prev","expandEditor","expandInspect","expandSearch","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","loadFile","e","a","async","reader","FileReader","onload","readAsText","files","downloadResult","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Button","ref","Popper","role","undefined","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","accept","multiple","onChange","htmlFor","Publish","GetApp","ListAlt","Undo","Redo","WrapText","ViewDay","Clear","BugReport","Done","ClearAll","FiberNew","Search","size","Translate","TextFields","InputBase","placeholder","inputProps","value","backwards","caseSensitive","wholeWord","regExp","SkipPrevious","SkipNext","AllInclusive","EditorIn","forwardRef","edit","toggleBreakpoint","aceIn","useImperativeHandle","properties","editor","resize","session","clearBreakpoints","useEffect","on","domEvent","indexOf","clientX","getBoundingClientRect","left","row","getDocumentPosition","getBreakpoints","setBreakpoint","clearBreakpoint","stop","newValue","console","log","mode","name","showPrintMargin","hScrollBarAlwaysVisible","debounceChangePeriod","wrapEnabled","editorProps","$blockScrolling","EditorOut","state","bind","this","refs","aceOut","readOnly","Component","item","enabled","disabled","violet","EditorBottomPanel","ColorLinearProgress","barColorPrimary","LinearProgress","SplitEditor","editorContent","editText","editorResult","pipeProgress","setWrap","handleResize","Fragment","defaultSize","minWidth","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","onResize","borderBottom","split","minSize","maxSize","toolName","fontWeight","divider","marginTop","button","textField","flexCenter","flexStart","opts","MatchTool","matchFind","setMatchFind","matchCaseSensitive","setMatchCaseSensitive","setOccurrence","matchInColumn","setMatchInColumn","matchColumnDelimiter","setMatchColumnDelimiter","matchFindError","setMatchFindError","matchColumnError","setMatchColumnError","matchDelimiterError","setMatchDelimiterError","FormControl","InputLabel","Select","labelId","TextField","label","InputLabelProps","shrink","error","helperText","required","addTool","startIcon","Add","RegexMatchTool","regexMatchFind","setRegexMatchFind","regexMatchCaseSensitive","setRegexMatchCaseSensitive","regexMatchInColumn","setRegexMatchInColumn","regexMatchColumnDelimiter","setRegexMatchColumnDelimiter","regexMatchFindError","setRegexMatchFindError","regexMatchColumnError","setRegexMatchColumnError","regexMatchDelimiterError","setRegexMatchDelimiterError","validExpression","RegExp","handleRegexMatch","lightBlue","secondary","green","FindTab","Grid","container","xs","Match","Divider","orientation","RegexMatch","styles","ReplaceTool","replaceFind","setReplaceFind","replaceReplace","setReplaceReplace","replaceCaseSensitive","setReplaceCaseSensitive","replaceInColumn","setReplaceInColumn","replaceColumnDelimiter","setReplaceColumnDelimiter","replaceFindError","setReplaceFindError","replaceReplaceError","setReplaceReplaceError","replaceColumnError","setReplaceColumnError","replaceDelimiterError","setReplaceDelimiterError","RegexReplaceTool","regexReplaceFind","setRegexReplaceFind","regexReplaceReplace","setRegexReplaceReplace","regexReplaceCaseSensitive","setRegexReplaceCaseSensitive","regexReplaceInColumn","setRegexReplaceInColumn","regexReplaceColumnDelimiter","setRegexReplaceColumnDelimiter","regexReplaceFindError","setRegexReplaceFindError","regexReplaceColumnError","setRegexReplaceColumnError","regexReplaceDelimiterError","setRegexReplaceDelimiterError","handleRegexReplace","FindAndReplaceTab","Replace","RegexReplace","RemoveColumnTool","setPosition","setDelimiter","positionError","setPositionError","delimiterError","setDelimiterError","ReduceTab","RemoveColumn","TabPanel","children","index","other","component","hidden","Box","p","a11yProps","ToolTabs","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","FindReplace","RemoveCircleOutline","Edit","Transform","ReplaceTab","EditMatch","handleUpdate","updateTool","EditRegexMatch","EditReplace","EditRegexReplace","paddingBottom","titleIcon","dialogActions","paddingTop","confirmIcon","closeIcon","EditDialog","toolRef","Settings","mapToolname","EditRemoveColumn","mapToolContent","DialogActions","tooltip","textTransform","textAlign","letterSpacing","boxShadow","titleLabel","list","listItem","itemDeactivated","overflow","toolText","cursor","violetWord","greenWord","blueWord","yellowWord","listIcon","marginLR","ToolList","tools","removeTool","reactiveTool","sort","openEditDialog","setOpenEditDialog","toolToEdit","DragHandle","SortableHandle","mapTool","SortableItem","SortableElement","ListItem","ContainerComponent","popupId","bindTrigger","MoreVert","bindMenu","openEdit","VisibilityOff","Visibility","Delete","SortableListContainer","SortableContainer","List","map","Build","lockAxis","useDragHandle","onSortEnd","helperClass","variantIcon","success","CheckCircle","warning","Warning","Error","info","Info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Alerts","prop","showSnackbar","setShowSnackbar","snackbarInfo","setSnackbarInfo","snackbarQueue","openSnackbar","push","Date","getTime","processSnackbarQueue","shift","closeSnackbar","reason","Snackbar","autoHideDuration","onExited","ContentProps","lastID","WebWorker","worker","code","toString","blob","Worker","getMatchOptions","regexReplaceAll","lines","option","tmp","match","specificMatch","j","firstChar","lastChar","join","processTool","text","splitedText","columns","slice","z","matchTool","regexMatchTool","replaceTool","regexReplaceTool","splice","removeColumnTool","processInspectTool","matchInspectTool","regexMatchInspectTool","x","replaceInspectTool","regexReplaceInspectTool","removeColumnInspectTool","self","addEventListener","processData","data","unit","Math","ceil","postMessage","temp","breakpoint","emptyBreakpoints","App","alertRef","setPipeline","setEditorContent","setEditorResult","setInspectMode","setPipeProgress","c","filter","each","onSortPipeline","oldIndex","newIndex","arrayMove","pipeWorker","onmessage","terminate","TopPanel","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74967c6b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam, CardMembership } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme, Tooltip } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n}))(MenuItem);\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"rgb(30, 30, 30)\",\n        light: grey[200],\n        dark: grey[900],\n      },\n      type: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appName: {\n      marginLeft: theme.spacing(10),\n      flex: 1,\n  },\n  link: {\n      textDecoration: 'none',\n      color: 'inherit',\n  },\n}));\n\nconst DenseAppBar = React.memo(() => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography className={classes.appName} variant=\"h6\" color=\"inherit\">\n                React App\n              </Typography>\n              <Tooltip title=\"Menu\">\n                <IconButton edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n                  <MenuIcon />\n                </IconButton>\n              </Tooltip>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Description fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Documentation\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Videocam fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Video\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <GitHub fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"GitHub\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <CardMembership fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Credits\" />\n                        </StyledMenuItem>\n                    </a>\n                </StyledMenu>\n            </Toolbar>\n          </AppBar>\n        </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default DenseAppBar;","\nfunction regexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\nfunction awkRegexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\\\\\\\\\$&\");\n};\n\nfunction replaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction awkSlashEscape(regex) {\n    return regex.replace(/[\\\\]/g, \"\\\\$&\");\n}\n\nfunction regexReplaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + tool.find + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + tool.find + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction matchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction regexMatchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + tool.delimiter + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction getRemoveColumnCommand(tool) {\n    var start = \"\";\n\n    if (parseInt(tool.position) !== 1) {\n        start = \"-\" + parseInt(tool.position - 1) + \",\";\n    }\n\n    return \"cut -d '\" + tool.delimiter + \"' -f \" + start + (parseInt(tool.position) + 1) + \"-\";\n}\n\nfunction getToolCommand(tool) {\n    var command = \"\";\n\n    switch (tool.toolname) {\n        case \"match\":\n            command = matchCommand(tool);\n            break;\n        case \"regexMatch\":\n            command = regexMatchCommand(tool);\n            break;\n        case \"replace\":\n            command = replaceCommand(tool);\n            break;\n        case \"regexReplace\":\n            command = regexReplaceCommand(tool);\n            break;\n        case \"removeColumn\":\n            command = getRemoveColumnCommand(tool);\n            break;\n        default:\n            return;\n    }\n    return \" | \" + command;\n}\n\nexport default function (pipeline) {\n    var result = \"cat FILENAME\";\n\n    for (var i = 0; i < pipeline.length; i++) {\n        if (pipeline[i].active === true) {\n            result += getToolCommand(pipeline[i]);\n        }\n    }\n\n    return result;\n}","import React from \"react\";\nimport { Dialog, Tooltip, useTheme, makeStyles, DialogTitle, DialogContent, useMediaQuery, MuiThemeProvider, DialogContentText } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport shellGenerator from \"../scripts/shellGenerator\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: \"#ff9408\",\n    },\n    content: {\n        marginBottom: \"20px\",\n    },\n    textContent: {\n        color: \"white\",\n        marginBottom: \"0px\",\n    },\n    closeButton: {\n        position: 'absolute',\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n}));\n\nfunction ShellDialog(props) {    // TODO: dodelat (ikonky, stylyzace)\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                Shell script\n                <Tooltip title={\"Close\"}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.close}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </DialogTitle>\n            <DialogContent dividers className={classes.content}>\n                <DialogContentText\n                    className={classes.textContent}\n                    id=\"scroll-dialog-text\"\n                    tabIndex={-1}\n                >\n                    {shellGenerator(props.pipeline)}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default ShellDialog;","import React, { useRef, useState, useCallback } from \"react\";\nimport { Toolbar, Button, IconButton, makeStyles, Popper, Grow, Paper, MenuItem, MenuList, ClickAwayListener, InputBase, Tooltip } from \"@material-ui/core\";\nimport { Description, FiberNew, Done, Publish, GetApp, Undo, Redo, BugReport, Clear, ClearAll, ListAlt, WrapText, Search, Translate, TextFields, SkipNext, SkipPrevious, AllInclusive, ViewDay } from \"@material-ui/icons\";\nimport { fade } from \"@material-ui/core/styles\";\nimport ShellDialog from \"./ShellDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(35, 35, 35)\",\n        //marginTop: \"3px\",\n        minHeight: \"33px\",\n        height: \"33px\",\n    },\n    btn: {\n        height: \"33px\",\n        padding: \"0px 10px 0px 10px\",\n        margin: \"0px\",\n    },\n    toolbarIcon: {\n        marginRight: \"6px\",\n    },\n    popmenu: {\n        zIndex: \"9999\",\n    },\n    input: {\n        display: \"none\",\n    },\n\n    activeButton: {\n        backgroundColor: \"#039be5 !important\",\n    },\n    searchBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"stretch\",\n    },\n    searchBtns: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        borderRadius: \"4px\",\n    },\n    searchBtnIcons: {\n        height: \"10px\",\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1),\n          width: 'auto',\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    searchIcon: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 5),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst EditorToolbar = React.memo(({ setInput, result, undo, redo, clearAllBreakpoints, showAlert, wrap, toggleWrap, find, findAll, inspectMode, toggleInspectMode, pipeline, setPipelineActivity, clearPipeline }) => {\n    const classes = useStyles();\n\n    const [openFile, setOpenFile] = useState(false);\n    const [openEditor, setOpenEditor] = useState(false);\n    const [openPipeline, setOpenPipeline] = useState(false);\n    const [openSearch, setOpenSearch] = useState(false);\n    const [openShellDialog, setOpenShellDialog] = useState(false);\n\n    const [searchExpression, setSearchExpression] = useState(\"\");   // TODO: Predelat jednotlivy casti na mensi komponenty (asi)\n    const [searchRegExp, setSearchRegExp] = useState(false);\n    const [searchCaseSensitive, setSearchCaseSensitive] = useState(false);\n\n    const fileRef = React.createRef();\n    \n    const fileButtonRef = useRef(null);\n    const editorButtonRef = useRef(null);\n    const pipelineButtonRef = useRef(null);\n    const searchButtonRef = useRef(null);\n\n    const expandFile = useCallback(() => {\n        setOpenFile(prev => !prev);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandEditor = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(prev => !prev);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandInspect = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(prev => !prev);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandSearch = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(prev => !prev);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleClose = useCallback((event) => {\n        // Otevreni dalsiho selectu\n        if ((fileButtonRef.current && fileButtonRef.current.contains(event.target)) || \n            (editorButtonRef.current && editorButtonRef.current.contains(event.target)) ||\n            (pipelineButtonRef.current && pipelineButtonRef.current.contains(event.target)) ||\n            (searchButtonRef.current && searchButtonRef.current.contains(event.target))) {\n            return;\n        }\n        \n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleListKeyDown = useCallback((event) => {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpenFile(false);\n          setOpenEditor(false);\n          setOpenPipeline(false);\n        }\n    }, [setOpenFile, setOpenEditor, setOpenPipeline]);\n\n    const loadFile = useCallback(async(e) => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n\n        reader.onload = async (e) => { \n          setInput(e.target.result);\n        };\n        reader.readAsText(e.target.files[0]);\n        showAlert(\"info\", \"Info: File imported.\");\n    }, [setInput, showAlert]);\n\n    const downloadResult = useCallback(async() => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([result], {type: 'text/plain'});\n\n        element.href = URL.createObjectURL(file);\n        element.download = \"result.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }, [result]);\n\n    return (\n        <Toolbar className={classes.root}>\n            <Button \n                className={classes.btn}\n                ref={fileButtonRef}\n                onClick={expandFile}\n            >\n                <Description fontSize=\"small\" className={classes.toolbarIcon} />\n                File\n            </Button>\n            <Popper className={classes.popmenu} open={openFile} anchorEl={fileButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList autoFocusItem={openFile} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <input\n                            accept=\"text/plain\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            ref={fileRef}\n                            onChange={e => `${loadFile(e)} ${handleClose(e)}`}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <MenuItem>\n                                <Publish fontSize=\"small\" className={classes.toolbarIcon}/>\n                                Import\n                            </MenuItem>\n                        </label>\n                        <MenuItem onClick={downloadResult}>\n                            <GetApp fontSize=\"small\" className={classes.toolbarIcon} />\n                            Download\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={editorButtonRef}\n                onClick={expandEditor}\n            >\n                <ListAlt fontSize=\"small\" className={classes.toolbarIcon} />\n                Editor\n            </Button>\n            <Popper className={classes.popmenu} open={openEditor} anchorEl={editorButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={openEditor} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${undo(e)} ${handleClose(e)}`}>\n                            <Undo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Undo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${redo(e)} ${handleClose(e)}`}>\n                            <Redo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Redo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleWrap(e)} ${handleClose(e)}`}>\n                            <WrapText fontSize=\"small\" className={classes.toolbarIcon} />\n                            { wrap ? \"Disable wrap\" : \"Enable wrap\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleInspectMode(e)} ${handleClose(e)}`}>\n                            <ViewDay fontSize=\"small\" className={classes.toolbarIcon} />\n                            { inspectMode ? \"Disable inspector\" : \"Enable inspector\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearAllBreakpoints(e)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Remove all breakpoints\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={pipelineButtonRef}\n                onClick={expandInspect}\n            >\n                <BugReport fontSize=\"small\" className={classes.toolbarIcon} />\n                Pipeline\n            </Button>\n            <Popper className={classes.popmenu} open={openPipeline} anchorEl={pipelineButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList autoFocusItem={openPipeline} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${setPipelineActivity(true)} ${handleClose(e)}`}>\n                            <Done fontSize=\"small\" className={classes.toolbarIcon} />\n                            Enable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setPipelineActivity(false)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Disable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearPipeline()} ${handleClose(e)}`}>\n                            <ClearAll fontSize=\"small\" className={classes.toolbarIcon} />\n                            Clear pipeline\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setOpenShellDialog(true)} ${handleClose(e)}`}>\n                            <FiberNew fontSize=\"small\" className={classes.toolbarIcon} />\n                            Create shell script\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={searchButtonRef}\n                onClick={expandSearch}\n            >\n                <Search fontSize=\"small\" className={classes.toolbarIcon} />\n                Search\n            </Button>\n            <Popper className={classes.popmenu} open={openSearch} anchorEl={searchButtonRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                    <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                            <div className={classes.searchBox}>\n                                <Tooltip title=\"RegExp\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchRegExp && classes.activeButton }`}\n                                    onClick={() => setSearchRegExp(prev => !prev)}\n                                >\n                                    <Translate />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Case sensitive\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchCaseSensitive && classes.activeButton }`}\n                                    onClick={() => setSearchCaseSensitive(prev => !prev)}\n                                >\n                                    <TextFields />\n                                </IconButton>\n                                </Tooltip>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <Search />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        onChange={event => setSearchExpression(event.target.value)}\n                                        value={searchExpression}\n                                    />\n                                    <Tooltip title=\"Remove\">\n                                    <IconButton size=\"small\" style={{marginRight: \"5px\"}} \n                                        onClick={() => setSearchExpression(\"\")}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    </Tooltip>\n                                </div>\n                                <Tooltip title=\"Previous\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                    onClick={() => find(searchExpression, { backwards: true, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipPrevious />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next\">\n                                <IconButton size=\"small\" className={classes.searchBtns}\n                                     onClick={() => find(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipNext />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"All\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                     onClick={() => findAll(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <AllInclusive />\n                                </IconButton>\n                                </Tooltip>\n                            </div>\n                        </ClickAwayListener>\n                    </Paper>\n                </Grow>\n            )}\n            </Popper>\n            {openShellDialog &&\n                <ShellDialog \n                    open={openShellDialog}\n                    close={() => setOpenShellDialog(false)}\n                    pipeline={pipeline}\n                />\n            }\n        </ Toolbar>\n    );\n});\n\nexport default EditorToolbar;","import React, { forwardRef, useImperativeHandle, useEffect, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nconst EditorIn = React.memo(forwardRef(({ content, edit, wrap, toggleBreakpoint }, ref) => {\n  const aceIn = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    find(expression, properties){\n      aceIn.current.editor.find(expression, properties);\n    },\n    \n    findAll(expression, properties) {\n      aceIn.current.editor.findAll(expression, properties);\n    },\n\n    resize() {\n      aceIn.current.editor.resize();\n    },\n\n    undo()  {\n      aceIn.current.editor.undo();\n    },\n  \n    redo  ()  {\n      aceIn.current.editor.redo();\n    },\n  \n    clearAllBreakpoints  ()  {\n      aceIn.current.editor.session.clearBreakpoints();\n    },\n\n\n}));\n\n  /**\n   * https://ourcodeworld.com/articles/read/1052/how-to-add-toggle-breakpoints-on-the-ace-editor-gutter\n  */\nuseEffect(() => {\n  aceIn.current.editor.on(\"guttermousedown\", function(e) {\n    var target = e.domEvent.target;\n\n    if (target.className.indexOf(\"ace_gutter-cell\") === -1) {\n        return;\n    }\n\n    /*// Pokud neni editor focusnut ignorovat nastaveni breakpointu (mozna se bude hodit).\n    if (!(e.editor.isFocused())){\n        return; \n    }*/\n\n    // Misto za cislici ignorujeme pro nastaveni breakpointu\n    if (e.clientX > 25 + target.getBoundingClientRect().left) {\n        return;\n    }\n\n    var row = e.getDocumentPosition().row;\n    var breakpoints = e.editor.session.getBreakpoints(row, 0);\n\n    if (typeof breakpoints[row] === typeof undefined) {\n      e.editor.session.setBreakpoint(row);\n    }\n    else {\n        e.editor.session.clearBreakpoint(row);\n    }\n\n    e.stop();\n    \n    toggleBreakpoint(breakpoints);\n    });\n  }, [toggleBreakpoint]);\n\n\n  const onChange = (newValue) => {\n    edit(newValue);\n    console.log(aceIn.current.editor.session.getBreakpoints());\n  }\n\n//<button onClick={()=> {this.refs.aceIn.editor.undo()}}>Undo</button>\n  \n    return ( \n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        onChange={onChange}\n        //onSelectionChange={this.onSelectionChange}\n        ref={aceIn}\n        value={content}\n        mode=\"plain_text\"\n        name=\"EditorIn\"\n        height=\"100%\"\n        width=\"100%\"\n        placeholder=\"Insert your input here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        debounceChangePeriod={1500}\n        wrapEnabled={wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  \n}));\n \nexport default EditorIn;","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n//<button onClick={()=> {this.refs.AceOut.editor.find(\"a\")}}>Undo</button>\nclass EditorOut extends Component {\n  state = {  }\n  \n  constructor(props) {\n    super(props);\n    this.resize = this.resize.bind(this);\n  }\n\n  find(expression, properties) {\n    this.refs.aceOut.editor.find(expression, properties);\n  }\n\n  findAll(expression, properties) {\n    this.refs.aceOut.editor.findAll(expression, properties);\n  }\n\n  resize() {\n    this.refs.aceOut.editor.resize();\n  }\n\n  render() { \n    return (\n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        ref=\"aceOut\"\n        value={this.props.content}\n        name=\"EditorOut\"\n        height=\"100%\"\n        width=\"100%\"\n        mode=\"plain_text\"\n        readOnly={true}\n        placeholder=\"Your output will be here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        wrapEnabled={this.props.wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  }\n}\n \nexport default EditorOut;","import React from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(33, 33, 33)\",\n        height: \"18px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        padding: \"1px 20px\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        flexWrap: \"nowrap\",\n        flexDirection: \"row-reverse\",\n        fontSize: \"13px\",\n        borderRadius: \"0px\",\n    },\n    item: {\n        marginLeft: \"15px\",\n    },\n    enabled: {\n        color: \"green\",\n    },\n    disabled: {\n        color: \"#bf001d\",\n    },\n    violet: {\n        color: \"#e35d14\",\n    },\n}));\n\nconst EditorBottomPanel = React.memo(({wrap, inspectMode}) => {\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={7} className={classes.root}>\n            <span className={classes.item}>Wrap: {wrap ? <span className={classes.enabled}>Enabled</span> : <span className={classes.disabled}>Disabled</span>}</span>\n            <span className={classes.item}>Mode: <span className={classes.violet}>{ inspectMode ? \"Inspect\" : \"Auto\" }</span></span>\n        </Paper>\n    );\n});\n\nexport default EditorBottomPanel;","import React, { useRef, useState, useCallback } from \"react\";\nimport EditorToolbar from \"./EditorToolbar\";\nimport SplitPane from \"react-split-pane\";\nimport { Resizable } from \"re-resizable\";\nimport EditorIn from \"./EditorIn\";\nimport EditorOut from \"./EditorOut\";\nimport { LinearProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditorBottomPanel from \"./EditorBottomPanel\";\nimport \"./SplitEditor.css\";\n\nconst ColorLinearProgress = withStyles({\n    barColorPrimary: {\n      backgroundColor: '#028fd4',\n    },\n})(LinearProgress);\n\nconst SplitEditor = React.memo(({ editorContent, editText, editorResult, showAlert, toggleBreakpoint, inspectMode, toggleInspectMode, pipeProgress, pipeline, setPipelineActivity, clearPipeline }) => {\n    const aceIn = useRef();\n    const aceOut = useRef();\n\n    const [wrap, setWrap] = useState(false);\n\n    const find = useCallback((expression, properties) => {\n        aceIn.current.find(expression, properties);\n        aceOut.current.find(expression, properties);\n    }, []);\n\n    const findAll = useCallback((expression, properties) => {\n        aceIn.current.findAll(expression, properties);\n        aceOut.current.findAll(expression, properties);\n    }, []);\n\n    const toggleWrap = useCallback(() => {\n        setWrap(prev => !prev);\n    }, [setWrap]);\n\n    const handleResize = useCallback(() => {\n        aceIn.current.resize();\n        aceOut.current.resize();\n    }, []);\n\n    const undo = useCallback(() => {\n        aceIn.current.undo();\n    }, []);\n\n    const redo = useCallback(() => {\n        aceIn.current.redo();\n    }, []);\n\n    const clearAllBreakpoints = useCallback(() => {\n        aceIn.current.clearAllBreakpoints();\n        toggleBreakpoint([]);\n    }, [toggleBreakpoint]);\n\n    return ( \n        <React.Fragment>\n            <EditorToolbar \n                setInput={editText} \n                result={editorResult} \n                undo={undo} \n                redo={redo}\n                clearAllBreakpoints={clearAllBreakpoints}\n                showAlert={showAlert} \n                wrap={wrap}\n                toggleWrap={toggleWrap}\n                find={find}\n                findAll={findAll}\n                inspectMode={inspectMode}\n                toggleInspectMode={toggleInspectMode}\n                pipeline={pipeline}\n                setPipelineActivity={setPipelineActivity}\n                clearPipeline={clearPipeline}\n            />\n            <Resizable\n                defaultSize={{ width: \"100%\", height: \"700px\" }}\n                minHeight={100}\n                minWidth=\"100%\"\n                maxWidth=\"100%\"\n                enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n                onResize={() => handleResize()}\n                style={{display: \"flex\", flexDirection: \"column\", flexWrap: \"nowrap\", justifyContent: \"flex-start\",\n                    alignItems: \"stretch\", borderBottom: \"1px solid rgb(30, 30, 30)\"}}\n            >\n                <SplitPane \n                    className=\"SplitEditor\" \n                    split=\"vertical\" \n                    style={{height: \"100%\", position: \"static\"}} \n                    minSize={200} maxSize={-200} \n                    defaultSize={\"50%\"} \n                    onChange={() => handleResize()}\n                >\n                    <EditorIn ref={ aceIn } content={editorContent} edit={editText} wrap={wrap} toggleBreakpoint={toggleBreakpoint} />\n                    <EditorOut ref={ aceOut } content={editorResult} wrap={wrap} />\n                </SplitPane>\n                    <ColorLinearProgress variant=\"determinate\" value={pipeProgress} />\n                    <EditorBottomPanel wrap={wrap} inspectMode={inspectMode} />\n            </Resizable>\n        </React.Fragment>\n    );  \n});\n \nexport default SplitEditor;","export default {\n    toolName: {\n        color: \"#d9d9d9\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n    },\n    divider: {\n\t    marginTop: \"20px\",\n\t},\n};","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction MatchTool(props) {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(\"\");\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [matchInColumn, setMatchInColumn] = useState(\"\");\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(\"\");\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    const handleMatch = () => {\n        if (matchFind === \"\"){\n            setMatchFindError(true);\n        }\n\n        if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n            setMatchDelimiterError(true);\n        }\n\n        if (matchInColumn !== \"\" && matchInColumn <= 0) {\n            setMatchColumnError(true);\n        }\n\n        if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n            props.addTool({toolname: \"match\", expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Match added into the pipeline.\");\n            setMatchFind(\"\");\n            setMatchInColumn(\"\");\n            setMatchColumnDelimiter(\"\");\n            setMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"match-occurence-label\"\n                      id=\"match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"match-case-label\"\n                      id=\"match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"match-expression\"\n                    label=\"Find\"\n                    value={matchFind}\n                    required={true}\n                    onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={matchFindError === true}\n                    helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-match\"\n                    className={classes.button}\n                    onClick={() => handleMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default MatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexMatchTool(props) {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(\"\");\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(\"\");\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(\"\");\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    const handleRegexMatch = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexMatchFind);\n        } \n        catch (e) {\n            setRegexMatchFindError(true);\n            validExpression = false;\n        }\n\n        if (regexMatchFind === \"\"){\n            setRegexMatchFindError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n            setRegexMatchDelimiterError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n            setRegexMatchColumnError(true);\n        }\n\n        if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexMatch\", expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex match added into the pipeline.\");\n            setRegexMatchFind(\"\");\n            setRegexMatchInColumn(\"\");\n            setRegexMatchColumnDelimiter(\"\");\n            setRegexMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-match-occurence-label\"\n                      id=\"regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-match-case-label\"\n                      id=\"regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-match-expression\"\n                    label=\"Regular expression\"\n                    value={regexMatchFind}\n                    required={true}\n                    onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={regexMatchFindError === true}\n                    helperText={regexMatchFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-match\"\n                    className={classes.button}\n                    onClick={() => handleRegexMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexMatchTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport Match from \"./Tools/Match\";\nimport RegexMatch from \"./Tools/RegexMatch\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Match</Typography>\n                    <Match addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Regex match</Typography>\n                    <RegexMatch addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReplaceTool(props) {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [replaceInColumn, setReplaceInColumn] = useState(\"\");\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(\"\");\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n\n        if (replaceFind === replaceReplace && replaceFind !== \"\") {\n            setReplaceReplaceError(true);\n        }\n\n        if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n            setReplaceDelimiterError(true);\n        }\n\n        if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n            setReplaceColumnError(true);\n        }\n\n        if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n            props.addTool({toolname: \"replace\", find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n            setReplaceInColumn(\"\");\n            setReplaceColumnDelimiter(\"\");\n            setReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"replace-occurence-label\"\n                      id=\"replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"replace-case-label\"\n                      id=\"replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"replace-find\"\n                    label=\"Find\"\n                    value={replaceFind}\n                    required={true}\n                    onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={replaceFindError === true}\n                    helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-replace\"\n                    label=\"Replace\"\n                    value={replaceReplace}\n                    onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                    className={classes.textField}\n                    error={replaceReplaceError === true}\n                    helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-replace\"\n                    className={classes.button}\n                    onClick={() => handleReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ReplaceTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexReplaceTool(props) {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(\"\");\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(\"\");\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(\"\");\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(\"\");\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    const handleRegexReplace = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexReplaceFind);\n        } \n        catch (e) {\n            setRegexReplaceFindError(true);\n            validExpression = false;\n        }\n\n        if (regexReplaceFind === \"\"){\n            setRegexReplaceFindError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n            setRegexReplaceDelimiterError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n            setRegexReplaceColumnError(true);\n        }\n\n        if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexReplace\", find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex replace added into the pipeline.\");\n            setRegexReplaceFind(\"\");\n            setRegexReplaceReplace(\"\");\n            setRegexReplaceInColumn(\"\");\n            setRegexReplaceColumnDelimiter(\"\");\n            setRegexReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-occurence-label\"\n                      id=\"regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-case-label\"\n                      id=\"regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-replace-find\"\n                    label=\"Regular expression\"\n                    value={regexReplaceFind}\n                    required={true}\n                    onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={regexReplaceFindError === true}\n                    helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-replace\"\n                    label=\"Replace\"\n                    value={regexReplaceReplace}\n                    onChange={event => setRegexReplaceReplace(event.target.value)}\n                    className={classes.textField}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-replace\"\n                    className={classes.button}\n                    onClick={() => handleRegexReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexReplaceTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport Replace from \"./Tools/Replace\";\nimport RegexReplace from \"./Tools/RegexReplace\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindAndReplaceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Replace</Typography>\n                    <Replace addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Regex replace</Typography>\n                    <RegexReplace addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindAndReplaceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"320px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n}));\n\nfunction RemoveColumnTool(props) {\n    const classes = useStyles();\n\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleRemoveColumn = () => {\n        if (position === \"\" || position <= 0){\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"removeColumn\", position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Remove column added into the pipeline.\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding remove column into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <TextField\n                    id=\"remove-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    required={true}\n                    className={classes.textField}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Required and number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"remove-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.textField}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required\" : \"\"}\n                />\n            </div>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-remove-column\"\n                className={classes.button}\n                onClick={() => handleRemoveColumn()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default RemoveColumnTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport RemoveColumnTool from \"./Tools/RemoveColumn\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ReduceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Remove column</Typography>\n                    <RemoveColumnTool addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ReduceTab);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { Search, Edit, FindReplace, RemoveCircleOutline, Transform } from \"@material-ui/icons\";\nimport FindTab from \"./Tabs/FindTab\";\nimport ReplaceTab from \"./Tabs/ReplaceTab\";\nimport ReduceTab from \"./Tabs/ReduceTab\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: lightBlue[600],\n      light: lightBlue[300],\n      dark: lightBlue[900],\n    },\n    type: 'dark',\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px',\n    marginBottom: '20px',\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: 'rgb(50,50,50)',\n    color: 'white',\n  },\n  fullWidth: {\n    width: \"100% !important\",\n  },\n  /*toolTitle: {\n    marginLeft: '10px',\n    color: 'orange',\n    position: 'relative',\n    bottom: '15px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    paddingBottom: '2px',\n    backgroundColor: theme.palette.background.paper,\n  },*/\n\n}));\n\nconst ToolTabs = React.memo(({ showAlert, addTool }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const fullWidth = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={`${classes.root} ${fullWidth && classes.fullWidth}`}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"tabs\"\n            scrollButtons=\"auto\"\n            centered\n          >\n            <Tab icon={<Search />} label=\"Find\" {...a11yProps(0)} />\n            <Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n            <Tab icon={<RemoveCircleOutline />} label=\"Reduce\" {...a11yProps(2)} />\n            <Tab icon={<Edit />} label=\"Modify\" {...a11yProps(3)} />\n            <Tab icon={<Transform />} label=\"Convert\" {...a11yProps(4)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel theme={theme} value={value} index={0}>\n          <FindTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ReplaceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <ReduceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          TBD\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          TBD\n        </TabPanel>\n      </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ToolTabs;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(props.tool.expression);\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [matchInColumn, setMatchInColumn] = useState(props.tool.inColumn);\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (matchFind === \"\"){\n                setMatchFindError(true);\n            }\n    \n            if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n                setMatchDelimiterError(true);\n            }\n    \n            if (matchInColumn !== \"\" && matchInColumn <= 0) {\n                setMatchColumnError(true);\n            }\n            \n            if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n                props.updateTool({...props.tool, expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-match-occurence-label\"\n                      id=\"edit-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-match-case-label\"\n                      id=\"edit-match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-match-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={matchFind}\n                required={true}\n                onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                error={matchFindError === true}\n                helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(props.tool.expression);\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(props.tool.inColumn);\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexMatchFind);\n            } \n            catch (e) {\n                setRegexMatchFindError(true);\n                validExpression = false;\n            }\n\n            if (regexMatchFind === \"\"){\n                setRegexMatchFindError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n                setRegexMatchDelimiterError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n                setRegexMatchColumnError(true);\n            }\n            \n            if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-occurence-label\"\n                      id=\"edit-regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-case-label\"\n                      id=\"edit-regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-match-find\"\n                label=\"Regular expression\"\n                className={classes.textField}\n                value={regexMatchFind}\n                required={true}\n                onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                error={regexMatchFindError === true}\n                helperText={regexMatchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(props.tool.find);\n    const [replaceReplace, setReplaceReplace] = useState(props.tool.replace);\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [replaceInColumn, setReplaceInColumn] = useState(props.tool.inColumn);\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (replaceFind === \"\"){\n                setReplaceFindError(true);\n            }\n    \n            if (replaceFind === replaceReplace && replaceFind !== \"\") {\n                setReplaceReplaceError(true);\n            }\n    \n            if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n                setReplaceDelimiterError(true);\n            }\n    \n            if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n                setReplaceColumnError(true);\n            }\n    \n            if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n                props.updateTool({...props.tool, find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-occurence-label\"\n                      id=\"edit-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-case-label\"\n                      id=\"edit-replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={replaceFind}\n                required={true}\n                onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                error={replaceFindError === true}\n                helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={replaceReplace}\n                onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                error={replaceReplaceError === true}\n                helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(props.tool.find);\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(props.tool.replace);\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(props.tool.inColumn);\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexReplaceFind);\n            } \n            catch (e) {\n                setRegexReplaceFindError(true);\n                validExpression = false;\n            }\n\n            if (regexReplaceFind === \"\"){\n                setRegexReplaceFindError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n                setRegexReplaceDelimiterError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n                setRegexReplaceColumnError(true);\n            }\n\n            if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-occurence-label\"\n                      id=\"edit-regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-case-label\"\n                      id=\"edit-regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={regexReplaceFind}\n                required={true}\n                onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                error={regexReplaceFindError === true}\n                helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-regex-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={regexReplaceReplace}\n                onChange={event => setRegexReplaceReplace(event.target.value)}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (position === \"\" || position <= 0){\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n                <TextField\n                    id=\"edit-remove-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    required={true}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Required and number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-remove-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n                />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useRef } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, useMediaQuery, Tooltip, makeStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Done, Close, Settings } from \"@material-ui/icons\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport EditMatch from \"./Tools/EditMatch\";\nimport EditRegexMatch from \"./Tools/EditRegexMatch\";\nimport EditReplace from \"./Tools/EditReplace\";\nimport EditRegexReplace from \"./Tools/EditRegexReplace\";\nimport EditRemoveColumn from \"./Tools/EditRemoveColumn\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        borderBottom: \"solid 1px grey\",\n        marginBottom: \"15px\",\n        paddingBottom: \"8px\",\n        color: \"#039be5\",\n    },\n    titleIcon: {\n        marginRight: \"15px\",\n        color: \"#039be5\",\n    },\n    dialogActions: {\n        paddingTop: \"0px\",\n    },\n    confirmIcon: {\n        color: \"#43a047\",\n    },\n    closeIcon: {\n        color: \"red\",\n    },\n}));\n\nfunction EditDialog(props) {\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const toolRef = useRef();\n\n    const mapToolname = (tool) => {\n        switch (tool.toolname) {\n            case \"match\": return (<React.Fragment>Match</React.Fragment>);\n            case \"regexMatch\": return (<React.Fragment>Regex match</React.Fragment>);\n            case \"replace\": return (<React.Fragment>Replace</React.Fragment>);\n            case \"regexReplace\": return (<React.Fragment>Regex replace</React.Fragment>);\n            case \"removeColumn\": return (<React.Fragment>Remove column</React.Fragment>);\n            default: return;\n        }\n    };\n\n    /**\n     * Vypis html kontextu podle zvoleneho nastroje\n    */\n    const mapToolContent = (tool) => {\n        switch (tool.toolname) {\n            case \"match\":\n                return (\n                    <EditMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexMatch\":\n                return (\n                    <EditRegexMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"replace\":\n                return (\n                    <EditReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexReplace\":\n                return (\n                    <EditRegexReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"removeColumn\":\n                return (\n                    <EditRemoveColumn ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            default:\n                return;\n        }\n    };\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                <Settings className={classes.titleIcon} fontSize=\"large\" />\n                {mapToolname(props.tool)}\n            </DialogTitle>\n            <DialogContent>\n                {mapToolContent(props.tool)}\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <Tooltip className={classes.tooltip} title=\"Close\">\n                    <IconButton className={classes.closeIcon} onClick={() => props.close()}>\n                        <Close fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Confirm\">\n                    <IconButton className={classes.confirmIcon} onClick={() => toolRef.current.handleUpdate()}>\n                        <Done fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n            </DialogActions>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default EditDialog;","import React, { useState, useRef } from \"react\";\nimport { List, ListItem, makeStyles, IconButton, Menu, MenuItem, Tooltip, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Build, Delete, Visibility, VisibilityOff, Edit, MoreVert } from \"@material-ui/icons\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport EditDialog from \"./Edits/EditDialog\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport { Resizable } from \"re-resizable\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        //width: \"95%\",\n        minWidth: \"95%\",\n        maxWidth: \"95%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        marginTop: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"rgb(50,50,50)\",\n        color: \"white\",\n        borderBottom: \"1px solid rgb(30, 30, 30)\",\n    },\n    fullWidth: {\n        width: \"100% !important\",\n        minWidth: \"100% !important\",\n        maxWidth: \"100% !important\",\n    },\n    title: {\n        height: \"22px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        fontSize: \"15px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    listItem: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n    },\n    itemDeactivated: {\n        color: \"grey !important\",\n    },\n    content: {\n        //height: \"208px\",\n        overflow: \"auto\",\n        flexGrow: \"1\",\n    },\n    toolName: {\n        color: \"#ff6a1a\",\n        fontWeight: \"bold\",\n        marginRight: \"8px\",\n    },\n    toolText: {\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\",\n        height: \"100%\",\n        width: \"100%\",\n        cursor: \"grab\",\n    },\n    violetWord: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n    },\n    greenWord: {\n        color: \"#22ba09\",\n        fontWeight: \"bold\",\n    },\n    blueWord: {\n        color: \"#089dcf\",\n        fontWeight: \"bold\",\n    },\n    yellowWord: {\n        color: \"#ffea00\",\n        fontWeight: \"bold\",\n    },\n    listIcon: {\n        marginRight: \"15px\",\n        color: \"#e0e0e0\",\n    },\n    marginLR: {\n        marginLeft: \"8px\",\n        marginRight: \"8px\",\n    },\n}));\n\nconst ToolList = React.memo(({ tools, removeTool, reactiveTool, updateTool, sort }) => {\n    const classes = useStyles();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const theme = useTheme();   // useMediaQuery\n    const fullWidth = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const toolToEdit = useRef({});\n\n    const openEdit = (tool) => {\n        toolToEdit.current = tool;\n        setOpenEditDialog(true);\n    }\n\n    const mapTool = (tool) => {\n        switch (tool.toolname) {\n            case \"regexMatch\":\n            case \"match\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"match\" ?  <React.Fragment>Match</React.Fragment> : <React.Fragment>Regex match</React.Fragment>}</span> \n                        <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"regexReplace\":\n            case \"replace\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"replace\" ?  <React.Fragment>Replace</React.Fragment> : <React.Fragment>Regex replace</React.Fragment>}</span>\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.find}\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>with</span> \n                        {tool.replace}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"removeColumn\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Remove column</span>\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>at</span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            default:\n                return;\n        }\n    }\n\n    const DragHandle = SortableHandle(({tool}) => (\n        <div className={classes.toolText}>\n          {mapTool(tool)}\n        </div>\n    ));\n\n    const SortableItem = SortableElement(({ tool }) => (\n        <ListItem key={tool.id} ContainerComponent=\"li\" divider={true} className={`${classes.listItem} ${!(tool.active) && classes.itemDeactivated}`}>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {properties => (\n                    <React.Fragment>\n                        <Tooltip title=\"Properties\">\n                            <IconButton \n                                className={classes.listIcon} \n                                variant=\"contained\" \n                                size=\"small\" \n                                {...bindTrigger(properties)}\n                            >\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu {...bindMenu(properties)}>\n                            <MenuItem onClick={() => openEdit(tool)}>\n                                <Edit className={classes.listIcon} /> Edit\n                            </MenuItem>\n                            <MenuItem onClick={() => reactiveTool(tool)}>\n                                {tool.active ? \n                                    (<React.Fragment> <VisibilityOff className={classes.listIcon} /> Deactivate </React.Fragment>) : \n                                    (<React.Fragment> <Visibility className={classes.listIcon} /> Activate </React.Fragment>)}\n                            </MenuItem>\n                            <MenuItem onClick={() => removeTool(tool)}>\n                                <Delete className={classes.listIcon} /> Delete\n                            </MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n            <DragHandle tool={tool}/>\n        </ListItem>\n    ));\n\n    const SortableListContainer = SortableContainer(({ tools }) => (\n        <List component=\"ul\" className={classes.list}>\n                {tools.map((tool, index) => (\n                    <SortableItem key={tool.id} index={index} tool={tool} />\n                ))}\n        </List>\n    ));\n\n    return (\n        <Resizable \n            className={`${classes.root} ${fullWidth && classes.fullWidth}`}\n            defaultSize={{ width: \"95%\", height: \"250px\" }}\n            minHeight={100}\n            enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n        >\n            <div className={classes.title}>\n                <Build style={{fontSize: \"22px\", paddingLeft: \"5px\"}}/>\n                <div className={classes.titleLabel}>Pipeline</div>\n                <div />\n            </div>\n            <div className={classes.content}>\n                <SortableListContainer\n                    tools={tools}\n                    lockAxis='y'\n                    useDragHandle={true}\n                    onSortEnd={sort}\n                    helperClass={\"SortableHelper\"}\n                />\n            </div>\n            {openEditDialog && \n                <EditDialog \n                    open={openEditDialog}\n                    close={() => setOpenEditDialog(false)}\n                    tool={toolToEdit.current}\n                    updateTool={updateTool}\n            />}\n        </Resizable>\n    );\n});\n\nexport default ToolList;","import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\n\nconst variantIcon = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: blue[500],\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 25,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n  \nfunction CustomSnackbarContent(props) {\n    const classes = useStyles();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            message={\n                <span id=\"message-id\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                \n                    onClick={onClose}\n                >\n                    <Close />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n  \nCustomSnackbarContent.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nconst Alerts = React.memo(forwardRef(({ prop }, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n    const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n    const snackbarQueue = useRef([]);\n\n    useImperativeHandle(ref, () => ({\n        openSnackbar(variant, message) {\n            snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n        \n            if (showSnackbar) {\n                setShowSnackbar(false);\n            }\n            else {\n                processSnackbarQueue();\n            }\n          }\n    }));\n\n    const processSnackbarQueue = () => {\n        if (snackbarQueue.current.length > 0) {\n            setSnackbarInfo(snackbarQueue.current.shift());\n            setShowSnackbar(true);\n        }\n    };\n    \n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setShowSnackbar(false);\n    };\n    \n    const handleExited = () => {\n        processSnackbarQueue();\n    };\n\n    return (\n        <Snackbar\n            key={snackbarInfo ? snackbarInfo.key : undefined}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            open={showSnackbar}\n            autoHideDuration={2000}\n            onClose={closeSnackbar}\n            onExited={handleExited}\n            ContentProps={{ 'aria-describedby': 'message-id' }} \n        >\n            <CustomSnackbarContent\n                message={snackbarInfo ? snackbarInfo.message : undefined}\n                variant={snackbarInfo ? snackbarInfo.variant : undefined}\n                onClose={closeSnackbar}\n            />\n        </Snackbar>\n    );\n  }));\n\n  export default Alerts;","let lastID = 0;\n\nexport default function() {\n    lastID++;\n    return lastID;\n}","/**\n * https://medium.com/prolanceer/optimizing-react-app-performance-using-web-workers-79266afd4a7\n */\nexport default class WebWorker {\n    constructor (worker) {\n        const code = worker.toString();\n        const blob = new Blob(['('+code+')()']);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}","export default () => {\n\n    // https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript\n    function regexEscape(regex) {\n        return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n      \n    /**\n     * Replace nastroj\n     * TODO: dodelat osetreni na undefined\n     */\n    function getMatchOptions(tool) {\n      if (tool.occurrence === \"all\") {\n          return tool.casesensitive === true ? \"g\" : \"gi\";\n      }\n      else {\n          return tool.casesensitive === true ? \"\" : \"i\";\n      }\n    }\n    \n    function replaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {\n                for (var i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else { \n                for (var z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function replaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n\n                    text[i] = text[i].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (var x = 0; x < text.length; x++) {\n                    if (text[x] === null) {\n                        continue;\n                    }\n\n                    if (text[x].match(new RegExp(tool.find, option)) !== null) {\n                        text[x] = text[x].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var j = 0; j < text.length; j++) {\n                    if (text[j] === null) {\n                        continue;\n                    }\n                    columns = text[j].split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        text[j] = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (var z = 0; z < text.length; z++) {\n                    if (text[z] === null) {\n                        continue;\n                    }\n                    columns = text[z].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            text[z] = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    function regexReplaceAll(lines, tool) {\n        var option = tool.casesensitive ? \"g\" : \"gi\";\n        var tmp = \"\";\n\n        for (let i = 0; i < lines.length; i++) {\n            tmp = lines[i].match(new RegExp(tool.find, option));\n\n            if (tmp === null) {\n                continue;\n            }\n\n            var specificMatch = true;\n            for (let j = 0; j < tmp.length; j++) {\n              if (tmp[j] === \"\") {\n                specificMatch = false;\n                break;\n              }\n            }\n\n            if (specificMatch === true) {\n                lines[i] = lines[i].replace(new RegExp(tool.find, option), tool.replace);\n                continue;\n            }\n            \n            var fullMatch = tmp[0].length === lines[i].length ? true : false;\n            if (fullMatch === true) {\n              lines[i] = tool.replace;\n            }\n            else {\n                lines[i] = lines[i].split(new RegExp(tool.find, option));\n                var firstChar = lines[i][0] === \"\" ? \"\" : tool.replace;\n                var lastChar = lines[i][lines[i].length - 1] === \"\" ? \"\" : tool.replace;\n                lines[i] = firstChar + lines[i].join(tool.replace) + lastChar;\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Regex replace nastroj\n     */\n    function regexReplaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var splitedText = text.split('\\n');\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                /*for (var y = 0; y < splitedText.length; y++) {  // TODO: otestovat na fullmatch\n                    splitedText[y] = splitedText[y].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return splitedText.join('\\n');*/\n                return regexReplaceAll(splitedText, tool).join('\\n');\n            }\n            else {                              // Pouze prvni vyskyt\n                for (let i = 0; i < splitedText.length; i++) {\n                    if (splitedText[i].match(new RegExp(tool.find, option)) !== null) {\n                        splitedText[i] = splitedText[i].replace(new RegExp(tool.find, option), tool.replace);\n                        return splitedText.join('\\n');\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = regexReplaceAll([columns[tool.inColumn - 1]], tool);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else {                              // Prvni vyskyt\n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function regexReplaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    text[i] = regexReplaceAll([text[i]], tool)[0];\n                    //text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n\n                    if (text[i].match(new RegExp(tool.find, option)) !== null) {\n                        text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let j = 0; j < text.length; j++) {\n                    if (text[j] === null) {\n                        continue;\n                    }\n\n                    columns = text[j].split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                        text[j] = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let z = 0; z < text.length; z++) {\n                    if (text[z] === null) {\n                        continue;\n                    }\n\n                    columns = text[z].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            text[z] = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Match nastroj\n     */\n    function matchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            text = text.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option));\n            return text === null ? \"\" : text.join('\\n');\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n            var result = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            result += splitedText[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            return splitedText[z];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function matchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {        // Vsechny radky\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    if (text[i].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n            else {  // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    if (text[i].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i] = null;\n                    }\n                    else {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j] = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    columns = text[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i] = null;\n                        }\n                    }\n                    else {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    columns = text[i].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i] = null;\n                        }\n                        else {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j] = null;\n                            }\n                            return text;\n                        }\n                    }\n                    else {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Regex match nastroj\n     */\n    function regexMatchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        var lines = text.split('\\n');\n        var result = \"\";\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else {\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            return lines[i];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function regexMatchInspectTool(text, tool) {    // TODO: osetreni na null\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n\n                    if (text[i].match(new RegExp(tool.expression, option)) === null) {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n            else {\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n\n                    if (text[i].match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j] = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    columns = text[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) === null) {\n                            text[i] = null;\n                        }\n                    }\n                    else {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n            else { \n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === null) {\n                        continue;\n                    }\n                    columns = text[i].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j] = null;\n                            }\n                        }\n                        else {\n                            text[i] = null;\n                        }\n                    }\n                    else {\n                        text[i] = null;\n                    }\n                }\n                return text;\n            }\n        }\n    };\n\n    function removeColumnTool(text, tool) {\n        text = text.split('\\n');\n        var columns = \"\";\n\n        for (let i = 0; i < text.length; i++) {\n            columns = text[i].split(tool.delimiter);\n\n            if (tool.position <= columns.length) {\n                columns.splice(tool.position - 1, 1);\n                text[i] = columns.join(tool.delimiter);\n            }\n        }\n        return text.join('\\n');\n    };\n\n    function removeColumnInspectTool(text, tool) {\n        var columns = \"\";\n\n        for (let i = 0; i < text.length; i++) {\n            if (text[i] === null) {\n                continue;\n            }\n            columns = text[i].split(tool.delimiter);\n\n            if (tool.position <= columns.length) {\n                columns.splice(tool.position - 1, 1);\n                text[i] = columns.join(tool.delimiter);\n            }\n        }\n        return text;\n    };\n\n    /**\n     * Ridici funkce\n     */\n    function processTool(text, tool) {\n        var result = \"\";\n\n        switch (tool.toolname) {\n            case \"match\":\n                result = matchTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchTool(text, tool);\n                break;\n        \tcase \"replace\":\n        \t\tresult = replaceTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceTool(text, tool);\n                break;\n            case \"removeColumn\":\n                result = removeColumnTool(text, tool);\n                break;\n        \tdefault:\n        \t\tbreak;\n        }\n        \n        return result;\n    };\n\n    function processInspectTool(text, tool) {\n        var result = \"\";\n      \n        switch (tool.toolname) {\n            case \"match\":\n                result = matchInspectTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchInspectTool(text, tool);\n                break;\n            case \"replace\":\n                result = replaceInspectTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceInspectTool(text, tool);\n                break;\n            case \"removeColumn\":\n                result = removeColumnInspectTool(text, tool);\n                break;\n            default:\n                break;\n        }\n        \n        return result;\n    };\n\n    self.addEventListener('message', event => { // eslint-disable-line no-restricted-globals\n        var processData = event.data.inspectMode === true ? event.data.text.split('\\n') : event.data.text;\n\n        const pipeline = event.data.pipeline;\n        const unit = Math.ceil(100 / pipeline.length);\n\n        if (pipeline.length > 0) {\n            postMessage({type: \"progress\", data: 0});\n        }\n        \n        for (var i = 0; i < pipeline.length; i++) {\n        \tif (pipeline[i].active === true) {\n                if (event.data.inspectMode === false) {\n                    processData = processTool(processData, pipeline[i]);\n                }\n                else {\n                    processData = processInspectTool(processData, pipeline[i]);\n                }\n            }\n\n            postMessage({type: \"progress\", data: (i + 1) === pipeline.length ? 100 : (i + 1) * unit});\n        }\n\n        if (event.data.inspectMode === true) {\n            var temp = [];\n            console.log(processData);\n            for (var breakpoint in event.data.breakpoints) {\n                if (processData[breakpoint] !== null) {\n                    temp.push(processData[breakpoint]);\n                }\n            }\n            processData = temp.join('\\n');\n        }\n\n        postMessage({type: \"result\", data: processData});\n    });\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport ToolList from './components/ToolList';\nimport Alerts from './components/Alerts';\nimport arrayMove from 'array-move';\nimport newID from './scripts/generatorID';\nimport WebWorker from './scripts/WebWorker';\nimport pipeWorker from './scripts/pipeWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\n//-------------------------------DEBUG------------------------------------\n/*\nfunction regexEscape(regex) {\n  return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\nfunction replaceGetOpts(tool) {\nif (tool.occurrence === \"all\") {\n    return tool.casesensitive === true ? \"g\" : \"gi\";\n}\nelse {\n    return tool.casesensitive === true ? \"\" : \"i\";\n}\n}\n\nfunction replaceTool(text, tool) {\nconst option = replaceGetOpts(tool);\n\nif (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n    return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n}\nelse {      // Ve sloupci\n  var splitedText = text.split('\\n');\n  var columns = \"\";\n\n    if (tool.occurrence === \"all\") {\n      for (var i = 0; i < splitedText.length; i++) {\n      columns = splitedText[i].split(tool.delimiter);\n    \n      if (tool.inColumn <= columns.length) {\n          columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n          splitedText[i] = columns.join(tool.delimiter);\n      }\n      }\n      return splitedText.join('\\n');\n    }\n    else { \n      for (var z = 0; z < splitedText.length; z++) {\n        columns = splitedText[z].split(tool.delimiter);\n      \n        if (tool.inColumn <= columns.length) {\n            if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                splitedText[z] = columns.join(tool.delimiter);\n                return splitedText.join('\\n');\n            }\n        }\n      }\n      return text;\n    }\n}\n};\n\nfunction replaceInspectTool(text, tool) {\n  const option = replaceGetOpts(tool);\n\n  if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n      if (tool.occurrence === \"all\") {    // Vsechno\n          for (var i = 0; i < text.length; i++) {\n              text[i] = text[i].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n          }\n          return text;\n      }\n      else {          // Prvni vyskyt\n          for (var x = 0; x < text.length; x++) {\n              if (text[x].match(new RegExp(tool.find, option)) !== null) {\n                  text[x] = text[x].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                  break;\n              }\n          }\n          return text;\n      }\n  }\n  else {      // Ve sloupci\n      var columns = \"\";\n\n      if (tool.occurrence === \"all\") {    // Vsechno\n          for (var j = 0; j < text.length; j++) {\n              columns = text[j].split(tool.delimiter);\n      \n              if (tool.inColumn <= columns.length) {\n                  columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                  text[j] = columns.join(tool.delimiter);\n              }\n          }\n          return text;\n      }\n      else {      // Prvni vyskyt\n          for (var z = 0; z < text.length; z++) {\n              columns = text[z].split(tool.delimiter);\n          \n              if (tool.inColumn <= columns.length) {\n                  if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                      columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                      text[z] = columns.join(tool.delimiter);\n                      return text;\n                  }\n              }\n          }\n          return text;\n      }\n  }\n}\n\nfunction processTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"replace\":\n      result = replaceTool(text, tool);\n      break;\n    case \"Match\":\n      result = text.match(new RegExp(\".*\" + regexEscape(tool.pattern) + \".*\", 'g'));\n      result === null ? result = \"\" : result = result.join('\\n');\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction processInspectTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"replace\":\n      result = replaceInspectTool(text, tool);\n      break;\n    case \"Match\":\n      result = text.match(new RegExp(\".*\" + regexEscape(tool.pattern) + \".*\", 'g'));\n      result === null ? result = \"\" : result = result.join('\\n');\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction proc(data) { // eslint-disable-line no-restricted-globals\n  const pipeline = data.pipeline;\n\n  var processData = data.inspectMode === true ? data.text.split('\\n') : data.text;\n  \n  for (var i = 0; i < pipeline.length; i++) {\n    if (pipeline[i].active === false)\n      continue;\n\n      if (data.inspectMode === false) {\n        processData = processTool(processData, pipeline[i]);\n      }\n      else {\n        processData = processInspectTool(processData, pipeline[i]);\n      }\n  }\n\n  if (data.inspectMode === true) {\n    var temp = [];\n\n    for (var breakpoint in data.breakpoints) {\n        temp.push(processData[breakpoint]);\n    }\n    processData = temp.join('\\n');\n}\n\n  return processData;\n};*/\n\n//------------------------------------------------------------------------\n\n/**\n * Funkce zkontroluje pole, zda nejsou nastavene breakpointy.\n * Kdyby byla velmi pomala, vytvorit workera.\n */\nfunction emptyBreakpoints(breakpoints) {\n  for (var i in breakpoints) {\n      if (typeof breakpoints[i] !== typeof undefined) {\n          return false;\n      }\n  }\n  return true;\n};\n\nfunction App() {\n  const alertRef = useRef();\n  const [pipeline, setPipeline] = useState([]);\n\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [editorResult, setEditorResult] = useState(\"\");\n  const [inspectMode, setInspectMode] = useState({enabled: false, breakpoints: []});\n  const [pipeProgress, setPipeProgress] = useState(100);\n  //const [inspectMode, setInspectMode] = useState(false);\n\n  const addTool = useCallback((tool) => {\n    tool.id = newID();\n    tool.active = true;\n    setPipeline(c => [...c, tool]);\n  }, [setPipeline]);\n\n  const removeTool = useCallback((tool) => {\n    setPipeline(c => c.filter(each => each.id !== tool.id));\n  }, [setPipeline]);\n\n  const updateTool = useCallback((tool) => {  // TODO: opravit jen na set\n    const tmp = [...pipeline];\n\n    for (var i in tmp) {\n      if (tmp[i].id === tool.id) {\n        tmp[i] = tool;\n        break;\n      }\n    }\n    setPipeline(tmp);\n  }, [pipeline, setPipeline]);\n\n  const reactiveTool = useCallback((tool) => {\n    setPipeline(state => state.map(each => {\n      if (each.id === tool.id) {\n        return {...each, active: !each.active}\n      }\n      else return each}));\n  }, [setPipeline]);\n\n  const onSortPipeline = useCallback(({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      setPipeline(pipeline => arrayMove(pipeline, oldIndex, newIndex));\n    }\n    console.log(pipeline);\n  }, [pipeline, setPipeline]);\n\n  const editText = useCallback((newValue) => {\n    setEditorContent(newValue);\n  }, [setEditorContent]);\n\n  const toggleInspectMode = useCallback(() => {\n    setInspectMode(state => ({ ...state, enabled: !state.enabled}));\n  }, [setInspectMode]);\n\n  const toggleBreakpoint = useCallback((breakpoints) => {\n    setInspectMode(state => ({ ...state, enabled: !emptyBreakpoints(breakpoints), breakpoints: breakpoints}));\n  }, [setInspectMode]);\n\n  const setPipelineActivity = useCallback((value) => {\n    setPipeline(state => state.map(tool => {return {...tool, active: value}}));\n  }, [setPipeline]);\n\n  const clearPipeline = useCallback(() => {\n    setPipeline([]);\n  }, [setPipeline]);\n\n  // Do dokumentace napsat proc neni async/await ale useEffect\n  // Popsat WebWorkers\n  useEffect(() => {\n    /*setEditorResult(proc({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    }));*/\n    const worker = new WebWorker(pipeWorker);\n\n    worker.postMessage({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    });\n\n    worker.onmessage = (event) => {\n      if (event.data.type === \"progress\")\n        setPipeProgress(event.data.data);\n      else\n        setEditorResult(event.data.data);\n    };\n\n    return () => {  // Cleanup\n      worker.terminate();\n    };\n  }, [editorContent, pipeline, inspectMode, setEditorResult]);\n  \n  const showAlert = useCallback((variant, message) => {\n    alertRef.current.openSnackbar(variant, message);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <TopPanel />\n        <SplitEditor \n          editorContent={editorContent} \n          editText={editText} \n          editorResult={editorResult}\n          showAlert={showAlert} \n          toggleBreakpoint={toggleBreakpoint}\n          inspectMode={inspectMode.enabled}\n          toggleInspectMode={toggleInspectMode}\n          pipeProgress={pipeProgress}\n          pipeline={pipeline}\n          setPipelineActivity={setPipelineActivity}\n          clearPipeline={clearPipeline}\n        />\n        <ToolList \n          tools={pipeline}\n          removeTool={removeTool}\n          reactiveTool={reactiveTool}\n          updateTool={updateTool}\n          sort={onSortPipeline}\n        />\n        <ToolTabs showAlert={showAlert} addTool={addTool}/>\n        <Alerts ref={alertRef} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}