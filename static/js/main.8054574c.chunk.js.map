{"version":3,"sources":["components/TopPanel.jsx","scripts/shellGenerator.js","components/ShellDialog.jsx","components/EditorToolbar.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/EditorBottomPanel.jsx","components/SplitEditor.jsx","components/Tabs/TabStyles.js","components/Tabs/ToolHeader.jsx","components/Tabs/Tools/Match.jsx","components/Tabs/Tools/RegexMatch.jsx","components/Tabs/Tools/Compare.jsx","components/Tabs/FindTab.jsx","components/Tabs/Tools/Replace.jsx","components/Tabs/Tools/RegexReplace.jsx","components/Tabs/ReplaceTab.jsx","components/Tabs/Tools/FilterColumns.jsx","components/Tabs/Tools/FilterLines.jsx","components/Tabs/Tools/RegexFilterLines.jsx","components/Tabs/Tools/CutLines.jsx","components/Tabs/Tools/Trim.jsx","components/Tabs/Tools/RemoveExtraSpaces.jsx","components/Tabs/Tools/Unique.jsx","components/Tabs/ReduceTab.jsx","components/Tabs/Tools/InsertColumn.jsx","components/Tabs/Tools/SwapColumns.jsx","components/Tabs/Tools/ConvertCase.jsx","components/Tabs/Tools/Sort.jsx","components/Tabs/Tools/Reverse.jsx","components/Tabs/Tools/LineNumbers.jsx","components/Tabs/ModifyTab.jsx","components/ToolTabs.jsx","components/Edits/Tools/EditMatch.jsx","components/Edits/Tools/EditRegexMatch.jsx","components/Edits/Tools/EditReplace.jsx","components/Edits/Tools/EditRegexReplace.jsx","components/Edits/Tools/EditCompare.jsx","components/Edits/Tools/EditFilterColumns.jsx","components/Edits/Tools/EditFilterLines.jsx","components/Edits/Tools/EditRegexFilterLines.jsx","components/Edits/Tools/EditCutLines.jsx","components/Edits/Tools/EditInsertColumn.jsx","components/Edits/Tools/EditSwapColumns.jsx","components/Edits/Tools/EditConvertCase.jsx","components/Edits/Tools/EditSort.jsx","components/Edits/Tools/EditReverse.jsx","components/Edits/Tools/EditUnique.jsx","components/Edits/Tools/EditLineNumbers.jsx","components/Edits/EditDialog.jsx","components/ToolList.jsx","components/Alerts.jsx","scripts/generatorID.js","scripts/WebWorker.js","scripts/pipeWorker.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","light","grey","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","flex","link","textDecoration","DenseAppBar","React","memo","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","Tooltip","title","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","fontSize","itemIcon","ListItemText","Videocam","GitHub","CardMembership","regexEscape","regex","replace","awkRegexEscape","awkDelimiter","delimiter","awkSlashEscape","getToolCommand","tool","command","toolname","inColumn","casesensitive","occurrence","expression","matchCommand","regexMatchCommand","find","replaceCommand","regexReplaceCommand","separator","column","comparator","value","compareCommand","start","parseInt","filterColumnsCommand","content","ignoreCase","customContent","filterLinesCommand","regexFilterLinesCommand","res","i","colBubble","insertColumnCommand","first","second","swapColumnsCommand","textCase","convertCaseCommand","count","cutLinesCommand","order","ignoreLeadingBlanks","sortCommand","direction","reverseCommand","countPrefix","uniqueCommand","startingNumber","lineNumbersCommand","marginBottom","textContent","closeButton","right","top","ShellDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","close","fullWidth","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","pipeline","result","length","active","shellGenerator","minHeight","height","btn","padding","margin","toolbarIcon","marginRight","popmenu","zIndex","input","display","activeButton","searchBox","flexDirection","flexWrap","justifyContent","alignItems","searchBtns","paddingLeft","paddingRight","borderRadius","searchBtnIcons","search","shape","fade","width","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","EditorToolbar","setInput","undo","redo","clearAllBreakpoints","showAlert","wrap","toggleWrap","findAll","inspectMode","toggleInspectMode","setPipelineActivity","clearPipeline","openFile","setOpenFile","openEditor","setOpenEditor","openPipeline","setOpenPipeline","openSearch","setOpenSearch","openShellDialog","setOpenShellDialog","searchExpression","setSearchExpression","searchRegExp","setSearchRegExp","searchCaseSensitive","setSearchCaseSensitive","fileRef","createRef","fileButtonRef","useRef","editorButtonRef","pipelineButtonRef","searchButtonRef","expandFile","useCallback","prev","expandEditor","expandInspect","expandSearch","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","loadFile","e","a","reader","FileReader","onload","readAsText","files","downloadResult","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Button","ref","Popper","role","undefined","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","accept","multiple","onChange","htmlFor","Publish","GetApp","ListAlt","Undo","Redo","WrapText","ViewDay","Clear","BugReport","Done","ClearAll","FiberNew","Search","size","Translate","TextFields","InputBase","placeholder","inputProps","backwards","caseSensitive","wholeWord","regExp","SkipPrevious","SkipNext","AllInclusive","EditorIn","forwardRef","edit","toggleBreakpoint","onCursorChange","aceIn","useImperativeHandle","properties","editor","resize","session","clearBreakpoints","useEffect","on","domEvent","indexOf","clientX","getBoundingClientRect","left","row","getDocumentPosition","getBreakpoints","setBreakpoint","clearBreakpoint","stop","newValue","console","log","selection","mode","name","showPrintMargin","hScrollBarAlwaysVisible","debounceChangePeriod","wrapEnabled","editorProps","$blockScrolling","EditorOut","aceOut","readOnly","item","enabled","disabled","violet","EditorBottomPanel","line","setPosition","state","ColorLinearProgress","barColorPrimary","LinearProgress","SplitEditor","editorContent","editText","editorResult","pipeProgress","bottomPanel","setWrap","handleResize","initialEditorHeight","window","innerHeight","cursor","Fragment","defaultSize","minWidth","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","onResize","borderBottom","split","minSize","maxSize","toolHeader","toolName","fontWeight","toolInfo","divider","marginTop","infoCloseButton","infoTitleIcon","infoTitle","infoContent","ToolHeader","description","showInfo","setShowInfo","Info","styles","button","textField","flexCenter","flexStart","opts","MatchTool","matchFind","setMatchFind","matchCaseSensitive","setMatchCaseSensitive","setOccurrence","matchInColumn","setMatchInColumn","matchColumnDelimiter","setMatchColumnDelimiter","matchFindError","setMatchFindError","matchColumnError","setMatchColumnError","matchDelimiterError","setMatchDelimiterError","FormControl","InputLabel","Select","labelId","TextField","label","InputLabelProps","shrink","error","helperText","required","addTool","startIcon","Add","RegexMatchTool","regexMatchFind","setRegexMatchFind","regexMatchCaseSensitive","setRegexMatchCaseSensitive","regexMatchInColumn","setRegexMatchInColumn","regexMatchColumnDelimiter","setRegexMatchColumnDelimiter","regexMatchFindError","setRegexMatchFindError","regexMatchColumnError","setRegexMatchColumnError","regexMatchDelimiterError","setRegexMatchDelimiterError","validExpression","RegExp","handleRegexMatch","CompareTool","compareValue","setCompareValue","setComparator","setInColumn","setDelimiter","valueError","setValueError","inColumnError","setInColumnError","delimiterError","setDelimiterError","lightBlue","secondary","green","FindTab","Grid","container","xs","Match","Divider","orientation","RegexMatch","Compare","ReplaceTool","replaceFind","setReplaceFind","replaceReplace","setReplaceReplace","replaceCaseSensitive","setReplaceCaseSensitive","replaceInColumn","setReplaceInColumn","replaceColumnDelimiter","setReplaceColumnDelimiter","replaceFindError","setReplaceFindError","replaceReplaceError","setReplaceReplaceError","replaceColumnError","setReplaceColumnError","replaceDelimiterError","setReplaceDelimiterError","RegexReplaceTool","regexReplaceFind","setRegexReplaceFind","regexReplaceReplace","setRegexReplaceReplace","regexReplaceCaseSensitive","setRegexReplaceCaseSensitive","regexReplaceInColumn","setRegexReplaceInColumn","regexReplaceColumnDelimiter","setRegexReplaceColumnDelimiter","regexReplaceFindError","setRegexReplaceFindError","regexReplaceColumnError","setRegexReplaceColumnError","regexReplaceDelimiterError","setRegexReplaceDelimiterError","handleRegexReplace","FindAndReplaceTab","Replace","RegexReplace","FilterColumnsTool","setVariant","positionError","setPositionError","textFieldFW","FilterLinesTool","setContent","setCaseSensitive","setColumn","setCustomContent","columnError","setColumnError","customContentError","setCustomContentError","RegexFilterLinesTool","setExpression","expressionError","setExpressionError","handleRegexFilterLines","CutLinesTool","setCount","countError","setCountError","TrimTool","RemoveExtraSpacesTool","checkbox","UniqueTool","setCountPrefix","countDisabled","setCountDisabled","option","handleVariant","FormControlLabel","control","Checkbox","checked","ReduceTab","Unique","FilterColumns","FilterLines","RegexFilterLines","CutLines","RemoveExtraSpaces","Trim","flexEnd","collapse","InsertColumnTool","focused","setFocused","contentError","setContentError","Collapse","in","collapsedHeight","multiline","rows","onFocus","onBlur","SwapColumnsTool","firstPosition","setFirstPosition","secondPosition","setSecondPosition","firstPositionError","setFirstPositionError","secondPositionError","setSecondPositionError","ConvertCaseTool","setTextCase","SortTool","setOrder","setIgnoreLeadingBlanks","ReverseTool","setDirection","LineNumbersTool","setStartingNumber","ModifyTab","InsertColumn","Sort","SwapColumns","LineNumbers","Reverse","ConvertCase","TabPanel","children","index","other","component","hidden","Box","p","a11yProps","ToolTabs","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","FindReplace","RemoveCircleOutline","Build","ReplaceTab","EditMatch","handleUpdate","updateTool","EditRegexMatch","EditReplace","EditRegexReplace","EditCompare","EditFilterColumns","EditFilterLines","EditRegexFilterLines","EditCutLines","EditInsertColumn","EditSwapColumns","EditConvertCase","EditSort","EditReverse","EditUnique","EditLineNumbers","paddingBottom","titleIcon","dialogActions","paddingTop","confirmIcon","closeIcon","EditDialog","toolRef","Edit","mapToolname","mapToolContent","DialogActions","tooltip","textTransform","textAlign","letterSpacing","boxShadow","titleLabel","list","listItem","itemDeactivated","overflow","toolText","violetWord","lightGreenWord","greenWord","blueWord","lightBlueWord","yellowWord","darkYellowWord","redWord","lightRedWord","greenBlueWord","turquoiseWord","lightTurquoiseWord","listIcon","marginLR","ToolList","tools","removeTool","reactiveTool","sort","openEditDialog","setOpenEditDialog","toolToEdit","DragHandle","SortableHandle","mapComparator","mapFilterLinesContent","mapCase","mapUniqueVariant","mapTool","SortableItem","SortableElement","ListItem","ContainerComponent","popupId","bindTrigger","MoreVert","bindMenu","includes","isEditable","openEdit","VisibilityOff","Visibility","Delete","SortableListContainer","SortableContainer","List","map","Settings","lockAxis","useDragHandle","onSortEnd","helperClass","variantIcon","success","CheckCircle","warning","Warning","Error","info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Alerts","prop","showSnackbar","setShowSnackbar","snackbarInfo","setSnackbarInfo","snackbarQueue","openSnackbar","push","Date","getTime","processSnackbarQueue","shift","closeSnackbar","reason","Snackbar","autoHideDuration","onExited","ContentProps","lastID","WebWorker","worker","code","toString","blob","Worker","getMatchOptions","regexReplaceAll","lines","tmp","match","specificMatch","j","firstChar","lastChar","join","findNextLine","text","data","findPrevLine","processTool","splitedText","columns","slice","z","matchTool","concat","Array","fill","regexMatchTool","replaceTool","regexReplaceTool","compareTool","splice","filterColumnsTool","charAt","filterLinesTool","regexFilterLinesTool","cutLinesTool","givenColumn","lineNumber","insertColumnTool","temp","swapColumnsTool","toUpperCase","toLowerCase","convertCaseTool","trim","trimTool","removeExtraSpacesTool","b","sortTool","reverse","reverseTool","unshift","uniqueTool","lineNumbersTool","processInspectTool","matchInspectTool","regexMatchInspectTool","x","replaceInspectTool","regexReplaceInspectTool","compareInspectTool","filterColumnsInspectTool","filterLinesInspectTool","regexFilterLinesInspectTool","cutLinesInspectTool","givenColumnLine","number","insertColumnInspectTool","swapColumnsInspectTool","convertCaseInspectTool","trimInspectTool","removeExtraSpacesInspectTool","sortInspectTool","reverseInspectTool","nextLine","prevLine","lastIndex","uniqueInspectTool","lineNumbersInspectTool","self","addEventListener","processData","unit","Math","ceil","postMessage","tempData","breakpoint","emptyBreakpoints","App","alertRef","setPipeline","setEditorContent","setEditorResult","setInspectMode","setPipeProgress","c","filter","each","onSortPipeline","oldIndex","newIndex","arrayMove","pipeWorker","onmessage","terminate","TopPanel","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8054574c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam, CardMembership } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme, Tooltip } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n}))(MenuItem);\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"rgb(30, 30, 30)\",\n        light: grey[200],\n        dark: grey[900],\n      },\n      type: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appName: {\n      marginLeft: theme.spacing(10),\n      flex: 1,\n  },\n  link: {\n      textDecoration: 'none',\n      color: 'inherit',\n  },\n}));\n\nconst DenseAppBar = React.memo(() => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography className={classes.appName} variant=\"h6\" color=\"inherit\">\n                React App\n              </Typography>\n              <Tooltip title=\"Menu\">\n                <IconButton edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n                  <MenuIcon />\n                </IconButton>\n              </Tooltip>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Description fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Documentation\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Videocam fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Video\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <GitHub fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"GitHub\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <CardMembership fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Credits\" />\n                        </StyledMenuItem>\n                    </a>\n                </StyledMenu>\n            </Toolbar>\n          </AppBar>\n        </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default DenseAppBar;","\nfunction regexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\nfunction awkRegexEscape(regex) {\n    regex = regexEscape(regex);\n    return regex.replace(/\\\\/g, \"\\\\$&\");\n};\n\nfunction awkDelimiter(delimiter) {\n    if (delimiter === ' ') {\n        return \"[ ]\";\n    }\n    else {\n        return delimiter;\n    }\n}\n\nfunction replaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction awkSlashEscape(regex) {\n    return regex.replace(/[\\\\]/g, \"\\\\$&\");\n}\n\nfunction regexReplaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + tool.find + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + tool.find + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction matchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction regexMatchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction compareCommand(tool) {\n    var separator = tool.inColumn === \"\" ? \"\\\\n\" : tool.delimiter;\n    var column = tool.inColumn === \"\" ? \"1\" : tool.inColumn;\n    var comparator = \"\";\n\n    switch (tool.comparator) {\n        case \"gt\":\n            comparator = \">\";\n            break;\n        case \"ge\":\n            comparator = \">=\";\n            break;\n        case \"lt\":\n            comparator = \"<\";\n            break;\n        case \"le\":\n            comparator = \"<=\";\n            break;\n        case \"eq\":\n            comparator = \"==\";\n            break;\n        default:\n            comparator = \"\";\n    }\n    return \"awk -F '\" + awkDelimiter(separator) + \"' '$\" + column + \" \" + comparator + \" \\\"\" + awkSlashEscape(tool.value) + \"\\\"'\";\n}\n\nfunction filterColumnsCommand(tool) {\n    var start = \"\";\n\n    switch (tool.variant) {\n        case \"remove\":\n            if (parseInt(tool.position) !== 1) {\n                start = \"-\" + parseInt(tool.position - 1) + \",\";\n            }\n\n            return \"cut -d '\" + tool.delimiter + \"' -f \" + start + (parseInt(tool.position) + 1) + \"-\";\n        case \"cut\":\n            return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '{print $\" + tool.position + \"}'\"; \n        default:\n            return \"\";\n    }\n}\n\nfunction filterLinesCommand(tool) {\n    switch (tool.content) {\n        case \"empty\":\n            return \"sed '/^$/d'\";\n        case \"whiteChars\":\n            return \"awk 'NF > 0'\";\n        case \"custom\":\n            if (tool.column === \"\") {\n                let ignoreCase = tool.casesensitive === false ? \"I\" : \"\";\n                return \"sed -E '/\" + regexEscape(tool.customContent) + \"/\" + ignoreCase + \"d'\";\n            }\n            else {\n                let ignoreCase = tool.casesensitive === false ? \"{IGNORECASE=1}\" : \"\";\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '\" + ignoreCase + \"$\" + tool.column + \" !~ \\\"\" + regexEscape(tool.customContent) + \"\\\" {print}'\";\n            }\n        default:\n            return \"\";\n    }\n}\n\nfunction regexFilterLinesCommand(tool) {\n    if (tool.column === \"\") {\n        var ignoreCase = tool.casesensitive === false ? \"I\" : \"\";\n        return \"sed -E '/\" + tool.expression + \"/\" + ignoreCase + \"d'\";\n    }\n    else {\n        let ignoreCase = tool.casesensitive === false ? \"{IGNORECASE=1}\" : \"\";\n        return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '\" + ignoreCase + \"$\" + tool.column + \" !~ /\" + tool.expression + \"/'\";\n    }\n}\n\nfunction insertColumnCommand(tool) {\n    const colBubble = (position) => {\n        if (parseInt(position) === 1) {\n            return \"\";\n        }\n        var res = \"t=$1;\";\n\n        for (let i = 1; i < position; i++) {\n            res += \"$\" + i + \"=$\" + (parseInt(i) + 1) + \";\";\n        }\n        return \" | awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{\" + res + \"$\" + tool.position + \"=t;print;}'\";\n    }\n\n    return \"pr -mts'\" + tool.delimiter + \"' $COLUMN_FILE /dev/stdin\" + colBubble(tool.position);\n}\n\nfunction swapColumnsCommand(tool) {\n    return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{t=$\" + tool.first + \";$\" + tool.first + \"=$\" + tool.second + \";$\" + tool.second + \"=t;print;}'\";\n}\n\nfunction convertCaseCommand(tool) {\n    switch (tool.textCase) {\n        case \"uppercase\":\n            return \"tr '[:lower:]' '[:upper:]'\";\n        case \"lowercase\":\n            return \"tr '[:upper:]' '[:lower:]'\";\n        default:\n            return \"\";\n    }\n}\n\n// https://unix.stackexchange.com/questions/102008/how-do-i-trim-leading-and-trailing-whitespace-from-each-line-of-some-output\nfunction trimCommand() {\n    return \"sed 's/^[[:blank:]]*//;s/[[:blank:]]*$//'\";\n}\n\nfunction removeExtraSpacesCommand() {\n    return \"tr -s ' '\";\n}\n\nfunction cutLinesCommand(tool) {\n    switch (tool.variant) {\n        case \"head\":\n            return \"head -n \" + tool.count;\n        case \"tail\":\n            return \"tail -n \" + tool.count;\n        default:\n            return \"\";\n    }\n}\n\nfunction sortCommand(tool) {\n    var command = \"LC_ALL=C sort -s\";\n    \n    if (tool.order === \"descending\") {\n        command += \"r\";\n    }\n    if (tool.casesensitive === false) {\n        command += \"f\";\n    }\n    if (tool.ignoreLeadingBlanks === true) {\n        command += \"b\";\n    }\n    return command;\n}\n\nfunction reverseCommand(tool) {\n    switch (tool.direction) {\n        case \"horizontal\":\n            return \"rev\";\n        case \"vertical\":\n            return \"tac\";\n        default:\n            return \"\";\n    }\n}\n\nfunction uniqueCommand(tool) {\n    var command = \"uniq\";\n\n    if (tool.casesensitive === false) {\n        command += \" -i\";\n    }\n    switch (tool.variant) {\n        case \"merge\":\n            if (tool.countPrefix === true) {\n                return command += \" -c | sed 's/^[[:blank:]]*//'\";\n            }\n            return command;\n        case \"unique\":\n            return command + \" -u\";\n        case \"duplicate\":\n            return command + \" -D\";\n        default:\n            return \"\";\n    }\n}\n\nfunction lineNumbersCommand(tool) {\n    var command = \"nl -s '\" + tool.delimiter + \"' -v \" + tool.startingNumber;\n\n    switch (tool.variant) {\n        case \"all\":\n            return command + \" -b a | sed 's/^[[:blank:]]*//'\";\n        case \"nonempty\":\n            return command + \" -b t | sed 's/^[[:blank:]]*//'\";\n        default:\n            return \"\";\n    }\n}\n\nfunction getToolCommand(tool) {\n    var command = \"\";\n\n    switch (tool.toolname) {\n        case \"match\":\n            command = matchCommand(tool);\n            break;\n        case \"regexMatch\":\n            command = regexMatchCommand(tool);\n            break;\n        case \"replace\":\n            command = replaceCommand(tool);\n            break;\n        case \"regexReplace\":\n            command = regexReplaceCommand(tool);\n            break;\n        case \"compare\":\n            command = compareCommand(tool);\n            break;\n        case \"filterColumns\":\n            command = filterColumnsCommand(tool);\n            break;\n        case \"filterLines\":\n            command = filterLinesCommand(tool);\n            break;\n        case \"regexFilterLines\":\n            command = regexFilterLinesCommand(tool);\n            break;\n        case \"insertColumn\":\n            command = insertColumnCommand(tool);\n            break;\n        case \"swapColumns\":\n            command = swapColumnsCommand(tool);\n            break;\n        case \"convertCase\":\n            command = convertCaseCommand(tool);\n            break;\n        case \"trim\":\n            command = trimCommand();\n            break;\n        case \"removeExtraSpaces\":\n            command = removeExtraSpacesCommand();\n            break;\n        case \"cutLines\":\n            command = cutLinesCommand(tool);\n            break;\n        case \"sort\":\n            command = sortCommand(tool);\n            break;\n        case \"reverse\":\n            command = reverseCommand(tool);\n            break;\n        case \"unique\":\n            command = uniqueCommand(tool);\n            break;\n        case \"lineNumbers\":\n            command = lineNumbersCommand(tool);\n            break;\n        default:\n            return;\n    }\n    return \" | \" + command;\n}\n\nexport default function (pipeline) {\n    var result = \"cat $FILENAME\";\n\n    for (var i = 0; i < pipeline.length; i++) {\n        if (pipeline[i].active === true) {\n            result += getToolCommand(pipeline[i]);\n        }\n    }\n\n    return result;\n}","import React from \"react\";\nimport { Dialog, Tooltip, useTheme, makeStyles, DialogTitle, DialogContent, useMediaQuery, MuiThemeProvider, DialogContentText } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport shellGenerator from \"../scripts/shellGenerator\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: \"#ff9408\",\n    },\n    content: {\n        marginBottom: \"20px\",\n    },\n    textContent: {\n        color: \"white\",\n        marginBottom: \"0px\",\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n}));\n\nfunction ShellDialog(props) {    // TODO: dodelat (ikonky, stylyzace)\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                Shell script\n                <Tooltip title={\"Close\"}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.close}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </DialogTitle>\n            <DialogContent dividers className={classes.content}>\n                <DialogContentText\n                    className={classes.textContent}\n                    id=\"scroll-dialog-text\"\n                    tabIndex={-1}\n                >\n                    {shellGenerator(props.pipeline)}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default ShellDialog;","import React, { useRef, useState, useCallback } from \"react\";\nimport { Toolbar, Button, IconButton, makeStyles, Popper, Grow, Paper, MenuItem, MenuList, ClickAwayListener, InputBase, Tooltip } from \"@material-ui/core\";\nimport { Description, FiberNew, Done, Publish, GetApp, Undo, Redo, BugReport, Clear, ClearAll, ListAlt, WrapText, Search, Translate, TextFields, SkipNext, SkipPrevious, AllInclusive, ViewDay } from \"@material-ui/icons\";\nimport { fade } from \"@material-ui/core/styles\";\nimport ShellDialog from \"./ShellDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(35, 35, 35)\",\n        //marginTop: \"3px\",\n        minHeight: \"33px\",\n        height: \"33px\",\n    },\n    btn: {\n        height: \"33px\",\n        padding: \"0px 10px 0px 10px\",\n        margin: \"0px\",\n    },\n    toolbarIcon: {\n        marginRight: \"6px\",\n    },\n    popmenu: {\n        zIndex: \"9999\",\n    },\n    input: {\n        display: \"none\",\n    },\n\n    activeButton: {\n        backgroundColor: \"#039be5 !important\",\n    },\n    searchBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"stretch\",\n    },\n    searchBtns: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        borderRadius: \"4px\",\n    },\n    searchBtnIcons: {\n        height: \"10px\",\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1),\n          width: 'auto',\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    searchIcon: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 5),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst EditorToolbar = React.memo(({ setInput, result, undo, redo, clearAllBreakpoints, showAlert, wrap, toggleWrap, find, findAll, inspectMode, toggleInspectMode, pipeline, setPipelineActivity, clearPipeline }) => {\n    const classes = useStyles();\n\n    const [openFile, setOpenFile] = useState(false);\n    const [openEditor, setOpenEditor] = useState(false);\n    const [openPipeline, setOpenPipeline] = useState(false);\n    const [openSearch, setOpenSearch] = useState(false);\n    const [openShellDialog, setOpenShellDialog] = useState(false);\n\n    const [searchExpression, setSearchExpression] = useState(\"\");\n    const [searchRegExp, setSearchRegExp] = useState(false);\n    const [searchCaseSensitive, setSearchCaseSensitive] = useState(false);\n\n    const fileRef = React.createRef();\n    \n    const fileButtonRef = useRef(null);\n    const editorButtonRef = useRef(null);\n    const pipelineButtonRef = useRef(null);\n    const searchButtonRef = useRef(null);\n\n    const expandFile = useCallback(() => {\n        setOpenFile(prev => !prev);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandEditor = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(prev => !prev);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandInspect = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(prev => !prev);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandSearch = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(prev => !prev);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleClose = useCallback((event) => {\n        // Otevreni dalsiho selectu\n        if ((fileButtonRef.current && fileButtonRef.current.contains(event.target)) || \n            (editorButtonRef.current && editorButtonRef.current.contains(event.target)) ||\n            (pipelineButtonRef.current && pipelineButtonRef.current.contains(event.target)) ||\n            (searchButtonRef.current && searchButtonRef.current.contains(event.target))) {\n            return;\n        }\n        \n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleListKeyDown = useCallback((event) => {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpenFile(false);\n          setOpenEditor(false);\n          setOpenPipeline(false);\n        }\n    }, [setOpenFile, setOpenEditor, setOpenPipeline]);\n\n    const loadFile = useCallback(async(e) => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n\n        reader.onload = async (e) => { \n          setInput(e.target.result);\n        };\n        reader.readAsText(e.target.files[0]);\n        showAlert(\"info\", \"Info: File imported.\");\n    }, [setInput, showAlert]);\n\n    const downloadResult = useCallback(async() => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([result], {type: 'text/plain'});\n\n        element.href = URL.createObjectURL(file);\n        element.download = \"result.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }, [result]);\n\n    return (\n        <Toolbar className={classes.root}>\n            <Button \n                className={classes.btn}\n                ref={fileButtonRef}\n                onClick={expandFile}\n            >\n                <Description fontSize=\"small\" className={classes.toolbarIcon} />\n                File\n            </Button>\n            <Popper className={classes.popmenu} open={openFile} anchorEl={fileButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList autoFocusItem={openFile} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <input\n                            accept=\"text/plain\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            ref={fileRef}\n                            onChange={e => `${loadFile(e)} ${handleClose(e)}`}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <MenuItem>\n                                <Publish fontSize=\"small\" className={classes.toolbarIcon}/>\n                                Import\n                            </MenuItem>\n                        </label>\n                        <MenuItem onClick={downloadResult}>\n                            <GetApp fontSize=\"small\" className={classes.toolbarIcon} />\n                            Download\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={editorButtonRef}\n                onClick={expandEditor}\n            >\n                <ListAlt fontSize=\"small\" className={classes.toolbarIcon} />\n                Editor\n            </Button>\n            <Popper className={classes.popmenu} open={openEditor} anchorEl={editorButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={openEditor} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${undo(e)} ${handleClose(e)}`}>\n                            <Undo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Undo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${redo(e)} ${handleClose(e)}`}>\n                            <Redo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Redo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleWrap(e)} ${handleClose(e)}`}>\n                            <WrapText fontSize=\"small\" className={classes.toolbarIcon} />\n                            { wrap ? \"Disable wrap\" : \"Enable wrap\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleInspectMode(e)} ${handleClose(e)}`}>\n                            <ViewDay fontSize=\"small\" className={classes.toolbarIcon} />\n                            { inspectMode ? \"Disable inspector\" : \"Enable inspector\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearAllBreakpoints(e)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Remove all breakpoints\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={pipelineButtonRef}\n                onClick={expandInspect}\n            >\n                <BugReport fontSize=\"small\" className={classes.toolbarIcon} />\n                Pipeline\n            </Button>\n            <Popper className={classes.popmenu} open={openPipeline} anchorEl={pipelineButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList autoFocusItem={openPipeline} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${setPipelineActivity(true)} ${handleClose(e)}`}>\n                            <Done fontSize=\"small\" className={classes.toolbarIcon} />\n                            Enable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setPipelineActivity(false)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Disable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearPipeline()} ${handleClose(e)}`}>\n                            <ClearAll fontSize=\"small\" className={classes.toolbarIcon} />\n                            Clear pipeline\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setOpenShellDialog(true)} ${handleClose(e)}`}>\n                            <FiberNew fontSize=\"small\" className={classes.toolbarIcon} />\n                            Create shell script\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={searchButtonRef}\n                onClick={expandSearch}\n            >\n                <Search fontSize=\"small\" className={classes.toolbarIcon} />\n                Search\n            </Button>\n            <Popper className={classes.popmenu} open={openSearch} anchorEl={searchButtonRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                    <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                            <div className={classes.searchBox}>\n                                <Tooltip title=\"RegExp\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchRegExp && classes.activeButton }`}\n                                    onClick={() => setSearchRegExp(prev => !prev)}\n                                >\n                                    <Translate />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Case sensitive\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchCaseSensitive && classes.activeButton }`}\n                                    onClick={() => setSearchCaseSensitive(prev => !prev)}\n                                >\n                                    <TextFields />\n                                </IconButton>\n                                </Tooltip>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <Search />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        onChange={event => setSearchExpression(event.target.value)}\n                                        value={searchExpression}\n                                    />\n                                    <Tooltip title=\"Remove\">\n                                    <IconButton size=\"small\" style={{marginRight: \"5px\"}} \n                                        onClick={() => setSearchExpression(\"\")}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    </Tooltip>\n                                </div>\n                                <Tooltip title=\"Previous\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                    onClick={() => find(searchExpression, { backwards: true, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipPrevious />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next\">\n                                <IconButton size=\"small\" className={classes.searchBtns}\n                                     onClick={() => find(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipNext />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"All\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                     onClick={() => findAll(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <AllInclusive />\n                                </IconButton>\n                                </Tooltip>\n                            </div>\n                        </ClickAwayListener>\n                    </Paper>\n                </Grow>\n            )}\n            </Popper>\n            {openShellDialog &&\n                <ShellDialog \n                    open={openShellDialog}\n                    close={() => setOpenShellDialog(false)}\n                    pipeline={pipeline}\n                />\n            }\n        </ Toolbar>\n    );\n});\n\nexport default EditorToolbar;","import React, { forwardRef, useImperativeHandle, useEffect, useRef, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nconst EditorIn = React.memo(forwardRef(({ content, edit, wrap, toggleBreakpoint, onCursorChange }, ref) => {\n  \tconst aceIn = useRef(null);\n\n  \tuseImperativeHandle(ref, () => ({\n    \tfind(expression, properties){\n    \t  \taceIn.current.editor.find(expression, properties);\n    \t},\n\t\n    \tfindAll(expression, properties) {\n    \t  \taceIn.current.editor.findAll(expression, properties);\n    \t},\n\n    \tresize() {\n    \t  \taceIn.current.editor.resize();\n    \t},\n\n    \tundo()  {\n    \t  \taceIn.current.editor.undo();\n    \t},\n\t\n    \tredo  ()  {\n    \t  \taceIn.current.editor.redo();\n    \t},\n\t\n    \tclearAllBreakpoints  ()  {\n    \t  \taceIn.current.editor.session.clearBreakpoints();\n    \t},\n\t}));\n\n\t/**\n\t * https://ourcodeworld.com/articles/read/1052/how-to-add-toggle-breakpoints-on-the-ace-editor-gutter\n     */\n\tuseEffect(() => {\n  \t\taceIn.current.editor.on(\"guttermousedown\", function(e) {\n\t\tvar target = e.domEvent.target;\n\t\t\n    \tif (target.className.indexOf(\"ace_gutter-cell\") === -1) {\n    \t    return;\n    \t}\n\n    \t/*// Pokud neni editor focusnut ignorovat nastaveni breakpointu (mozna se bude hodit).\n    \tif (!(e.editor.isFocused())){\n    \t    return; \n    \t}*/\n\n    \t// Misto za cislici ignorujeme pro nastaveni breakpointu\n    \tif (e.clientX > 25 + target.getBoundingClientRect().left) {\n    \t    return;\n    \t}\n\n    \tvar row = e.getDocumentPosition().row;\n    \tvar breakpoints = e.editor.session.getBreakpoints(row, 0);\n\n    \tif (typeof breakpoints[row] === typeof undefined) {\n    \t  e.editor.session.setBreakpoint(row);\n    \t}\n    \telse {\n    \t    e.editor.session.clearBreakpoint(row);\n    \t}\n\n    \te.stop();\n\t\n    \ttoggleBreakpoint(breakpoints);\n    \t});\n  \t}, [toggleBreakpoint]);\n\n\n  \tconst onChange = useCallback((newValue) => {\n  \t  \tedit(newValue);\n  \t  \tconsole.log(aceIn.current.editor.session.getBreakpoints());\n  \t}, [edit]);\n  \n    return (\n    \t<AceEditor\n    \t    theme=\"idle_fingers\"\n    \t    fontSize=\"20px\"\n    \t    onChange={onChange}\n    \t    onCursorChange={(selection, event) => onCursorChange(selection, event)}\n    \t    ref={aceIn}\n    \t    value={content}\n    \t    mode=\"plain_text\"\n    \t    name=\"EditorIn\"\n    \t    height=\"100%\"\n    \t    width=\"100%\"\n    \t    placeholder=\"Insert your input here\"\n    \t    showPrintMargin={false}\n    \t    hScrollBarAlwaysVisible={true}\n    \t    debounceChangePeriod={1500}\n    \t    wrapEnabled={wrap}\n    \t    editorProps={{ $blockScrolling: true }}\n\t\t/>\n\t);\n}));\n \nexport default EditorIn;","import React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\nconst EditorOut = React.memo(forwardRef(({ content, wrap }, ref) => {\n  \tconst aceOut = useRef(null);\n  \n  \tuseImperativeHandle(ref, () => ({\n  \t\tfind(expression, properties) {\n  \t\t\taceOut.current.editor.find(expression, properties);\n\t\t},\n\t\t  \n  \t\tfindAll(expression, properties) {\n  \t\t  \taceOut.current.editor.findAll(expression, properties);\n  \t\t},\n\n  \t\tresize() {\n  \t\t  \taceOut.current.editor.resize();\n  \t\t},\n  \t}));\n\n    return (\n    \t<AceEditor\n    \t    theme=\"idle_fingers\"\n    \t    fontSize=\"20px\"\n    \t    ref={aceOut}\n    \t    value={content}\n    \t    name=\"EditorOut\"\n    \t    height=\"100%\"\n    \t    width=\"100%\"\n    \t    mode=\"plain_text\"\n    \t    readOnly={true}\n    \t    placeholder=\"Your output will be here\"\n    \t    showPrintMargin={false}\n    \t    hScrollBarAlwaysVisible={true}\n    \t    wrapEnabled={wrap}\n    \t    editorProps={{ $blockScrolling: true }}\n\t\t/>\n\t);\n}));\n \nexport default EditorOut;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(33, 33, 33)\",\n        height: \"18px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        padding: \"1px 20px\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        flexWrap: \"nowrap\",\n        flexDirection: \"row-reverse\",\n        fontSize: \"13px\",\n        borderRadius: \"0px\",\n    },\n    item: {\n        marginLeft: \"15px\",\n    },\n    enabled: {\n        color: \"green\",\n    },\n    disabled: {\n        color: \"#bf001d\",\n    },\n    violet: {\n        color: \"#e35d14\",\n    },\n}));\n\nconst EditorBottomPanel = React.memo(forwardRef(({wrap, inspectMode}, ref) => {\n    const classes = useStyles();\n\n    const [position, setPosition] = useState({line: 1, column: 1});\n\n\n    useImperativeHandle(ref, () => ({\n        setPosition(line, column) {\n            setPosition(state => ({...state, line: line, column: column}));\n        }\n            \n    }));\n\n    return (\n        <Paper elevation={7} className={classes.root}>\n            <span className={classes.item}>Wrap: {wrap ? <span className={classes.enabled}>Enabled</span> : <span className={classes.disabled}>Disabled</span>}</span>\n            <span className={classes.item}>Mode: <span className={classes.violet}>{ inspectMode ? \"Inspect\" : \"Auto\" }</span></span>\n            <span>Ln {position.line}, Col {position.column}</span>\n        </Paper>\n    );\n}));\n\nexport default EditorBottomPanel;","import React, { useRef, useState, useCallback } from \"react\";\nimport EditorToolbar from \"./EditorToolbar\";\nimport SplitPane from \"react-split-pane\";\nimport { Resizable } from \"re-resizable\";\nimport EditorIn from \"./EditorIn\";\nimport EditorOut from \"./EditorOut\";\nimport { LinearProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditorBottomPanel from \"./EditorBottomPanel\";\nimport \"./SplitEditor.css\";\n\nconst ColorLinearProgress = withStyles({\n    barColorPrimary: {\n      backgroundColor: '#028fd4',\n    },\n})(LinearProgress);\n\nconst SplitEditor = React.memo(({ editorContent, editText, editorResult, showAlert, toggleBreakpoint, inspectMode, toggleInspectMode, pipeProgress, pipeline, setPipelineActivity, clearPipeline }) => {\n    const aceIn = useRef();\n    const aceOut = useRef();\n    const bottomPanel = useRef();\n\n    const [wrap, setWrap] = useState(false);\n\n    const find = useCallback((expression, properties) => {\n        aceIn.current.find(expression, properties);\n        aceOut.current.find(expression, properties);\n    }, []);\n\n    const findAll = useCallback((expression, properties) => {\n        aceIn.current.findAll(expression, properties);\n        aceOut.current.findAll(expression, properties);\n    }, []);\n\n    const toggleWrap = useCallback(() => {\n        setWrap(prev => !prev);\n    }, [setWrap]);\n\n    const handleResize = useCallback(() => {\n        aceIn.current.resize();\n        aceOut.current.resize();\n    }, []);\n\n    const undo = useCallback(() => {\n        aceIn.current.undo();\n    }, []);\n\n    const redo = useCallback(() => {\n        aceIn.current.redo();\n    }, []);\n\n    const clearAllBreakpoints = useCallback(() => {\n        aceIn.current.clearAllBreakpoints();\n        toggleBreakpoint([]);\n    }, [toggleBreakpoint]);\n\n    const initialEditorHeight = useCallback(() => {\n        const height = window.innerHeight - 1047;   // 1047 celkova vyska ostatniho contentu\n\n        return height < 480 ? \"480px\" : height;\n    }, []);\n\n    const onCursorChange = useCallback((selection, event) => {\n        bottomPanel.current.setPosition(selection.cursor.row + 1, selection.cursor.column + 1);\n    }, []);\n\n    return ( \n        <React.Fragment>\n            <EditorToolbar \n                setInput={editText} \n                result={editorResult} \n                undo={undo} \n                redo={redo}\n                clearAllBreakpoints={clearAllBreakpoints}\n                showAlert={showAlert} \n                wrap={wrap}\n                toggleWrap={toggleWrap}\n                find={find}\n                findAll={findAll}\n                inspectMode={inspectMode}\n                toggleInspectMode={toggleInspectMode}\n                pipeline={pipeline}\n                setPipelineActivity={setPipelineActivity}\n                clearPipeline={clearPipeline}\n            />\n            <Resizable\n                defaultSize={{ width: \"100%\", height: initialEditorHeight() }}\n                minHeight={100}\n                minWidth=\"100%\"\n                maxWidth=\"100%\"\n                enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n                onResize={() => handleResize()}\n                style={{display: \"flex\", flexDirection: \"column\", flexWrap: \"nowrap\", justifyContent: \"flex-start\",\n                    alignItems: \"stretch\", borderBottom: \"1px solid rgb(30, 30, 30)\"}}\n            >\n                <SplitPane \n                    className=\"SplitEditor\" \n                    split=\"vertical\" \n                    style={{height: \"100%\", position: \"static\"}} \n                    minSize={200} maxSize={-200} \n                    defaultSize={\"50%\"} \n                    onChange={() => handleResize()}\n                >\n                    <EditorIn ref={ aceIn } content={editorContent} edit={editText} wrap={wrap} toggleBreakpoint={toggleBreakpoint} onCursorChange={onCursorChange} />\n                    <EditorOut ref={ aceOut } content={editorResult} wrap={wrap} />\n                </SplitPane>\n                    <ColorLinearProgress variant=\"determinate\" value={pipeProgress} />\n                    <EditorBottomPanel ref={bottomPanel} wrap={wrap} inspectMode={inspectMode} />\n            </Resizable>\n        </React.Fragment>\n    );  \n});\n \nexport default SplitEditor;","export default {\n    toolHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    toolName: {\n        color: \"#d9d9d9\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n        display: \"inline\",\n    },\n    toolInfo: {\n        marginLeft: \"5px\",\n        marginBottom: \"5px\",\n        color: \"#d9d9d9\",\n        \"&:hover\": {\n            color: \"#039be5\",\n        }\n    },\n    divider: {\n\t    marginTop: \"20px\",\n    },\n    infoCloseButton: {\n        marginLeft: \"50px\",\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n    infoTitleIcon: {\n        marginRight: \"15px\",\n        color: \"#09b011\",\n    },\n    infoTitle: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#09b011\",\n        fontWeight: \"bold\",\n        fontSize: \"26px\",\n    },\n    infoContent: {\n        marginBottom: \"20px\",\n    }\n};","import React, { useState } from \"react\";\nimport { Typography, IconButton, Tooltip, useTheme, useMediaQuery, MuiThemeProvider, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport { Info, Close } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\n\nconst ToolHeader = React.memo(({ classes, toolname, description }) => {\n    const [showInfo, setShowInfo] = useState(false);\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={classes.toolHeader}>\n                <Typography variant=\"h5\" className={classes.toolName}>{toolname}</Typography>\n                <Tooltip title=\"Info\">\n                    <IconButton \n                        className={classes.toolInfo}\n                        onClick={() => setShowInfo(true)}\n                        size=\"small\"\n                    >\n                        <Info />\n                    </IconButton>\n                </Tooltip>\n            </div>\n            {showInfo &&\n            <Dialog\n            open={showInfo}\n            onClose={() => setShowInfo(false)}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"sm\"\n            aria-labelledby=\"info-dialog-title\"\n            >\n                <DialogTitle id=\"info-dialog-title\">\n                    <div className={classes.infoTitle}>\n                        <Info className={classes.infoTitleIcon} fontSize=\"large\" />\n                        <span>{toolname + \" info\"}</span>\n                    </div>\n                    <Tooltip title={\"Close\"}>\n                        <IconButton aria-label=\"close\" className={classes.infoCloseButton} onClick={() => setShowInfo(false)}>\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </DialogTitle>\n                <DialogContent dividers className={classes.infoContent}>\n                    {description}\n                </DialogContent>\n            </Dialog>}\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ToolHeader);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction MatchTool(props) {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(\"\");\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [matchInColumn, setMatchInColumn] = useState(\"\");\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(\"\");\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    const handleMatch = () => {\n        if (matchFind === \"\"){\n            setMatchFindError(true);\n        }\n\n        if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n            setMatchDelimiterError(true);\n        }\n\n        if (matchInColumn !== \"\" && matchInColumn <= 0) {\n            setMatchColumnError(true);\n        }\n\n        if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n            props.addTool({toolname: \"match\", expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Match added into the pipeline.\");\n            setMatchFind(\"\");\n            setMatchInColumn(\"\");\n            setMatchColumnDelimiter(\"\");\n            setMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"match-occurence-label\"\n                      id=\"match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"match-case-label\"\n                      id=\"match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"match-expression\"\n                    label=\"Find\"\n                    value={matchFind}\n                    required={true}\n                    onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={matchFindError === true}\n                    helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-match\"\n                    className={classes.button}\n                    onClick={() => handleMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default MatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexMatchTool(props) {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(\"\");\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(\"\");\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(\"\");\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    const handleRegexMatch = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexMatchFind);\n        } \n        catch (e) {\n            setRegexMatchFindError(true);\n            validExpression = false;\n        }\n\n        if (regexMatchFind === \"\"){\n            setRegexMatchFindError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n            setRegexMatchDelimiterError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n            setRegexMatchColumnError(true);\n        }\n\n        if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexMatch\", expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex match added into the pipeline.\");\n            setRegexMatchFind(\"\");\n            setRegexMatchInColumn(\"\");\n            setRegexMatchColumnDelimiter(\"\");\n            setRegexMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-match-occurence-label\"\n                      id=\"regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-match-case-label\"\n                      id=\"regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-match-expression\"\n                    label=\"Regular expression\"\n                    value={regexMatchFind}\n                    required={true}\n                    onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={regexMatchFindError === true}\n                    helperText={regexMatchFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-match\"\n                    className={classes.button}\n                    onClick={() => handleRegexMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexMatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CompareTool(props) {\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(\"\");\n    const [comparator, setComparator] = useState(\"gt\")\n    const [inColumn, setInColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleCompare = () => {\n        if (compareValue === \"\"){\n            setValueError(true);\n        }\n\n        if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (inColumn !== \"\" && inColumn <= 0) {\n            setInColumnError(true);\n        }\n\n        if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n            props.addTool({toolname: \"compare\", value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Compare added into the pipeline.\");\n            setCompareValue(\"\");\n            setInColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding compare into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"compare-comparator-label\"\n                      id=\"compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"compare-value\"\n                    label=\"Compare value\"\n                    value={compareValue}\n                    required={true}\n                    onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                    className={classes.textField}\n                    error={valueError === true}\n                    helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-compare\"\n                    className={classes.button}\n                    onClick={() => handleCompare()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default CompareTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Match from \"./Tools/Match\";\nimport RegexMatch from \"./Tools/RegexMatch\";\nimport Compare from \"./Tools/Compare\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Match\" description={\n                        <React.Fragment>\n                            <p>Searches for <b>pattern</b> in each line independently. If line contains specified text, then is preproduced to the output.</p>\n                            <h4>Options:</h4>\n                            <ul>\n                                <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                            </ul>\n                        </React.Fragment>\n                    } \n                />\n                    <Match addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex match\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently. If line contains expression, then is preproduced to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexMatch addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Compare\" description={\n                            <React.Fragment>\n                                <p>Compare each line with <b>requested value</b>. If comparison matches <b>comparator</b>, then line is preproduced to the output. The comparison is made on an <b>ASCII</b> basis.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Comparator -</b> Specifies mathematical comparison.</li>\n                                    <li><b>Column - </b> sets a column specifically for comparison. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        }\n                    />\n                    <Compare addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReplaceTool(props) {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [replaceInColumn, setReplaceInColumn] = useState(\"\");\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(\"\");\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n\n        if (replaceFind === replaceReplace && replaceFind !== \"\") {\n            setReplaceReplaceError(true);\n        }\n\n        if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n            setReplaceDelimiterError(true);\n        }\n\n        if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n            setReplaceColumnError(true);\n        }\n\n        if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n            props.addTool({toolname: \"replace\", find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n            setReplaceInColumn(\"\");\n            setReplaceColumnDelimiter(\"\");\n            setReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"replace-occurence-label\"\n                      id=\"replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"replace-case-label\"\n                      id=\"replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"replace-find\"\n                    label=\"Find\"\n                    value={replaceFind}\n                    required={true}\n                    onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={replaceFindError === true}\n                    helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-replace\"\n                    label=\"Replace\"\n                    value={replaceReplace}\n                    onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                    className={classes.textField}\n                    error={replaceReplaceError === true}\n                    helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-replace\"\n                    className={classes.button}\n                    onClick={() => handleReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ReplaceTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexReplaceTool(props) {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(\"\");\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(\"\");\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(\"\");\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(\"\");\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    const handleRegexReplace = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexReplaceFind);\n        } \n        catch (e) {\n            setRegexReplaceFindError(true);\n            validExpression = false;\n        }\n\n        if (regexReplaceFind === \"\"){\n            setRegexReplaceFindError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n            setRegexReplaceDelimiterError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n            setRegexReplaceColumnError(true);\n        }\n\n        if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexReplace\", find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex replace added into the pipeline.\");\n            setRegexReplaceFind(\"\");\n            setRegexReplaceReplace(\"\");\n            setRegexReplaceInColumn(\"\");\n            setRegexReplaceColumnDelimiter(\"\");\n            setRegexReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-occurence-label\"\n                      id=\"regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-case-label\"\n                      id=\"regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-replace-find\"\n                    label=\"Regular expression\"\n                    value={regexReplaceFind}\n                    required={true}\n                    onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={regexReplaceFindError === true}\n                    helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-replace\"\n                    label=\"Replace\"\n                    value={regexReplaceReplace}\n                    onChange={event => setRegexReplaceReplace(event.target.value)}\n                    className={classes.textField}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-replace\"\n                    className={classes.button}\n                    onClick={() => handleRegexReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexReplaceTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Replace from \"./Tools/Replace\";\nimport RegexReplace from \"./Tools/RegexReplace\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindAndReplaceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Replace\" description={\n                            <React.Fragment>\n                                <p>Searches for <b>pattern</b> in each line independently and replace them with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Replace addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex replace\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently and replace matches with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexReplace addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindAndReplaceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterColumnsTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"remove\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleFilterColumns = () => {\n        if (position === \"\" || position <= 0){\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"filterColumns\", variant: variant, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Filter columns added into the pipeline.\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"filter-columns-variant-label\"\n                  id=\"filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <TextField\n                id=\"filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.textField}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-columns\"\n                className={classes.button}\n                onClick={() => handleFilterColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textFieldFW: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n}));\n\nfunction FilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(\"empty\");\n    const [caseSensitive, setCaseSensitive] = useState(false);\n    const [column, setColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n    const [customContent, setCustomContent] = useState(\"\");\n\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n    const [customContentError, setCustomContentError] = useState(false);\n\n    const handleRemoveLines = () => {\n        if (content === \"custom\" && customContent === \"\"){\n            setCustomContentError(true);\n        }\n\n        if (content === \"custom\" && (column !== \"\" && delimiter === \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (content === \"custom\" && column !== \"\" && column <= 0) {\n            setColumnError(true);\n        }\n\n        if (content === \"empty\" || content === \"whiteChars\" || (content === \"custom\" && customContent !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\")))) {\n            props.addTool({toolname: \"filterLines\", content: content, casesensitive: caseSensitive, column: column, delimiter: delimiter, customContent: customContent});\n            props.showAlert(\"success\", \"Success: Filter lines added into the pipeline.\");\n            setColumn(\"\");\n            setDelimiter(\"\");\n            setCustomContent(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"filter-lines-content-label\">Content</InputLabel>\n                    <Select\n                      labelId=\"filter-lines-content-label\"\n                      id=\"filter-lines-content\"\n                      className={classes.opts}\n                      value={content}\n                      onChange={(event) => `${setContent(event.target.value)} ${setColumnError(false)} ${setDelimiterError(false)} ${setCustomContentError(false)}`}\n                    >\n                        <MenuItem value={\"empty\"}>Empty</MenuItem>\n                        <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                        <MenuItem value={\"custom\"}>Custom</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"filter-lines-case-label\"\n                      id=\"filter-lines-case\"\n                      disabled={content !== \"custom\"}\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"filter-lines-column\"\n                    label=\"Column\"\n                    disabled={content !== \"custom\"}\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.textField}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                        id=\"filter-lines-delimiter\"\n                        label=\"Delimiter\"\n                        disabled={content !== \"custom\"}\n                        value={delimiter}\n                        onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                        className={classes.textField}\n                        required={column === \"\" ? false : true}\n                        error={delimiterError === true}\n                        helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"filter-lines-custom-content\"\n                    label=\"Custom content\"\n                    disabled={content !== \"custom\"}\n                    value={customContent}\n                    required={content === \"custom\"}\n                    onChange={event => `${setCustomContent(event.target.value)} ${setCustomContentError(false)}`}\n                    className={classes.textFieldFW}\n                    error={customContentError === true}\n                    helperText={customContentError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-filter-lines\"\n                    className={classes.button}\n                    onClick={() => handleRemoveLines()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default FilterLinesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexFilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [expression, setExpression] = useState(\"\");\n    const [caseSensitive, setCaseSensitive] = useState(false);\n    const [column, setColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [expressionError, setExpressionError] = useState(false);\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleRegexFilterLines = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(expression);\n        } \n        catch (e) {\n            setExpressionError(true);\n            validExpression = false;\n        }\n\n        if (expression === \"\"){\n            setExpressionError(true);\n        }\n\n        if (column !== \"\" && delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (column !== \"\" && column <= 0) {\n            setColumnError(true);\n        }\n\n        if (validExpression === true && expression !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\"))) {\n            props.addTool({toolname: \"regexFilterLines\", expression: expression, casesensitive: caseSensitive, column: column, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Regex filter lines added into the pipeline.\");\n            setExpression(\"\");\n            setColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex filter lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-filter-lines-case-label\"\n                      id=\"regex-filter-lines-case\"\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-filter-lines-in-column\"\n                    label=\"Column\"\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-filter-lines-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-filter-lines-expression\"\n                    label=\"Regular expression\"\n                    value={expression}\n                    required={true}\n                    onChange={event => `${setExpression(event.target.value)} ${setExpressionError(false)}`}\n                    className={classes.textField}\n                    error={expressionError === true}\n                    helperText={expressionError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-filter-lines\"\n                    className={classes.button}\n                    onClick={() => handleRegexFilterLines()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexFilterLinesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CutLinesTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"head\");\n    const [count, setCount] = useState(\"\");\n\n    const [countError, setCountError] = useState(false);\n\n    const handleCutLines = () => {\n        if (count === \"\" || count <= 0) {\n            setCountError(true);\n        }\n\n        if (count !== \"\" && count > 0) {\n            props.addTool({toolname: \"cutLines\", variant: variant, count: count});\n            props.showAlert(\"success\", \"Success: Cut lines added into the pipeline.\");\n            setCount(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding cut lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"cut-lines-variant-label\"\n                    id=\"cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-cut-lines\"\n                className={classes.button}\n                onClick={() => handleCutLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default CutLinesTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction TrimTool(props) {\n    const classes = useStyles();\n\n    const handleTrim = () => {\n        props.addTool({toolname: \"trim\"});\n        props.showAlert(\"success\", \"Success: Trim added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-trim\"\n                onClick={() => handleTrim()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default TrimTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction RemoveExtraSpacesTool(props) {\n    const classes = useStyles();\n\n    const handleRemoveExtraSpaces = () => {\n        props.addTool({toolname: \"removeExtraSpaces\"});\n        props.showAlert(\"success\", \"Success: Remove extra spaces added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-remove-extra-spaces\"\n                onClick={() => handleRemoveExtraSpaces()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default RemoveExtraSpacesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nfunction UniqueTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"merge\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [countPrefix, setCountPrefix] = useState(false);\n    const [countDisabled, setCountDisabled] = useState(false);\n\n    const handleUnique = () => {\n        props.addTool({toolname: \"unique\", variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n        props.showAlert(\"success\", \"Success: Unique added into the pipeline.\");\n    }\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"unique-variant-label\"\n                  id=\"unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"unique-case-label\"\n                  id=\"unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-unique\"\n                className={classes.button}\n                onClick={() => handleUnique()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default UniqueTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport FilterColumns from \"./Tools/FilterColumns\";\nimport FilterLines from \"./Tools/FilterLines\";\nimport RegexFilterLines from \"./Tools/RegexFilterLines\";\nimport CutLines from \"./Tools/CutLines\";\nimport Trim from \"./Tools/Trim\";\nimport RemoveExtraSpaces from \"./Tools/RemoveExtraSpaces\";\nimport Unique from \"./Tools/Unique\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ReduceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Unique\" description={\n                            <React.Fragment>\n                                <p>Filter adjacent matching lines from input, writing to output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Merge</b> matching lines are merged to the first occurrence. Unique does not detect repeated lines unless they are adjacent. You may want to sort the input first.<br /><b>Unique only</b> only print unique lines.<br /><b>Duplicate only</b> only print duplicate lines, one for each group.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Unique addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter columns\" description={\n                            <React.Fragment>\n                                <p>Removes or cuts a column from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Remove</b> removes a column from the text.<br /><b>Cut</b> cuts a column from the text.</li>\n                                    <li><b>Position - </b> sets the column position to perform the operation. Numbering starts from 1.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter lines\" description={\n                            <React.Fragment>\n                                <p>Removes lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> sets the content of the row to be filtered.<br /><b>Empty</b> removes all lines without content.<br /><b>White characters</b> removes all lines containing white characters like spaces, tabs, etc.<br /><b>Custom</b> allows you to define custom value to be filtered. Also makes other options available for description.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column -</b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                    <li><b>Custom content -</b> Describes custom content for detection for removal. Detection removes the whole line.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex filter lines\" description={\n                            <React.Fragment>\n                                <p>Removes lines from the text using <b>extended regular expression</b>.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column -</b> sets a column specifically for <b>regex</b> search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                    <li><b>Regular expression -</b> A place to define a regular expression. This field is required.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexFilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Cut lines\" description={\n                            <React.Fragment>\n                                <p>Cuts lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Head</b> cut lines from the beginning of the text.<br /><b>Tail</b> cut lines from the end of the text.</li>\n                                    <li><b>Count - </b> sets the number of lines to be cutted.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <CutLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Remove extra spaces\" description={\n                                <React.Fragment>\n                                    <p>Removes all adjacent spaces from text and replace them with single space.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <RemoveExtraSpaces addTool={addTool} showAlert={showAlert} />\n                    </div>\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Trim\" description={\n                                <React.Fragment>\n                                    <p>Removes all leading and trailing spaces on each line.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <Trim addTool={addTool} showAlert={showAlert} />\n                    </div>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ReduceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, Collapse } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexEnd: {\n        marginTop: \"16px\",\n        display: \"flex\",\n        alignItems: \"flex-end\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    collapse: {\n        width: \"100%\",\n        flex: 1,\n    },\n}));\n\nfunction InsertColumnTool(props) {\n    const classes = useStyles();\n\n    const [focused, setFocused] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleInsertColumn = () => {\n        if (content === \"\"){\n            setContentError(true);\n        }\n\n        if (position === \"\" || position <= 0) {\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"insertColumn\", content: content, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Insert column added into the pipeline.\");\n            setContent(\"\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n            setFocused(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding insert column into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <TextField\n                    id=\"insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    required={true}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"insert-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexEnd}>\n                <Collapse className={classes.collapse} in={focused} collapsedHeight={\"50px\"} >\n                    <TextField\n                        id=\"insert-column-content\"\n                        label=\"Content\"\n                        value={content}\n                        required={true}\n                        variant=\"filled\"\n                        onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                        className={classes.textField}\n                        style={{width: \"100%\"}}\n                        error={contentError === true}\n                        helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                        multiline={true}\n                        rows={10}\n                        onFocus={() => setFocused(true)}\n                        onBlur={() => content === \"\" ? setFocused(false) : null}\n                    />\n                </Collapse>\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-insert-column\"\n                    className={classes.button}\n                    onClick={() => handleInsertColumn()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default InsertColumnTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SwapColumnsTool(props) {\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(\"\");\n    const [secondPosition, setSecondPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleSwapColumns = () => {\n        if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n            setFirstPositionError(true);\n        }\n\n        if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n            setSecondPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n            props.addTool({toolname: \"swapColumns\", first: firstPosition, second: secondPosition, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Swap columns added into the pipeline.\");\n            setFirstPosition(\"\");\n            setSecondPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding swap columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-swap-columns\"\n                className={classes.button}\n                onClick={() => handleSwapColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SwapColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ConvertCaseTool(props) {\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(\"uppercase\");\n\n    const handleConvertCase = () => {\n        props.addTool({toolname: \"convertCase\", textCase: textCase});\n        props.showAlert(\"success\", \"Success: Convert case added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"convert-case-case-label\"\n                  id=\"convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-convert-case\"\n                className={classes.button}\n                onClick={() => handleConvertCase()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ConvertCaseTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SortTool(props) {\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(\"ascending\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(false);\n\n    const handleSort = () => {\n        props.addTool({toolname: \"sort\", order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n        props.showAlert(\"success\", \"Success: Sort added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"sort-order-label\">Order</InputLabel>\n                <Select\n                    labelId=\"sort-order-label\"\n                    id=\"sort-order\"\n                    className={classes.opts}\n                    value={order}\n                    onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"sort-case-label\">Case</InputLabel>\n                <Select\n                    labelId=\"sort-case-label\"\n                    id=\"sort-case\"\n                    className={classes.opts}\n                    value={caseSensitive}\n                    onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-sort\"\n                className={classes.button}\n                onClick={() => handleSort()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SortTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReverseTool(props) {\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(\"vertical\");\n\n    const handleReverse = () => {\n        props.addTool({toolname: \"reverse\", direction: direction});\n        props.showAlert(\"success\", \"Success: Reverse added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"reverse-direction-label\"\n                  id=\"reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-reverse\"\n                className={classes.button}\n                onClick={() => handleReverse()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ReverseTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"400px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction LineNumbersTool(props) {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(\"\");\n    const [variant, setVariant] = useState(\"all\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const handleLineNumbers = () => {\n        props.addTool({toolname: \"lineNumbers\", variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n        props.showAlert(\"success\", \"Success: Line numbers added into the pipeline.\");\n        setStartingNumber(\"\");\n        setDelimiter(\"\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"line-numbers-variant-label\"\n                  id=\"line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"all\"}>All lines</MenuItem>\n                    <MenuItem value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-line-numbers\"\n                className={classes.button}\n                onClick={() => handleLineNumbers()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default LineNumbersTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport InsertColumn from \"./Tools/InsertColumn\";\nimport SwapColumns from \"./Tools/SwapColumns\";\nimport ConvertCase from \"./Tools/ConvertCase\";\nimport Sort from \"./Tools/Sort\";\nimport Reverse from \"./Tools/Reverse\";\nimport LineNumbers from \"./Tools/LineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ModifyTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Insert column\" description={\n                            <React.Fragment>\n                                <p>Insert column with specified <b>content</b> on given position. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> specifies content of the new column.</li>\n                                    <li><b>Position -</b> determines the position of the new column. Numbering starts from 1.</li>\n                                    <li><b>Delimiter - </b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <InsertColumn addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Sort\" description={\n                            <React.Fragment>\n                                <p>Sort lines of text. The sort is made on an <b>ASCII</b> basis character by character from the beginning of line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Order -</b> determines the order of sort.<br /><b>Ascending</b> is arranged from smallest to the largest value.<br /><b>Descending</b> is arranged from the largest value to the smallest.</li>\n                                    <li><b>Case -</b> specify if sort is ignoring capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Sort addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Swap columns\" description={\n                            <React.Fragment>\n                                <p>Swap columns in text on given positions. Numbering of positions starts from 1. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>First position -</b> specifies the location of the first column.</li>\n                                    <li><b>Second position -</b> specifies the location of the second column.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <SwapColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Line numbers\" description={\n                            <React.Fragment>\n                                <p>Adds a line number to the begging of the line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> determines on which lines the numbers will be added.<br /><b>Non empty</b> adds to all non-empty lines.<br /><b>All</b> add numbers to all lines.</li>\n                                    <li><b>Starting number -</b> defines the starting number. This number is increasing by each next line. Default value is 1 if not specified.</li>\n                                    <li><b>Delimiter -</b> sets content to be added after line number. Default is space if not specified.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <LineNumbers addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Reverse\" description={\n                            <React.Fragment>\n                                <p>Reverse text from the inptut and prints to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> sets the direction of rotation.<br /><b>Horizontal</b> each characters in line is reversed (from left to right).<br /><b>Vertical</b> reverse the order of lines (from top to bottom).</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Reverse addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Convert case\" description={\n                            <React.Fragment>\n                                <p>Convert case of all letters in text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Case -</b> defines case of letters.<br /><b>Upper case</b> converts a text to uppercase letters.<br /><b>Lower case</b> converts a text to lowercase letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <ConvertCase addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ModifyTab);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { Search, Build, FindReplace, RemoveCircleOutline } from \"@material-ui/icons\";\nimport FindTab from \"./Tabs/FindTab\";\nimport ReplaceTab from \"./Tabs/ReplaceTab\";\nimport ReduceTab from \"./Tabs/ReduceTab\";\nimport ModifyTab from \"./Tabs/ModifyTab\";\n\n// Inspirovano: https://material-ui.com/components/tabs/\nfunction TabPanel(props) {\n  \tconst { children, value, index, ...other } = props;\n\n  \treturn (\n  \t  \t<Typography\n  \t  \t  \tcomponent=\"div\"\n  \t  \t  \trole=\"tabpanel\"\n  \t  \t  \thidden={value !== index}\n  \t  \t  \tid={`scrollable-auto-tabpanel-${index}`}\n  \t  \t  \taria-labelledby={`scrollable-auto-tab-${index}`}\n  \t  \t  \t{...other}\n  \t  \t>\n  \t    \t<Box p={3}>{children}</Box>\n  \t  </Typography>\n  \t);\n}\n\nTabPanel.propTypes = {\n  \tchildren: PropTypes.node,\n  \tindex: PropTypes.any.isRequired,\n  \tvalue: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  \treturn {\n  \t  \tid: `scrollable-auto-tab-${index}`,\n  \t  \t'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  \t};\n}\n\nconst theme = createMuiTheme({\n  \tpalette: {\n  \t  \tprimary: {\n  \t  \t  \tmain: lightBlue[600],\n  \t  \t  \tlight: lightBlue[300],\n  \t  \t  \tdark: lightBlue[900],\n  \t  \t},\n  \t  \ttype: 'dark',\n  \t}\n});\n\nconst useStyles = makeStyles(theme => ({\n  \troot: {\n  \t  \tflexGrow: 1,\n  \t  \tmarginTop: '20px',\n  \t  \tmarginBottom: '20px',\n  \t  \twidth: '95%',\n  \t  \tmarginLeft: 'auto',\n  \t  \tmarginRight: 'auto',\n  \t  \tbackgroundColor: 'rgb(50,50,50)',\n  \t  \tcolor: 'white',\n  \t},\n  \tfullWidth: {\n  \t  \twidth: \"100% !important\",\n  \t},\n}));\n\nconst ToolTabs = React.memo(({ showAlert, addTool }) => {\n  \tconst classes = useStyles();\n  \tconst [value, setValue] = React.useState(0);\n\n  \tconst fullWidth = useMediaQuery(theme.breakpoints.down('sm'));\n\n  \tconst handleChange = (event, newValue) => {\n  \t  \tsetValue(newValue);\n  \t};\n\n  \treturn (\n    \t<MuiThemeProvider theme={theme}>\n    \t  \t<div className={`${classes.root} ${fullWidth && classes.fullWidth}`}>\n    \t  \t  \t<AppBar position=\"static\" color=\"default\">\n    \t  \t  \t  \t<Tabs\n    \t  \t  \t  \t  \tvalue={value}\n    \t  \t  \t  \t  \tonChange={handleChange}\n    \t  \t  \t  \t  \tindicatorColor=\"primary\"\n    \t  \t  \t  \t  \ttextColor=\"primary\"\n    \t  \t  \t  \t  \tvariant=\"fullWidth\"\n    \t  \t  \t  \t  \taria-label=\"tabs\"\n    \t  \t  \t  \t  \tscrollButtons=\"auto\"\n    \t  \t  \t  \t  \tcentered\n    \t  \t  \t  \t>\n    \t  \t  \t    \t<Tab icon={<Search />} label=\"Find\" {...a11yProps(0)} />\n    \t  \t  \t    \t<Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n    \t  \t  \t    \t<Tab icon={<RemoveCircleOutline />} label=\"Reduce\" {...a11yProps(2)} />\n    \t  \t  \t    \t<Tab icon={<Build />} label=\"Modify\" {...a11yProps(3)} />\n    \t  \t  \t  \t</Tabs>\n    \t  \t  \t</AppBar>\n    \t  \t  \t<TabPanel theme={theme} value={value} index={0}>\n    \t  \t  \t  \t<FindTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={1}>\n    \t  \t  \t  \t<ReplaceTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={2}>\n    \t  \t  \t  \t<ReduceTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={3}>\n    \t  \t  \t  \t<ModifyTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel> \n    \t  \t</div>\n    \t</MuiThemeProvider>\n  \t);\n});\n\nexport default ToolTabs;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(props.tool.expression);\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [matchInColumn, setMatchInColumn] = useState(props.tool.inColumn);\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (matchFind === \"\"){\n                setMatchFindError(true);\n            }\n    \n            if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n                setMatchDelimiterError(true);\n            }\n    \n            if (matchInColumn !== \"\" && matchInColumn <= 0) {\n                setMatchColumnError(true);\n            }\n            \n            if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n                props.updateTool({...props.tool, expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-match-occurence-label\"\n                      id=\"edit-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-match-case-label\"\n                      id=\"edit-match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-match-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={matchFind}\n                required={true}\n                onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                error={matchFindError === true}\n                helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(props.tool.expression);\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(props.tool.inColumn);\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexMatchFind);\n            } \n            catch (e) {\n                setRegexMatchFindError(true);\n                validExpression = false;\n            }\n\n            if (regexMatchFind === \"\"){\n                setRegexMatchFindError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n                setRegexMatchDelimiterError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n                setRegexMatchColumnError(true);\n            }\n            \n            if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-occurence-label\"\n                      id=\"edit-regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-case-label\"\n                      id=\"edit-regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-match-find\"\n                label=\"Regular expression\"\n                className={classes.textField}\n                value={regexMatchFind}\n                required={true}\n                onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                error={regexMatchFindError === true}\n                helperText={regexMatchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(props.tool.find);\n    const [replaceReplace, setReplaceReplace] = useState(props.tool.replace);\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [replaceInColumn, setReplaceInColumn] = useState(props.tool.inColumn);\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (replaceFind === \"\"){\n                setReplaceFindError(true);\n            }\n    \n            if (replaceFind === replaceReplace && replaceFind !== \"\") {\n                setReplaceReplaceError(true);\n            }\n    \n            if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n                setReplaceDelimiterError(true);\n            }\n    \n            if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n                setReplaceColumnError(true);\n            }\n    \n            if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n                props.updateTool({...props.tool, find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-occurence-label\"\n                      id=\"edit-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-case-label\"\n                      id=\"edit-replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={replaceFind}\n                required={true}\n                onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                error={replaceFindError === true}\n                helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={replaceReplace}\n                onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                error={replaceReplaceError === true}\n                helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(props.tool.find);\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(props.tool.replace);\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(props.tool.inColumn);\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexReplaceFind);\n            } \n            catch (e) {\n                setRegexReplaceFindError(true);\n                validExpression = false;\n            }\n\n            if (regexReplaceFind === \"\"){\n                setRegexReplaceFindError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n                setRegexReplaceDelimiterError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n                setRegexReplaceColumnError(true);\n            }\n\n            if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-occurence-label\"\n                      id=\"edit-regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-case-label\"\n                      id=\"edit-regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={regexReplaceFind}\n                required={true}\n                onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                error={regexReplaceFindError === true}\n                helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-regex-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={regexReplaceReplace}\n                onChange={event => setRegexReplaceReplace(event.target.value)}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditCompare = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(props.tool.value);\n    const [comparator, setComparator] = useState(props.tool.comparator)\n    const [inColumn, setInColumn] = useState(props.tool.inColumn);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {      \n            if (compareValue === \"\"){\n                setValueError(true);\n            }\n    \n            if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (inColumn !== \"\" && inColumn <= 0) {\n                setInColumnError(true);\n            }\n    \n            if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n                props.updateTool({...props.tool, value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"edit-compare-comparator-label\"\n                      id=\"edit-compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-compare-value\"\n                label=\"Compare value\"\n                value={compareValue}\n                required={true}\n                onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                className={classes.textField}\n                error={valueError === true}\n                helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCompare;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditFilterColumns = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (position === \"\" || position <= 0){\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, variant: variant, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-filter-columns-variant-label\"\n                  id=\"edit-filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterColumns;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textFieldFW: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n}));\n\nconst EditFilterLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [column, setColumn] = useState(props.tool.column);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n    const [customContent, setCustomContent] = useState(props.tool.customContent);\n\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n    const [customContentError, setCustomContentError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"custom\" && customContent === \"\"){\n                setCustomContentError(true);\n            }\n    \n            if (content === \"custom\" && (column !== \"\" && delimiter === \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (content === \"custom\" && column !== \"\" && column <= 0) {\n                setColumnError(true);\n            }\n    \n            if (content === \"empty\" || content === \"whiteChars\" || (content === \"custom\" && customContent !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\")))) {\n                props.updateTool({...props.tool, content: content, casesensitive: caseSensitive, column: column, delimiter: delimiter, customContent: customContent});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-filter-lines-content-label\">Content</InputLabel>\n                    <Select\n                      labelId=\"edit-filter-lines-content-label\"\n                      id=\"edit-filter-lines-content\"\n                      className={classes.opts}\n                      value={content}\n                      onChange={(event) => setContent(event.target.value)}\n                    >\n                        <MenuItem value={\"empty\"}>Empty</MenuItem>\n                        <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                        <MenuItem value={\"custom\"}>Custom</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-filter-lines-case-label\"\n                      id=\"edit-filter-lines-case\"\n                      disabled={content !== \"custom\"}\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-filter-lines-column\"\n                    label=\"Column\"\n                    disabled={content !== \"custom\"}\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.textField}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-filter-lines-delimiter\"\n                    label=\"Delimiter\"\n                    disabled={content !== \"custom\"}\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.textField}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"edit-filter-lines-custom-content\"\n                    label=\"Custom content\"\n                    disabled={content !== \"custom\"}\n                    value={customContent}\n                    required={content === \"custom\"}\n                    onChange={event => `${setCustomContent(event.target.value)} ${setCustomContentError(false)}`}\n                    className={classes.textFieldFW}\n                    error={customContentError === true}\n                    helperText={customContentError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexFilterLines = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [expression, setExpression] = useState(props.tool.expression);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [column, setColumn] = useState(props.tool.column);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [expressionError, setExpressionError] = useState(false);\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(expression);\n            } \n            catch (e) {\n                setExpressionError(true);\n                validExpression = false;\n            }\n\n            if (expression === \"\"){\n                setExpressionError(true);\n            }\n    \n            if (column !== \"\" && delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (column !== \"\" && column <= 0) {\n                setColumnError(true);\n            }\n            \n            if (validExpression === true && expression !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: expression, casesensitive: caseSensitive, column: column, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-filter-lines-case-label\"\n                      id=\"edit-regex-filter-lines-case\"\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-filter-lines-in-column\"\n                    label=\"Column\"\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-filter-lines-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-filter-lines-expression\"\n                label=\"Regular expression\"\n                value={expression}\n                required={true}\n                onChange={event => `${setExpression(event.target.value)} ${setExpressionError(false)}`}\n                className={classes.textField}\n                error={expressionError === true}\n                helperText={expressionError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexFilterLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n    },\n}));\n\nconst EditCutLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [count, setCount] = useState(props.tool.count);\n\n    const [countError, setCountError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (count === \"\" || count <= 0) {\n                setCountError(true);\n            }\n            if (count !== \"\" && count > 0) {\n                props.updateTool({...props.tool, variant: variant, count: count});\n                props.close();\n            }     \n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"edit-cut-lines-variant-label\"\n                    id=\"edit-cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCutLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditInsertColumn = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"\"){\n                setContentError(true);\n            }\n    \n            if (position === \"\" || position <= 0) {\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, content: content, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                    id=\"edit-insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n            <TextField\n                id=\"edit-insert-column-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={position === \"\" ? false : true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-insert-column-content\"\n                label=\"Content\"\n                value={content}\n                required={true}\n                variant=\"filled\"\n                onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                className={classes.textField}\n                style={{width: \"100%\", marginTop: \"16px\"}}\n                error={contentError === true}\n                helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                multiline={true}\n                rows={10}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditInsertColumn;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditSwapColumns = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(props.tool.first);\n    const [secondPosition, setSecondPosition] = useState(props.tool.second);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n                setFirstPositionError(true);\n            }\n\n            if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n                setSecondPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n                props.updateTool({...props.tool, first: firstPosition, second: secondPosition, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"edit-swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditSwapColumns;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditConvertCase = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(props.tool.textCase);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, textCase: textCase});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-convert-case-case-label\"\n                  id=\"edit-convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditConvertCase;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n    flexCenter: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditSort = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(props.tool.order);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(props.tool.ignoreLeadingBlanks);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n            props.close();\n        }\n    }));\n\n    return (\n        <div className={classes.flexCenter}>\n            <FormControl>\n                <InputLabel id=\"edit-sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"edit-sort-order-label\"\n                  id=\"edit-sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-sort-case-label\"\n                  id=\"edit-sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"edit-sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n        </div>\n    );\n});\n\nexport default EditSort;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditReverse = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(props.tool.direction);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, direction: direction});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"edit-reverse-direction-label\"\n                  id=\"edit-reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditReverse;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditUnique = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [countPrefix, setCountPrefix] = useState(props.tool.countPrefix);\n    const [countDisabled, setCountDisabled] = useState(props.tool.variant === \"merge\" ? false : true);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n            props.close();\n        }\n    }));\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-unique-variant-label\"\n                  id=\"edit-unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-unique-case-label\"\n                  id=\"edit-unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\", flex: 1}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"edit-unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditUnique;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditLineNumbers = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(props.tool.startingNumber);\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-line-numbers-variant-label\"\n                  id=\"edit-line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"all\"}>All lines</MenuItem>\n                    <MenuItem value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"edit-line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditLineNumbers;","import React, { useRef } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, useMediaQuery, Tooltip, makeStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Done, Close, Edit } from \"@material-ui/icons\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport EditMatch from \"./Tools/EditMatch\";\nimport EditRegexMatch from \"./Tools/EditRegexMatch\";\nimport EditReplace from \"./Tools/EditReplace\";\nimport EditRegexReplace from \"./Tools/EditRegexReplace\";\nimport EditCompare from \"./Tools/EditCompare\";\nimport EditFilterColumns from \"./Tools/EditFilterColumns\";\nimport EditFilterLines from \"./Tools/EditFilterLines\";\nimport EditRegexFilterLines from \"./Tools/EditRegexFilterLines\";\nimport EditCutLines from \"./Tools/EditCutLines\";\nimport EditInsertColumn from \"./Tools/EditInsertColumn\";\nimport EditSwapColumns from \"./Tools/EditSwapColumns\";\nimport EditConvertCase from \"./Tools/EditConvertCase\";\nimport EditSort from \"./Tools/EditSort\";\nimport EditReverse from \"./Tools/EditReverse\";\nimport EditUnique from \"./Tools/EditUnique\";\nimport EditLineNumbers from \"./Tools/EditLineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        borderBottom: \"solid 1px grey\",\n        marginBottom: \"15px\",\n        paddingBottom: \"8px\",\n        color: \"#039be5\",\n    },\n    titleIcon: {\n        marginRight: \"15px\",\n        color: \"#039be5\",\n    },\n    dialogActions: {\n        paddingTop: \"0px\",\n    },\n    confirmIcon: {\n        color: \"#43a047\",\n    },\n    closeIcon: {\n        color: \"red\",\n    },\n}));\n\nfunction EditDialog(props) {\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const toolRef = useRef();\n\n    const mapToolname = (tool) => {\n        switch (tool.toolname) {\n            case \"match\": return \"Match\";\n            case \"regexMatch\": return \"Regex match\";\n            case \"replace\": return \"Replace\";\n            case \"regexReplace\": return \"Regex replace\";\n            case \"compare\": return \"Compare\";\n            case \"filterColumns\": return \"Filter columns\";\n            case \"filterLines\": return \"Filter lines\";\n            case \"regexFilterLines\": return \"Regex filter lines\";\n            case \"cutLines\": return \"Cut lines\";\n            case \"insertColumn\": return \"Insert column\";\n            case \"swapColumns\": return \"Swap columns\";\n            case \"convertCase\": return \"Convert case\";\n            case \"sort\": return \"Sort\";\n            case \"reverse\": return \"Reverse\";\n            case \"unique\": return \"Unique\";\n            case \"lineNumbers\": return \"Line numbers\";\n            default: return;\n        }\n    };\n\n    /**\n     * Vypis html kontextu podle zvoleneho nastroje\n    */\n    const mapToolContent = (tool) => {\n        switch (tool.toolname) {\n            case \"match\":\n                return (\n                    <EditMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexMatch\":\n                return (\n                    <EditRegexMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"replace\":\n                return (\n                    <EditReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexReplace\":\n                return (\n                    <EditRegexReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"compare\":\n                return (\n                    <EditCompare ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterColumns\":\n                return (\n                    <EditFilterColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterLines\":\n                return (\n                    <EditFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexFilterLines\":\n                return (\n                    <EditRegexFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"cutLines\":\n                return (\n                    <EditCutLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"insertColumn\":\n                return (\n                    <EditInsertColumn ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"swapColumns\":\n                return (\n                    <EditSwapColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"convertCase\":\n                return (\n                    <EditConvertCase ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"sort\":\n                return (\n                    <EditSort ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"reverse\":\n                return (\n                    <EditReverse ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"unique\":\n                return (\n                    <EditUnique ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"lineNumbers\":\n                return (\n                    <EditLineNumbers ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            default:\n                return;\n        }\n    };\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                <Edit className={classes.titleIcon} fontSize=\"large\" />\n                {mapToolname(props.tool)}\n            </DialogTitle>\n            <DialogContent>\n                {mapToolContent(props.tool)}\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <Tooltip className={classes.tooltip} title=\"Close\">\n                    <IconButton className={classes.closeIcon} onClick={() => props.close()}>\n                        <Close fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Confirm\">\n                    <IconButton className={classes.confirmIcon} onClick={() => toolRef.current.handleUpdate()}>\n                        <Done fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n            </DialogActions>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default EditDialog;","import React, { useState, useRef } from \"react\";\nimport { List, ListItem, makeStyles, IconButton, Menu, MenuItem, Tooltip, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Settings, Delete, Visibility, VisibilityOff, Edit, MoreVert } from \"@material-ui/icons\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport EditDialog from \"./Edits/EditDialog\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport { Resizable } from \"re-resizable\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        //width: \"95%\",\n        minWidth: \"95%\",\n        maxWidth: \"95%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        marginTop: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"rgb(50,50,50)\",\n        color: \"white\",\n        borderBottom: \"1px solid rgb(30, 30, 30)\",\n    },\n    fullWidth: {\n        width: \"100% !important\",\n        minWidth: \"100% !important\",\n        maxWidth: \"100% !important\",\n    },\n    title: {\n        height: \"22px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        fontSize: \"15px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    listItem: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n    },\n    itemDeactivated: {\n        color: \"grey !important\",\n    },\n    content: {\n        //height: \"208px\",\n        overflow: \"auto\",\n        flexGrow: \"1\",\n    },\n    toolName: {\n        color: \"#ff5d00\",\n        fontWeight: \"bold\",\n        marginRight: \"8px\",\n    },\n    toolText: {\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\",\n        height: \"100%\",\n        width: \"100%\",\n        cursor: \"grab\",\n    },\n    violetWord: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n    },\n    lightGreenWord: {\n        color: \"#a4ad00\",\n        fontWeight: \"bold\",\n    },\n    greenWord: {\n        color: \"#22ba09\",\n        fontWeight: \"bold\",\n    },\n    blueWord: {\n        color: \"#089dcf\",\n        fontWeight: \"bold\",\n    },\n    lightBlueWord: {\n        color: \"#0fbbff\",\n        fontWeight: \"bold\",\n    },\n    yellowWord: {\n        color: \"#ffcc00\",\n        fontWeight: \"bold\",\n    },\n    darkYellowWord: {\n        color: \"#ffb700\",\n        fontWeight: \"bold\",\n    },\n    redWord: {\n        color: \"#bd0032\",\n        fontWeight: \"bold\",\n    },\n    lightRedWord: {\n        color: \"#ff0a68\",\n        fontWeight: \"bold\",\n    },\n    greenBlueWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    turquoiseWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    lightTurquoiseWord: {\n        color: \"#14db78\",\n        fontWeight: \"bold\",\n    },\n    listIcon: {\n        marginRight: \"15px\",\n        color: \"#e0e0e0\",\n    },\n    marginLR: {\n        marginLeft: \"8px\",\n        marginRight: \"8px\",\n    },\n}));\n\nfunction mapComparator(comparator) {\n    switch (comparator) {\n        case \"gt\": return \"greater than\";\n        case \"ge\": return \"greater equal\";\n        case \"lt\": return \"less than\";\n        case \"le\": return \"less equal\";\n        case \"eq\": return \"equal\";\n        default: return \"\";\n    }\n};\n\nfunction mapCase(textCase) {\n    switch (textCase) {\n        case \"uppercase\": return \"upper case\";\n        case \"lowercase\": return \"lower case\";\n        default: return \"\";\n    }\n}\n\nfunction mapFilterLinesContent(content) {\n    switch (content) {\n        case \"empty\":\n            return \"empty content\";\n        case \"whiteChars\":\n            return \"white characters\";\n        case \"custom\":\n            return \"custom content\";\n        default:\n            return \"\";\n    }\n}\n\nfunction mapUniqueVariant(variant) {\n    switch (variant) {\n        case \"merge\":\n            return \"merge\";\n        case \"unique\":\n            return \"unique only\";\n        case \"duplicate\":\n            return \"duplicate only\";\n        default:\n            return \"\";\n    }\n}\n\nfunction isEditable(tool) {\n    const nonEditable = [\"trim\", \"removeExtraSpaces\"];\n    \n    return nonEditable.includes(tool.toolname) ? false : true;\n}\n\nconst ToolList = React.memo(({ tools, removeTool, reactiveTool, updateTool, sort }) => {\n    const classes = useStyles();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const theme = useTheme();   // useMediaQuery\n    const fullWidth = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const toolToEdit = useRef({});\n\n    const openEdit = (tool) => {\n        toolToEdit.current = tool;\n        setOpenEditDialog(true);\n    }\n\n    const mapTool = (tool) => {\n        switch (tool.toolname) {\n            case \"regexMatch\":\n            case \"match\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"match\" ?  \"Match\" :\"Regex match\"}</span> \n                        <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"regexReplace\":\n            case \"replace\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"replace\" ?  \"Replace\" : \"Regex replace\"}</span>\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.find}\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>with</span> \n                        {tool.replace}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"compare\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Compare</span>\n                        <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{mapComparator(tool.comparator)}</span>\n                        {tool.value}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"filterColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter columns</span>\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>\n                            {tool.variant + \" \"}\n                            at\n                        </span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"filterLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter lines</span>\n                        <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>with {tool.content === \"custom\" && (tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \")}{mapFilterLinesContent(tool.content)}</span>\n                        {tool.content === \"custom\" && <span className={`${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>\n                            {tool.customContent}\n                            {tool.column === \"\" ? \"\" : \n                                <React.Fragment>\n                                    <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                    {tool.column + \".\"}\n                                    <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                    {tool.delimiter}\n                                </React.Fragment>\n                            }\n                        </span>}\n                    </React.Fragment>\n                );\n            case \"regexFilterLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Regex filter lines</span> \n                        <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.casesensitive === true ? \"case sensitive\" : \"case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.column === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.column + \".\"}\n                                <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"cutLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Cut lines</span>\n                        {tool.count}\n                        <span className={`${classes.lightGreenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>{\n                            tool.variant === \"head\" ? \"from the beggining\" : \"from the end\"\n                        }</span>\n                    </React.Fragment>\n                );\n            case \"insertColumn\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Insert column</span>\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>starting with</span>\n                        {tool.content.split('\\n')[0] + \"...\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>at</span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"swapColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Swap columns</span>\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>at</span>\n                        {tool.first + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>and</span>\n                        {tool.second + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"convertCase\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Convert case</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>to</span>\n                        {mapCase(tool.textCase)}\n                    </React.Fragment>\n                );\n            case \"trim\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Trim</span>\n                    </React.Fragment>\n                );\n            case \"removeExtraSpaces\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Remove extra spaces</span>\n                    </React.Fragment>\n                );\n            case \"sort\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Sort</span>\n                        <span className={`${classes.lightBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.order}\n                            {tool.casesensitive === true ? \" case sensitive \" : \" case isensitive \"}\n                            {tool.ignoreLeadingBlanks === true ? \" ignoring leading blanks\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"reverse\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Reverse</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`}>{tool.direction}</span>\n                    </React.Fragment>\n                );\n            case \"unique\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Unique</span>\n                        <span className={`${classes.lightRedWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \"}\n                            {mapUniqueVariant(tool.variant)}\n                            {tool.variant === \"merge\" && tool.countPrefix === true ? \" with count prefix\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"lineNumbers\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Line numbers</span>\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.variant + \" starting with\"}</span>\n                        {tool.startingNumber}\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>after that</span>\n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            default:\n                return;\n        }\n    }\n\n    const DragHandle = SortableHandle(({tool}) => (\n        <div className={classes.toolText}>\n          {mapTool(tool)}\n        </div>\n    ));\n\n    const SortableItem = SortableElement(({ tool }) => (\n        <ListItem key={tool.id} ContainerComponent=\"li\" divider={true} className={`${classes.listItem} ${!(tool.active) && classes.itemDeactivated}`}>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {properties => (\n                    <React.Fragment>\n                        <Tooltip title=\"Properties\">\n                            <IconButton \n                                className={classes.listIcon} \n                                variant=\"contained\" \n                                size=\"small\" \n                                {...bindTrigger(properties)}\n                            >\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu {...bindMenu(properties)}>\n                            {isEditable(tool) &&\n                                <MenuItem onClick={() => openEdit(tool)}>\n                                    <Edit className={classes.listIcon} /> Edit\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={() => reactiveTool(tool)}>\n                                {tool.active ? \n                                    (<React.Fragment> <VisibilityOff className={classes.listIcon} /> Deactivate </React.Fragment>) : \n                                    (<React.Fragment> <Visibility className={classes.listIcon} /> Activate </React.Fragment>)}\n                            </MenuItem>\n                            <MenuItem onClick={() => removeTool(tool)}>\n                                <Delete className={classes.listIcon} /> Delete\n                            </MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n            <DragHandle tool={tool}/>\n        </ListItem>\n    ));\n\n    const SortableListContainer = SortableContainer(({ tools }) => (\n        <List component=\"ul\" className={classes.list}>\n                {tools.map((tool, index) => (\n                    <SortableItem key={tool.id} index={index} tool={tool} />\n                ))}\n        </List>\n    ));\n\n    return (\n        <Resizable \n            className={`${classes.root} ${fullWidth && classes.fullWidth}`}\n            defaultSize={{ width: \"95%\", height: \"250px\" }}\n            minHeight={100}\n            enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n        >\n            <div className={classes.title}>\n                <Settings style={{fontSize: \"22px\", paddingLeft: \"5px\"}}/>\n                <div className={classes.titleLabel}>Pipeline</div>\n                <div />\n            </div>\n            <div className={classes.content}>\n                <SortableListContainer\n                    tools={tools}\n                    lockAxis='y'\n                    useDragHandle={true}\n                    onSortEnd={sort}\n                    helperClass={\"SortableHelper\"}\n                />\n            </div>\n            {openEditDialog && \n                <EditDialog \n                    open={openEditDialog}\n                    close={() => setOpenEditDialog(false)}\n                    tool={toolToEdit.current}\n                    updateTool={updateTool}\n            />}\n        </Resizable>\n    );\n});\n\nexport default ToolList;","import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nconst variantIcon = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: blue[500],\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 25,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n  \nfunction CustomSnackbarContent(props) {\n    const classes = useStyles();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            message={\n                <span id=\"message-id\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                \n                    onClick={onClose}\n                >\n                    <Close />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n  \nCustomSnackbarContent.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nconst Alerts = React.memo(forwardRef(({ prop }, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n    const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n    const snackbarQueue = useRef([]);\n\n    useImperativeHandle(ref, () => ({\n        openSnackbar(variant, message) {\n            snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n        \n            if (showSnackbar) {\n                setShowSnackbar(false);\n            }\n            else {\n                processSnackbarQueue();\n            }\n          }\n    }));\n\n    const processSnackbarQueue = () => {\n        if (snackbarQueue.current.length > 0) {\n            setSnackbarInfo(snackbarQueue.current.shift());\n            setShowSnackbar(true);\n        }\n    };\n    \n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setShowSnackbar(false);\n    };\n    \n    const handleExited = () => {\n        processSnackbarQueue();\n    };\n\n    return (\n        <Snackbar\n            key={snackbarInfo ? snackbarInfo.key : undefined}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            open={showSnackbar}\n            autoHideDuration={2000}\n            onClose={closeSnackbar}\n            onExited={handleExited}\n            ContentProps={{ 'aria-describedby': 'message-id' }} \n        >\n            <CustomSnackbarContent\n                message={snackbarInfo ? snackbarInfo.message : undefined}\n                variant={snackbarInfo ? snackbarInfo.variant : undefined}\n                onClose={closeSnackbar}\n            />\n        </Snackbar>\n    );\n  }));\n\n  export default Alerts;","let lastID = 0;\n\nexport default function() {\n    lastID++;\n    return lastID;\n}","/**\n * https://medium.com/prolanceer/optimizing-react-app-performance-using-web-workers-79266afd4a7\n */\nexport default class WebWorker {\n    constructor (worker) {\n        const code = worker.toString();\n        const blob = new Blob(['('+code+')()']);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}","\nexport default () => {\n\n    // https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript\n    function regexEscape(regex) {\n        return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n      \n    /**\n     * Replace nastroj\n     */\n    function getMatchOptions(tool) {\n      if (tool.occurrence === \"all\") {\n          return tool.casesensitive === true ? \"g\" : \"gi\";\n      }\n      else {\n          return tool.casesensitive === true ? \"\" : \"i\";\n      }\n    }\n    \n    function replaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {\n                for (var i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else { \n                for (var z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function replaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    text[i].data = text[i].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (var x = 0; x < text.length; x++) {\n                    if (text[x].data === null) {\n                        continue;\n                    }\n\n                    if (text[x].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[x].data = text[x].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (var z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    function regexReplaceAll(lines, tool) {\n        var option = tool.casesensitive ? \"g\" : \"gi\";\n        var tmp = \"\";\n\n        for (let i = 0; i < lines.length; i++) {\n            tmp = lines[i].match(new RegExp(tool.find, option));\n\n            if (tmp === null) {\n                continue;\n            }\n\n            var specificMatch = true;\n            for (let j = 0; j < tmp.length; j++) {\n              if (tmp[j] === \"\" && tmp.length > 1) {\n                specificMatch = false;\n                break;\n              }\n            }\n\n            if (specificMatch === true) {\n                lines[i] = lines[i].replace(new RegExp(tool.find, option), tool.replace);\n                continue;\n            }\n            \n            var fullMatch = tmp[0].length === lines[i].length ? true : false;\n            if (fullMatch === true) {\n              lines[i] = tool.replace;\n            }\n            else {\n                lines[i] = lines[i].split(new RegExp(tool.find, option));\n                var firstChar = lines[i][0] === \"\" ? \"\" : tool.replace;\n                var lastChar = lines[i][lines[i].length - 1] === \"\" ? \"\" : tool.replace;\n                lines[i] = firstChar + lines[i].join(tool.replace) + lastChar;\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Regex replace nastroj\n     */\n    function regexReplaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var splitedText = text.split('\\n');\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                /*for (var y = 0; y < splitedText.length; y++) {  // TODO: otestovat na fullmatch\n                    splitedText[y] = splitedText[y].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return splitedText.join('\\n');*/\n                return regexReplaceAll(splitedText, tool).join('\\n');\n            }\n            else {                              // Pouze prvni vyskyt\n                for (let i = 0; i < splitedText.length; i++) {\n                    if (splitedText[i].match(new RegExp(tool.find, option)) !== null) {\n                        splitedText[i] = splitedText[i].replace(new RegExp(tool.find, option), tool.replace);\n                        return splitedText.join('\\n');\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                    \n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = regexReplaceAll([columns[tool.inColumn - 1]], tool);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else {                              // Prvni vyskyt\n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n                    \n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function regexReplaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = regexReplaceAll([text[i].data], tool)[0];\n                    //text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[i].data = text[i].data.replace(new RegExp(tool.find, option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n\n                    columns = text[j].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n\n                    columns = text[z].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Match nastroj\n     */\n    function matchTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            text = text.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option));\n            return text === null ? \"\" : text.join('\\n');\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n            var result = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            result += splitedText[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            return splitedText[z];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function matchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {        // Vsechny radky\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {  // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                    else {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                        else {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                            return text;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Regex match nastroj\n     */\n    function regexMatchTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var lines = text.split('\\n');\n        var result = \"\";\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else {\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n                \n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n              \n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function regexMatchInspectTool(text, tool) {    // TODO: osetreni na null\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    };\n\n    function filterColumnsTool(text, tool) {\n        text = text.split('\\n');\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return text.join('\\n');\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i] = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i] = \"\";\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    };\n\n    function filterColumnsInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i].data = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i].data = \"\";\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    };\n\n    /**\n     * Compare nastroj\n     */\n    function compareTool(text, tool) {\n        var lines = text.split('\\n');\n        var result = \"\";\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] > tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] > tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] >= tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] >= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] < tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] < tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < lines.length; i++) {\n                            if (lines[i] <= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < lines.length; i++) {\n                            columns = lines[i].split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (columns[tool.inColumn - 1] <= tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                    }\n                    return result.slice(0, -1);\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < lines.length; i++) {\n                                if (lines[i] === tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < lines.length; i++) {\n                                columns = lines[i].split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (columns[tool.inColumn - 1] === tool.value) {\n                                        result += lines[i] + '\\n';\n                                    }\n                                }\n                            }\n                        }\n                        return result.slice(0, -1);\n            default:\n                return text;\n        }\n    }\n\n    function compareInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data > tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] > tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data >= tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] >= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i] < tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] < tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            if (!(text[i].data <= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            columns = text[i].data.split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (!(columns[tool.inColumn - 1] <= tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                            else {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    return text;\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                if (!(text[i].data === tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                columns = text[i].data.split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (!(columns[tool.inColumn - 1] === tool.value)) {\n                                        text[i].data = null;\n                                    }\n                                }\n                                else {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * FilterLines nastroj\n     */\n    function filterLinesTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                text = text.replace(/\\n+/g, '\\n');\n                break;\n            case \"whiteChars\":\n                text = text.replace(/^\\s*[\\r\\n]/gm, '');\n                text = text.replace(/[\\r\\n]\\s*$/g, '');\n                break;\n            case \"custom\":\n                text = text.split('\\n');\n                var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n                if (tool.column === \"\") {   // Cele radky\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                else {      // Ve sloupci\n                    var column = \"\";\n                    for (let i = 0; i < text.length; i++) {\n                        column = text[i].split(tool.delimiter);\n                        if (column.length < tool.column) {\n                            continue;\n                        }\n                        if (column[tool.column - 1].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text;\n        }\n        if (text.charAt(0) === '\\n') {\n            text = text.slice(1)\n        }\n        if (text.charAt(text.length - 1) === '\\n') {\n            text = text.slice(0, -1);\n        }\n        return text;\n    }\n\n    function filterLinesInspectTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"whiteChars\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.trim() === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"custom\":\n                var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n                if (tool.column === \"\") {   // Cele radky\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {      // Ve sloupci\n                    var column = \"\";\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        column = text[i].data.split(tool.delimiter);\n                        if (column.length < tool.column) {\n                            continue;\n                        }\n                        if (column[tool.column - 1].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Regex filter lines nastroj\n     */\n    function regexFilterLinesTool(text, tool) {\n        text = text.split('\\n');\n        var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n        if (tool.column === \"\") {   // Cele radky\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].match(new RegExp(tool.expression, option)) !== null) {\n                    text.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        else {      // Ve sloupci\n            var column = \"\";\n            for (let i = 0; i < text.length; i++) {\n                column = text[i].split(tool.delimiter);\n                if (column.length < tool.column) {\n                    column = column.concat(Array(tool.column - column.length).fill(\"\"));\n                }\n                if (column[tool.column - 1].match(new RegExp(tool.expression, option)) !== null) {\n                    text.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        return text.join('\\n');\n    }\n\n    function regexFilterLinesInspectTool(text, tool) {\n        var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n        if (tool.column === \"\") {   // Cele radky\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].data === null) {\n                    continue;\n                }\n                if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                    text[i].data = null;\n                }\n            }\n        }\n        else {      // Ve sloupci\n            var column = \"\";\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].data === null) {\n                    continue;\n                }\n                column = text[i].data.split(tool.delimiter);\n                if (column.length < tool.column) {\n                    column = column.concat(Array(tool.column - column.length).fill(\"\"));\n                }\n                if (column[tool.column - 1].match(new RegExp(tool.expression, option)) !== null) {\n                    text[i].data = null;\n                }\n            }\n        }\n        return text;\n    }\n\n    /**\n     * Cut lines nastroj\n     */\n    function cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Insert column nastroj\n     */\n    function insertColumnTool(text, tool) {\n        text = text.split('\\n');\n        const givenColumn = tool.content.split('\\n');\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            columns = text[lineNumber].split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = columns.join(tool.delimiter);\n            lineNumber++;\n        }\n        while(lineNumber < givenColumn.length) {\n            text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = text[lineNumber].join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber] += tool.delimiter;\n            }\n            lineNumber++;\n        }\n        return text.join('\\n');\n    }\n\n    function insertColumnInspectTool(text, tool) {\n        const givenColumn = tool.content.split('\\n');\n        var givenColumnLine = 0;\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            if (text[lineNumber].data === null) {\n                lineNumber++;\n                continue;\n            }\n            columns = text[lineNumber].data.split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = columns.join(tool.delimiter);\n            givenColumnLine++;\n            lineNumber++;\n        }\n        while(givenColumnLine < givenColumn.length) {\n            text.push({number: lineNumber + 1, data: Array(tool.position - 1).fill(\"\")});\n            //text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].data.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = text[lineNumber].data.join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber].data += tool.delimiter;\n            }\n            givenColumnLine++;\n            lineNumber++;\n        }\n        return text;\n    }\n\n    /**\n     * Swap columns nastroj\n     */\n    function swapColumnsTool(text, tool) {\n        text = text.split('\\n');\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            column = text[i].split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i] = column.join(tool.delimiter);\n        }\n        return text.join('\\n');\n    }\n\n    function swapColumnsInspectTool(text, tool) {\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            column = text[i].data.split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i].data = column.join(tool.delimiter);\n        }\n        return text;\n    }\n\n    /**\n     * Convert case nastroj\n     */\n    function convertCaseTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                return text.toUpperCase();\n            case \"lowercase\":\n                return text.toLowerCase();\n            default:\n                return text;\n        }\n    }\n\n    function convertCaseInspectTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toUpperCase();\n                }\n                return text;\n            case \"lowercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toLowerCase();\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Trim nastroj\n     */\n    function trimTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].trim();\n        }\n\n        return lines.join('\\n');\n    }\n\n    function trimInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.trim();\n        }\n        return text;\n    }\n\n    /**\n     * Remove extra spaces nastroj\n     */\n    function removeExtraSpacesTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].replace(/\\s+/g, ' ');\n        }\n\n        return lines.join('\\n');\n    }\n\n    function removeExtraSpacesInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.replace(/\\s+/g, ' ');\n        }\n        return text;\n    }\n\n    /**\n     * Sort nastroj\n     * TODO: Mozna optimalizace porovnavaci funkce\n     */\n    function sortTool(text, tool) {\n        const compare = (a, b) => {\n            if (tool.casesensitive === false) {\n                a = a.toUpperCase();\n                b = b.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a = a.trim();\n                b = b.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a < b) {\n                    return -1;\n                }\n                if (a > b) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a > b) {\n                    return -1;\n                }\n                if (a < b) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n\n        text = text.split('\\n');\n        text.sort(compare);\n        return text.join('\\n');\n    }\n\n    function sortInspectTool(text, tool) {\n        const compareData = (a, b) => {\n            if (a.data === null) {\n                return 1;\n            }\n            if (b.data === null) {\n                return -1;\n            }\n            if (tool.casesensitive === false) {\n                a.data = a.data.toUpperCase();\n                b.data = b.data.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a.data = a.data.trim();\n                b.data = b.data.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a.data < b.data) {\n                    return -1;\n                }\n                if (a.data > b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a.data > b.data) {\n                    return -1;\n                }\n                if (a.data < b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n        text =text.sort(compareData);\n        return text;\n    }\n\n    /**\n     * Reverse nastroj\n     */\n    function reverseTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = text[i].split('');\n                    text[i] = text[i].reverse();\n                    text[i] = text[i].join('');\n                }\n                return text.join('\\n');\n            case \"vertical\":\n                text = text.reverse();\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function reverseInspectTool(text, tool) {\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.split('');\n                    text[i].data = text[i].data.reverse();\n                    text[i].data = text[i].data.join('');\n                }\n                return text;\n            case \"vertical\":\n                text = text.reverse();\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Unique nastroj\n     */\n    function uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n        for (let i = index + 1; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function findPrevLine(text, index) {\n        for (let i = index - 1; i >= 0; i--) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                            return text;\n                        }   \n                        if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                            text[i].data = null;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        text[nextLine.index].data = null;\n\n                        while ((nextLine = findNextLine(text, i)) !== null) {\n                            if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                                text[nextLine.index].data = null;\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        text[i].data = null;\n                        continue;\n                    }\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        for (var lastIndex = nextLine.index; (nextLine = findNextLine(text, nextLine.index)) !== null; lastIndex = nextLine.index) {\n                            if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                                i = nextLine.index - 1;\n                                break;\n                            }\n                        }\n                        i = lastIndex;\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Line numbers nastroj\n     */\n    function lineNumbersTool(text, tool) {\n        text = text.split('\\n');\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === \"\") {\n                        continue;\n                    }\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function lineNumbersInspectTool(text, tool) {\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null || text[i].data === \"\") {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Ridici funkce\n     */\n    function processTool(text, tool) {\n        var result = \"\";\n\n        switch (tool.toolname) {\n            case \"match\":\n                result = matchTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchTool(text, tool);\n                break;\n        \tcase \"replace\":\n        \t\tresult = replaceTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesTool(text, tool);\n                break;\n            case \"regexFilterLines\":\n                result = regexFilterLinesTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesTool(text);\n                break;\n            case \"sort\":\n                result = sortTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersTool(text, tool);\n                break;\n        \tdefault:\n        \t\tbreak;\n        } \n        return result;\n    };\n\n    function processInspectTool(text, tool) {\n        var result = \"\";\n      \n        switch (tool.toolname) {\n            case \"match\":\n                result = matchInspectTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchInspectTool(text, tool);\n                break;\n            case \"replace\":\n                result = replaceInspectTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceInspectTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareInspectTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsInspectTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesInspectTool(text, tool);\n                break;\n            case \"regexFilterLines\":\n                result = regexFilterLinesInspectTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesInspectTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnInspectTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsInspectTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseInspectTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimInspectTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesInspectTool(text);\n                break;\n            case \"sort\":\n                result = sortInspectTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseInspectTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueInspectTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersInspectTool(text, tool);\n                break;\n            default:\n                break;\n        }\n        return result;\n    };\n\n    self.addEventListener('message', event => { // eslint-disable-line no-restricted-globals\n        //var processData = event.data.inspectMode === true ? event.data.text.split('\\n') : event.data.text;\n        var processData = \"\";\n\n        if (event.data.inspectMode === false) {\n            processData = event.data.text;\n        }\n        else {\n            let lines = event.data.text.split('\\n');\n            processData = Array(lines.length);\n\n            for (let index = 0; index < processData.length; index++) {\n                processData[index] = {number: index + 1, data: lines[index]};\n            }\n        }\n\n        const pipeline = event.data.pipeline;\n        const unit = Math.ceil(100 / pipeline.length);\n\n        if (pipeline.length > 0) {\n            postMessage({type: \"progress\", data: 0});\n        }\n        \n        for (var i = 0; i < pipeline.length; i++) {\n        \tif (pipeline[i].active === true) {\n                if (event.data.inspectMode === false) {\n                    processData = processTool(processData, pipeline[i]);\n                }\n                else {\n                    processData = processInspectTool(processData, pipeline[i]);\n                }\n            }\n\n            postMessage({type: \"progress\", data: (i + 1) === pipeline.length ? 100 : (i + 1) * unit});\n        }\n\n        if (event.data.inspectMode === true) {\n            let lines = [];\n            let tempData = [];\n            console.log(processData);\n\n            for (var breakpoint in event.data.breakpoints) {\n                lines.push(parseInt(breakpoint) + 1);\n            }\n\n            for (let index = 0; index < processData.length; index++) {\n                if (lines.includes(processData[index].number) && processData[index].data !== null) {\n                    tempData.push(processData[index].data);\n                }\n            }\n\n            processData = tempData.join('\\n');\n        }\n        /*if (event.data.inspectMode === true) {\n            var temp = [];\n            console.log(processData);\n            for (var breakpoint in event.data.breakpoints) {\n                if (processData[breakpoint] !== null) {\n                    temp.push(processData[breakpoint]);\n                }\n            }\n            processData = temp.join('\\n');\n        }*/\n\n        postMessage({type: \"result\", data: processData});\n    });\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport ToolList from './components/ToolList';\nimport Alerts from './components/Alerts';\nimport arrayMove from 'array-move';\nimport newID from './scripts/generatorID';\nimport WebWorker from './scripts/WebWorker';\nimport pipeWorker from './scripts/pipeWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\n//-------------------------------DEBUG------------------------------------\n/*\nfunction cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\nfunction uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n      for (let i = index + 1; i < text.length; i++) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function findPrevLine(text, index) {\n      for (let i = index - 1; i >= 0; i--) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                  for (let i = text.length - 1; i >= 0; i--) {\n                      if (text[i].data === null) {\n                          continue;\n                      }\n                      prevLine = findPrevLine(text, i);\n                      if (prevLine === null) {\n                        return text;\n                      }\n\n                      if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                          text[i].data = null;\n                      }\n                      i = prevLine.index + 1;  \n                  }\n                  return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                      continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                      return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                      text[nextLine.index].data = null;\n\n                      while ((nextLine = findNextLine(text, i)) !== null) {\n                        if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                          text[nextLine.index].data = null;\n                        }\n                        else {\n                          break;\n                        }\n                      }\n                      text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                  if (text[i].data === null) {\n                    continue;\n                  }\n                  nextLine = findNextLine(text, i);\n                  if (nextLine === null) {\n                    text[i].data = null;\n                    continue;\n                  }\n                  if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                    for (var j = i; (nextLine = findNextLine(text, nextLine.index)) !== null; j++) {\n                      if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                        i = nextLine.index - 1;\n                        break;\n                      }\n                    }\n                    i = j + 1;\n                  }\n                  else {\n                    text[i].data = null;\n                  }\n              }\n              return text;\n            default:\n                return text;\n            }\n        }\n\nfunction processTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction processInspectTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueInspectTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesInspectTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction proc(data) { // eslint-disable-line no-restricted-globals\n  const pipeline = data.pipeline;\n  var processData = \"\";\n\n  if (data.inspectMode === false) {\n    processData = data.text;\n  }\n  else {\n      let lines = data.text.split('\\n');\n      processData = Array(lines.length);\n\n      for (let index = 0; index < processData.length; index++) {\n          processData[index] = {number: index + 1, data: lines[index]};\n      }\n  }\n  \n  for (var i = 0; i < pipeline.length; i++) {\n    if (pipeline[i].active === false)\n      continue;\n\n      if (data.inspectMode === false) {\n        processData = processTool(processData, pipeline[i]);\n      }\n      else {\n        processData = processInspectTool(processData, pipeline[i]);\n      }\n  }\n\n  if (data.inspectMode === true) {\n    let lines = [];\n    let tempData = [];\n\n    for (var breakpoint in data.breakpoints) {\n        lines.push(parseInt(breakpoint) + 1);\n    }\n\n    for (let index = 0; index < processData.length; index++) {\n        if (lines.includes(processData[index].number) && processData[index].data !== null) {\n            tempData.push(processData[index].data);\n        }\n    }\n\n    processData = tempData.join('\\n');\n}\n\n  return processData;\n};\n*/\n//------------------------------------------------------------------------\n\n/**\n * Funkce zkontroluje pole, zda nejsou nastavene breakpointy.\n * Kdyby byla velmi pomala, vytvorit workera.\n */\nfunction emptyBreakpoints(breakpoints) {\n  for (var i in breakpoints) {\n      if (typeof breakpoints[i] !== typeof undefined) {\n          return false;\n      }\n  }\n  return true;\n};\n\nfunction App() {\n  const alertRef = useRef();\n  const [pipeline, setPipeline] = useState([]);\n\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [editorResult, setEditorResult] = useState(\"\");\n  const [inspectMode, setInspectMode] = useState({enabled: false, breakpoints: []});\n  const [pipeProgress, setPipeProgress] = useState(100);\n  //const [inspectMode, setInspectMode] = useState(false);\n\n  const addTool = useCallback((tool) => {\n    tool.id = newID();\n    tool.active = true;\n    setPipeline(c => [...c, tool]);\n  }, [setPipeline]);\n\n  const removeTool = useCallback((tool) => {\n    setPipeline(c => c.filter(each => each.id !== tool.id));\n  }, [setPipeline]);\n\n  const updateTool = useCallback((tool) => {  // TODO: opravit jen na set\n    const tmp = [...pipeline];\n\n    for (var i in tmp) {\n      if (tmp[i].id === tool.id) {\n        tmp[i] = tool;\n        break;\n      }\n    }\n    setPipeline(tmp);\n  }, [pipeline, setPipeline]);\n\n  const reactiveTool = useCallback((tool) => {\n    setPipeline(state => state.map(each => {\n      if (each.id === tool.id) {\n        return {...each, active: !each.active}\n      }\n      else return each}));\n  }, [setPipeline]);\n\n  const onSortPipeline = useCallback(({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      setPipeline(pipeline => arrayMove(pipeline, oldIndex, newIndex));\n    }\n    console.log(pipeline);\n  }, [pipeline, setPipeline]);\n\n  const editText = useCallback((newValue) => {\n    setEditorContent(newValue);\n  }, [setEditorContent]);\n\n  const toggleInspectMode = useCallback(() => {\n    setInspectMode(state => ({ ...state, enabled: !state.enabled}));\n  }, [setInspectMode]);\n\n  const toggleBreakpoint = useCallback((breakpoints) => {\n    setInspectMode(state => ({ ...state, enabled: !emptyBreakpoints(breakpoints), breakpoints: breakpoints}));\n  }, [setInspectMode]);\n\n  const setPipelineActivity = useCallback((value) => {\n    setPipeline(state => state.map(tool => {return {...tool, active: value}}));\n  }, [setPipeline]);\n\n  const clearPipeline = useCallback(() => {\n    setPipeline([]);\n  }, [setPipeline]);\n\n  // Do dokumentace napsat proc neni async/await ale useEffect\n  // Popsat WebWorkers\n  useEffect(() => {\n    //---------------DEBUG---------------------\n    /*\n    setEditorResult(proc({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    }));\n    */\n    //-----------------------------------------\n    const worker = new WebWorker(pipeWorker);\n\n    worker.postMessage({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    });\n\n    worker.onmessage = (event) => {\n      if (event.data.type === \"progress\")\n        setPipeProgress(event.data.data);\n      else\n        setEditorResult(event.data.data);\n    };\n\n    return () => {  // Cleanup\n      worker.terminate();\n    };\n  }, [editorContent, pipeline, inspectMode, setEditorResult]);\n  \n  const showAlert = useCallback((variant, message) => {\n    alertRef.current.openSnackbar(variant, message);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <TopPanel />\n        <SplitEditor \n          editorContent={editorContent} \n          editText={editText} \n          editorResult={editorResult}\n          showAlert={showAlert} \n          toggleBreakpoint={toggleBreakpoint}\n          inspectMode={inspectMode.enabled}\n          toggleInspectMode={toggleInspectMode}\n          pipeProgress={pipeProgress}\n          pipeline={pipeline}\n          setPipelineActivity={setPipelineActivity}\n          clearPipeline={clearPipeline}\n        />\n        <ToolList \n          tools={pipeline}\n          removeTool={removeTool}\n          reactiveTool={reactiveTool}\n          updateTool={updateTool}\n          sort={onSortPipeline}\n        />\n        <ToolTabs showAlert={showAlert} addTool={addTool}/>\n        <Alerts ref={alertRef} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}