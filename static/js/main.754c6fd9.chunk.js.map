{"version":3,"sources":["components/TopPanel.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/SplitEditor.jsx","components/Tabs/RowTab.jsx","components/Tabs/ReplaceTab.jsx","components/ToolTabs.jsx","components/ToolList.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","grey","light","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","flex","link","textDecoration","DenseAppBar","classes","React","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","fontSize","itemIcon","ListItemText","Videocam","GitHub","CardMembership","EditorIn","state","onChange","bind","resize","onSelectionChange","this","refs","aceIn","editor","newValue","console","log","content","getSelectedText","ref","mode","name","height","width","placeholder","showPrintMargin","hScrollBarAlwaysVisible","editorProps","$blockScrolling","Component","EditorOut","aceOut","readOnly","SplitEditor","handleResize","split","style","minSize","maxSize","defaultSize","instance","lightBlue","secondary","green","RowTab","matchPattern","matchError","handleMatch","setState","displaySnackbar","addTool","tool","pattern","Grid","container","item","xs","Paper","toolName","flexContent","TextField","label","value","target","error","helperText","textField","Button","button","startIcon","Add","margin","padding","borderRadius","display","alignItems","fontWeight","marginRight","ReplaceTab","replaceFind","setReplaceFind","replaceError","setReplaceFindError","replaceReplace","setReplaceReplace","replaceReplaceError","setReplaceReplaceError","onReplaceFindChange","onReplaceReplaceChange","find","replace","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","marginTop","marginBottom","background","ToolTabs","setValue","Tabs","indicatorColor","textColor","centered","Tab","icon","YoutubeSearchedFor","FindReplace","Reorder","ViewColumn","Transform","title","textTransform","textAlign","letterSpacing","boxShadow","titleLabel","list","overflow","conword","ToolList","Build","List","tools","map","ListItem","key","size","removeTool","Delete","mapTool","variantIcon","success","CheckCircle","warning","Warning","Error","info","Info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Close","App","showSnackbar","setShowSnackbar","undefined","snackbarInfo","setSnackbarInfo","snackbarQueue","useRef","pipeline","setPipeline","useEffect","i","length","processSnackbarQueue","current","shift","closeSnackbar","reason","filter","each","push","Date","getTime","Snackbar","autoHideDuration","onExited","ContentProps","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.754c6fd9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam, CardMembership } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n}))(MenuItem);\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: grey[900],\n        light: grey[200],\n        dark: grey[900],\n      },\n      type: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appName: {\n      marginLeft: theme.spacing(10),\n      flex: 1,\n  },\n  link: {\n      textDecoration: 'none',\n      color: 'inherit',\n  },\n}));\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography className={classes.appName} variant=\"h6\" color=\"inherit\">\n                React App\n              </Typography>\n              <IconButton edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n                <MenuIcon />\n              </IconButton>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Description fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Documentation\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Videocam fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Video\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <GitHub fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"GitHub\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <CardMembership fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Credits\" />\n                        </StyledMenuItem>\n                    </a>\n                </StyledMenu>\n            </Toolbar>\n          </AppBar>\n        </div>\n    </MuiThemeProvider>\n  );\n}","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nclass EditorIn extends Component {\n  state = {  }\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.resize = this.resize.bind(this);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n\n  resize() {\n    this.refs.aceIn.editor.resize();\n  }\n\n  onChange(newValue) {\n    console.log(\"change\", newValue);\n  }\n  \n  onSelectionChange(newValue, event) {\n    const content = this.refs.aceIn.editor.getSelectedText();\n    console.log(content);\n  }\n\n//<button onClick={()=> {this.refs.aceIn.editor.undo()}}>Undo</button>\n  render() { \n    return ( \n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        onChange={this.onChange}\n        onSelectionChange={this.onSelectionChange}\n        ref=\"aceIn\"\n        mode=\"plain_text\"\n        name=\"EditorIn\"\n        height=\"100%\"\n        width=\"100%\"\n        placeholder=\"Insert your input here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  }\n}\n \nexport default EditorIn;","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n \nfunction onChange(newValue) {\n  console.log(\"change\", newValue);\n}\n\n//<button onClick={()=> {this.refs.AceOut.editor.find(\"a\")}}>Undo</button>\nclass EditorOut extends Component {\n  state = {  }\n  \n  constructor(props) {\n    super(props);\n    this.resize = this.resize.bind(this);\n  }\n\n  resize() {\n    this.refs.aceOut.editor.resize();\n  }\n\n  render() { \n    return (\n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        ref=\"aceOut\"\n        onChange={onChange}\n        name=\"EditorOut\"\n        height=\"100%\"\n        width=\"100%\"\n        mode=\"plain_text\"\n        readOnly={true}\n        placeholder=\"Your output will be here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  }\n}\n \nexport default EditorOut;","import React, { Component } from 'react';\nimport SplitPane from 'react-split-pane';\nimport EditorIn from './EditorIn'\nimport EditorOut from './EditorOut'\nimport './SplitEditor.css';\n\nclass SplitEditor extends Component {\n    state = {  }\n\n    constructor(props) {\n        super(props);\n        this.handleResize = this.handleResize.bind(this);\n    }\n\n    handleResize(){\n        this.aceIn.resize();\n        this.aceOut.resize();\n    }\n\n    render() { \n        return ( \n            <SplitPane className=\"SplitEditor\" split=\"vertical\" style={{height: \"700px\", position: \"static\"}} minSize={200} maxSize={-200} defaultSize={\"50%\"} onChange={ () => this.handleResize() }>\n                <EditorIn ref={ instance => { this.aceIn = instance; }}/>\n                <EditorOut ref={ instance => { this.aceOut = instance; }}/>\n            </SplitPane>\n         );\n    }\n}\n \nexport default SplitEditor;","import React, { Component } from 'react';\nimport { Paper, Grid, Button, withStyles, Typography, TextField, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { green, lightBlue } from '@material-ui/core/colors';\nimport { Add } from '@material-ui/icons';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: 'dark',\n    },\n  });\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    paper: {\n        padding: \"10px\",\n        backgroundColor: '#333333',\n        borderRadius: '0px',\n    },\n    textField: {\n        flex: 1,\n    },\n    flexContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    toolName: {\n        color: '#d9d9d9',\n        fontWeight: 'bold',\n    },\n  })\n\nclass RowTab extends Component {\n  state = { \n    matchPattern: \"\",\n    matchError: false,\n  }\n  \n  handleMatch(){\n    if (this.state.matchPattern === \"\"){\n      this.setState({ matchError: true});\n      this.props.displaySnackbar(\"error\", \"Error: Match pattern is empty!\");\n    }\n    else {\n      this.setState({ matchError: false});\n      this.props.addTool({tool: \"Match\", pattern: this.state.matchPattern});\n      this.props.displaySnackbar(\"success\", \"Success: Match added into the pipeline.\");\n      this.setState({matchPattern: \"\"});\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleMatch = this.handleMatch.bind(this);\n  }\n\n  render() { \n    const { classes } = this.props;\n\n    return ( \n      <MuiThemeProvider theme={theme}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Match</Typography>\n                    <div className={classes.flexContent}>\n                    <TextField\n                      id=\"match-pattern\"\n                      label=\"Pattern\"\n                      value={this.state.matchPattern}\n                      onChange={event => this.setState({ matchPattern: event.target.value, matchError: false })}\n                      error={this.state.matchError === true}\n                      helperText={this.state.matchError === true ? 'Pattern cannot be empty!' : ' '}\n                      className={classes.textField}\n                    />\n                    <Button\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      className={classes.button}\n                      onClick={() => this.handleMatch()}\n                      startIcon={<Add />}\n                    >Add</Button>\n                    </div>\n                  </Paper>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n     );\n  }\n}\n/*\nRowTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n}*/\n\nexport default withStyles(styles)(RowTab);","import React, { useState } from 'react';\nimport { Paper, Grid, Button, makeStyles, Typography, TextField, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { green, lightBlue } from '@material-ui/core/colors';\nimport { Add } from '@material-ui/icons';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: 'dark',\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    paper: {\n        padding: \"10px\",\n        backgroundColor: '#333333',\n        borderRadius: '0px',\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    toolName: {\n        color: '#d9d9d9',\n        fontWeight: 'bold',\n    },\n}));\n\nexport default function ReplaceTab(props){\n    const classes = useStyles();\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceError, setReplaceFindError] = useState(false);\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n\n    const onReplaceFindChange = (event) => {\n        setReplaceFind(event.target.value);\n        setReplaceFindError(false);\n    }\n\n    const onReplaceReplaceChange = (event) => {\n        setReplaceReplace(event.target.value);\n        setReplaceReplaceError(false);\n    }\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n        if (replaceReplace === \"\"){\n            setReplaceReplaceError(true);\n        }\n        if (replaceFind !== \"\" && replaceReplace !== \"\") {\n            setReplaceFindError(false);\n            setReplaceReplaceError(false);\n            props.addTool({tool: \"Replace\", find: replaceFind, replace: replaceReplace});\n            props.displaySnackbar(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n        }\n        else {\n            props.displaySnackbar(\"error\", \"Error: Fields cannot be empty!\");\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Replace</Typography>\n                    <div className={classes.flexContent}>\n                    <TextField\n                        id=\"replace-find\"\n                        label=\"Find\"\n                        value={replaceFind}\n                        onChange={event => onReplaceFindChange(event)}\n                        className={classes.textField}\n                        error={replaceError === true}\n                        helperText={replaceError === true ? 'Field cannot be empty!' : ''}\n                    />\n                    <TextField\n                        id=\"replace-replace\"\n                        label=\"Replace\"\n                        value={replaceReplace}\n                        onChange={event => onReplaceReplaceChange(event)}\n                        className={classes.textField}\n                        error={replaceReplaceError === true}\n                        helperText={replaceReplaceError === true ? 'Field cannot be empty!' : ''}\n                    />\n                    <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        className={classes.button}\n                        onClick={() => handleReplace()}\n                        startIcon={<Add />}\n                    >Add</Button>\n                    </div>\n                  </Paper>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { lightBlue } from '@material-ui/core/colors';\nimport { Reorder, ViewColumn, FindReplace, YoutubeSearchedFor, Transform } from '@material-ui/icons';\nimport RowTab from './Tabs/RowTab';\nimport ReplaceTab from './Tabs/ReplaceTab';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: lightBlue[600],\n      light: lightBlue[300],\n      dark: lightBlue[900],\n    },\n    type: 'dark',\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px',\n    marginBottom: '20px',\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: theme.palette.background.paper,\n    color: 'white',\n  },\n  /*toolTitle: {\n    marginLeft: '10px',\n    color: 'orange',\n    position: 'relative',\n    bottom: '15px',\n    paddingLeft: '5px',\n    paddingRight: '5px',\n    paddingBottom: '2px',\n    backgroundColor: theme.palette.background.paper,\n  },*/\n\n}));\n\nexport default function ToolTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"tabs\"\n            centered\n          >\n            <Tab icon={<YoutubeSearchedFor />} label=\"Reverse\" {...a11yProps(0)} />\n            <Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n            <Tab icon={<Reorder />} label=\"Rows\" {...a11yProps(2)} />\n            <Tab icon={<ViewColumn />} label=\"Columns\" {...a11yProps(3)} />\n            <Tab icon={<Transform />} label=\"Convert\" {...a11yProps(4)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel theme={theme} value={value} index={0}>\n          TBD\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ReplaceTab displaySnackbar={props.displaySnackbar} addTool={props.addTool}/>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <RowTab displaySnackbar={props.displaySnackbar} addTool={props.addTool}/>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          TBD\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          TBD\n        </TabPanel>\n      </div>\n    </MuiThemeProvider>\n  );\n}","import React from \"react\";\nimport { List, ListItem, makeStyles, IconButton } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Build, Delete } from \"@material-ui/icons\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        width: \"95%\",\n        marginTop: \"20px\",\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: theme.palette.background.paper,\n        color: \"white\",\n    },\n    title: {\n        height: \"48px\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        marginTop: \"5px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    content: {\n        height: \"182px\",\n        overflow: \"auto\",\n\n    },\n    toolName: {\n        color: \"#ff6a1a\",\n        fontWeight: \"bold\",\n        marginRight: \"10px\",\n    },\n    conword: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n        marginRight: \"10px\",\n        marginLeft: \"10px\",\n    },\n}));\n\nfunction ToolList(props) {\n    const classes = useStyles();\n\n    const mapTool = (tool) => {\n        switch (tool.tool) {\n            case \"Match\":\n                return (\n                    <ListItem button key={tool.id}>\n                        <IconButton size=\"small\" onClick={() => props.removeTool(tool)}>\n                            <Delete />\n                        </IconButton>\n                            <span className={classes.toolName}>{tool.tool}</span> \n                            {tool.pattern}\n                    </ListItem>\n                );\n            case \"Replace\":\n                return (\n                    <ListItem button key={tool.id}>\n                        <IconButton size=\"small\" onClick={() => props.removeTool(tool)}>\n                            <Delete />\n                        </IconButton>\n                            <span className={classes.toolName}>{tool.tool}</span> \n                            {tool.find}\n                            <span className={classes.conword}>with</span> \n                            {tool.replace}\n                    </ListItem>\n                );\n            default:\n                return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Build />\n                <div className={classes.titleLabel}>Pipeline</div>\n            </div>\n            <div className={classes.content}>\n            <List component=\"ul\" className={classes.list}>\n                {props.tools.map((tool) =>\n                    mapTool(tool)\n                )}\n            </List>\n            </div>\n        </div>\n    );\n}\n\nexport default ToolList;","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme, makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport { grey, green, amber, blue } from '@material-ui/core/colors';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport ToolList from './components/ToolList';\n\n/*const pipeline = [];\n\nfunction addTool(tool) {\n  tool.id = pipeline.length + 1;\n  pipeline.push(tool);\n};\n\nfunction removeTool(tool){\n  pipeline.splice(pipeline.indexOf(tool), 1);\n  console.log(pipeline);\n}\n\n/*addTool.propTypes = {\n  tool: PropTypes.shape({\n    tool: PropTypes.string.isRequired,\n  })\n}*/\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\nconst variantIcon = {\n  success: CheckCircle,\n  warning: Warning,\n  error: Error,\n  info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: blue[500],\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 25,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction CustomSnackbarContent(props) {\n  const classes = useStyles();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      message={\n        <span id=\"message-id\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n   \n          onClick={onClose}\n        >\n          <Close />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nCustomSnackbarContent.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nfunction App() {\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n  const snackbarQueue = useRef([]);\n  const [pipeline, setPipeline] = useState([]);\n\n  const addTool = (tool) => {\n    tool.id = pipeline.length + 1;\n    setPipeline([...pipeline, tool]);\n    //pipeline.push(tool);\n  };\n\n  const removeTool = (tool) => {\n    setPipeline(pipeline.filter(each => each.id !== tool.id));\n    //pipeline.splice(pipeline.indexOf(tool), 1);\n  }\n\n  // Do dokumentace napsat proc neni async/await ale useEffect\n  useEffect(() => {\n    for (var i = 0; i < pipeline.length; i++){\n      if (pipeline[i].id !== (i + 1))\n        pipeline[i].id = (i + 1);\n    }\n    console.log(pipeline);\n  });\n\n  const processSnackbarQueue = () => {\n    if (snackbarQueue.current.length > 0) {\n      setSnackbarInfo(snackbarQueue.current.shift());\n      setShowSnackbar(true);\n    }\n  };\n\n  const openSnackbar = (variant, message) => {\n    snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n\n    if (showSnackbar) {\n      setShowSnackbar(false);\n    }\n    else {\n      processSnackbarQueue();\n    }\n  };\n\n  const closeSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setShowSnackbar(false);\n  };\n\n  const handleExited = () => {\n    processSnackbarQueue();\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n    <div className=\"App\">\n      <TopPanel />\n      <SplitEditor />\n      <ToolList tools={pipeline} removeTool={removeTool}/>\n      <ToolTabs displaySnackbar={openSnackbar} addTool={addTool}/>\n      <Snackbar\n        key={snackbarInfo ? snackbarInfo.key : undefined}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={showSnackbar}\n        autoHideDuration={2000}\n        onClose={closeSnackbar}\n        onExited={handleExited}\n        ContentProps={{ 'aria-describedby': 'message-id' }} \n      >\n        <CustomSnackbarContent\n          message={snackbarInfo ? snackbarInfo.message : undefined}\n          variant={snackbarInfo ? snackbarInfo.variant : undefined}\n          onClose={closeSnackbar}\n        />\n      </Snackbar>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}