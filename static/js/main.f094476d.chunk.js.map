{"version":3,"sources":["components/TopPanel.jsx","scripts/shellGenerator.js","components/ShellDialog.jsx","components/EditorToolbar.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/EditorBottomPanel.jsx","components/SplitEditor.jsx","components/Tabs/TabStyles.js","components/Tabs/ToolHeader.jsx","components/Tabs/Tools/Match.jsx","components/Tabs/Tools/RegexMatch.jsx","components/Tabs/Tools/Compare.jsx","components/Tabs/FindTab.jsx","components/Tabs/Tools/Replace.jsx","components/Tabs/Tools/RegexReplace.jsx","components/Tabs/ReplaceTab.jsx","components/Tabs/Tools/FilterColumns.jsx","components/Tabs/Tools/FilterLines.jsx","components/Tabs/Tools/RegexFilterLines.jsx","components/Tabs/Tools/CutLines.jsx","components/Tabs/Tools/Trim.jsx","components/Tabs/Tools/RemoveExtraSpaces.jsx","components/Tabs/Tools/Unique.jsx","components/Tabs/ReduceTab.jsx","components/Tabs/Tools/InsertColumn.jsx","components/Tabs/Tools/SwapColumns.jsx","components/Tabs/Tools/ConvertCase.jsx","components/Tabs/Tools/Sort.jsx","components/Tabs/Tools/Reverse.jsx","components/Tabs/Tools/LineNumbers.jsx","components/Tabs/ModifyTab.jsx","components/ToolTabs.jsx","components/Edits/Tools/EditMatch.jsx","components/Edits/Tools/EditRegexMatch.jsx","components/Edits/Tools/EditReplace.jsx","components/Edits/Tools/EditRegexReplace.jsx","components/Edits/Tools/EditCompare.jsx","components/Edits/Tools/EditFilterColumns.jsx","components/Edits/Tools/EditFilterLines.jsx","components/Edits/Tools/EditRegexFilterLines.jsx","components/Edits/Tools/EditCutLines.jsx","components/Edits/Tools/EditInsertColumn.jsx","components/Edits/Tools/EditSwapColumns.jsx","components/Edits/Tools/EditConvertCase.jsx","components/Edits/Tools/EditSort.jsx","components/Edits/Tools/EditReverse.jsx","components/Edits/Tools/EditUnique.jsx","components/Edits/Tools/EditLineNumbers.jsx","components/Edits/EditDialog.jsx","components/ToolList.jsx","components/Alerts.jsx","scripts/generatorID.js","scripts/WebWorker.js","scripts/pipeWorker.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","light","grey","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","fontSize","fontWeight","flex","subtitle","textTransform","link","textDecoration","DenseAppBar","React","memo","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","Tooltip","title","IconButton","id","edge","aria-label","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","itemIcon","ListItemText","Videocam","GitHub","regexEscape","regex","replace","awkRegexEscape","awkDelimiter","delimiter","awkSlashEscape","getToolCommand","tool","command","toolname","inColumn","casesensitive","occurrence","expression","matchCommand","regexMatchCommand","find","replaceCommand","regexReplaceCommand","separator","column","comparator","value","compareCommand","start","parseInt","filterColumnsCommand","content","ignoreCase","customContent","filterLinesCommand","regexFilterLinesCommand","res","i","colBubble","insertColumnCommand","first","second","swapColumnsCommand","textCase","convertCaseCommand","count","cutLinesCommand","order","ignoreLeadingBlanks","sortCommand","direction","reverseCommand","countPrefix","uniqueCommand","startingNumber","lineNumbersCommand","marginBottom","textContent","closeButton","right","top","ShellDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","close","fullWidth","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","pipeline","result","length","active","shellGenerator","minHeight","height","btn","padding","margin","toolbarIcon","marginRight","popmenu","zIndex","input","display","activeButton","searchBox","flexDirection","flexWrap","justifyContent","alignItems","searchBtns","paddingLeft","paddingRight","borderRadius","searchBtnIcons","search","shape","fade","width","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","EditorToolbar","setInput","undo","redo","clearAllBreakpoints","showAlert","wrap","toggleWrap","findAll","inspectMode","toggleInspectMode","setPipelineActivity","clearPipeline","openFile","setOpenFile","openEditor","setOpenEditor","openPipeline","setOpenPipeline","openSearch","setOpenSearch","openShellDialog","setOpenShellDialog","searchExpression","setSearchExpression","searchRegExp","setSearchRegExp","searchCaseSensitive","setSearchCaseSensitive","fileRef","createRef","fileButtonRef","useRef","editorButtonRef","pipelineButtonRef","searchButtonRef","expandFile","useCallback","prev","expandEditor","expandInspect","expandSearch","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","loadFile","e","a","reader","FileReader","onload","readAsText","files","downloadResult","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Button","ref","Popper","role","undefined","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","accept","multiple","onChange","htmlFor","Publish","GetApp","ListAlt","Undo","Redo","WrapText","ViewDay","Clear","BugReport","Done","ClearAll","FiberNew","Search","size","Translate","TextFields","InputBase","placeholder","inputProps","backwards","caseSensitive","wholeWord","regExp","SkipPrevious","SkipNext","AllInclusive","EditorIn","forwardRef","edit","toggleBreakpoint","onCursorChange","aceIn","useImperativeHandle","properties","editor","resize","session","clearBreakpoints","useEffect","on","domEvent","indexOf","clientX","getBoundingClientRect","left","row","getDocumentPosition","getBreakpoints","setBreakpoint","clearBreakpoint","stop","newValue","console","log","selection","mode","name","showPrintMargin","hScrollBarAlwaysVisible","debounceChangePeriod","wrapEnabled","editorProps","$blockScrolling","EditorOut","aceOut","readOnly","item","enabled","disabled","violet","EditorBottomPanel","line","setPosition","state","ColorLinearProgress","barColorPrimary","LinearProgress","SplitEditor","editorContent","editText","editorResult","pipeProgress","bottomPanel","setWrap","windowResize","setWindowResize","panelSize","setPanelSize","split","handleResize","draggedSize","splitPane","clientWidth","percentage","initialEditorHeight","window","innerHeight","cursor","windowUpdate","addEventListener","removeEventListener","Fragment","defaultSize","minWidth","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","onResize","borderBottom","minSize","maxSize","toolHeader","toolName","toolInfo","divider","marginTop","infoCloseButton","infoTitleIcon","infoTitle","infoContent","ToolHeader","description","showInfo","setShowInfo","Info","styles","button","textField","flexCenter","flexStart","opts","MatchTool","matchFind","setMatchFind","matchCaseSensitive","setMatchCaseSensitive","setOccurrence","matchInColumn","setMatchInColumn","matchColumnDelimiter","setMatchColumnDelimiter","matchFindError","setMatchFindError","matchColumnError","setMatchColumnError","matchDelimiterError","setMatchDelimiterError","FormControl","InputLabel","Select","labelId","TextField","label","InputLabelProps","shrink","error","helperText","required","addTool","startIcon","Add","RegexMatchTool","regexMatchFind","setRegexMatchFind","regexMatchCaseSensitive","setRegexMatchCaseSensitive","regexMatchInColumn","setRegexMatchInColumn","regexMatchColumnDelimiter","setRegexMatchColumnDelimiter","regexMatchFindError","setRegexMatchFindError","regexMatchColumnError","setRegexMatchColumnError","regexMatchDelimiterError","setRegexMatchDelimiterError","validExpression","RegExp","handleRegexMatch","CompareTool","compareValue","setCompareValue","setComparator","setInColumn","setDelimiter","valueError","setValueError","inColumnError","setInColumnError","delimiterError","setDelimiterError","lightBlue","secondary","green","FindTab","Grid","container","xs","Match","Divider","orientation","RegexMatch","Compare","ReplaceTool","replaceFind","setReplaceFind","replaceReplace","setReplaceReplace","replaceCaseSensitive","setReplaceCaseSensitive","replaceInColumn","setReplaceInColumn","replaceColumnDelimiter","setReplaceColumnDelimiter","replaceFindError","setReplaceFindError","replaceReplaceError","setReplaceReplaceError","replaceColumnError","setReplaceColumnError","replaceDelimiterError","setReplaceDelimiterError","RegexReplaceTool","regexReplaceFind","setRegexReplaceFind","regexReplaceReplace","setRegexReplaceReplace","regexReplaceCaseSensitive","setRegexReplaceCaseSensitive","regexReplaceInColumn","setRegexReplaceInColumn","regexReplaceColumnDelimiter","setRegexReplaceColumnDelimiter","regexReplaceFindError","setRegexReplaceFindError","regexReplaceColumnError","setRegexReplaceColumnError","regexReplaceDelimiterError","setRegexReplaceDelimiterError","handleRegexReplace","FindAndReplaceTab","Replace","RegexReplace","FilterColumnsTool","setVariant","positionError","setPositionError","textFieldFW","FilterLinesTool","setContent","setCaseSensitive","setColumn","setCustomContent","columnError","setColumnError","customContentError","setCustomContentError","RegexFilterLinesTool","setExpression","expressionError","setExpressionError","handleRegexFilterLines","CutLinesTool","setCount","countError","setCountError","TrimTool","RemoveExtraSpacesTool","checkbox","UniqueTool","setCountPrefix","countDisabled","setCountDisabled","option","handleVariant","FormControlLabel","control","Checkbox","checked","ReduceTab","Unique","FilterColumns","FilterLines","RegexFilterLines","CutLines","RemoveExtraSpaces","Trim","flexEnd","collapse","InsertColumnTool","focused","setFocused","contentError","setContentError","Collapse","in","collapsedHeight","multiline","rows","onFocus","onBlur","SwapColumnsTool","firstPosition","setFirstPosition","secondPosition","setSecondPosition","firstPositionError","setFirstPositionError","secondPositionError","setSecondPositionError","ConvertCaseTool","setTextCase","SortTool","setOrder","setIgnoreLeadingBlanks","ReverseTool","setDirection","LineNumbersTool","setStartingNumber","ModifyTab","InsertColumn","Sort","SwapColumns","LineNumbers","Reverse","ConvertCase","TabPanel","children","index","other","component","hidden","Box","p","a11yProps","ToolTabs","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","FindReplace","RemoveCircleOutline","Build","ReplaceTab","EditMatch","handleUpdate","updateTool","EditRegexMatch","EditReplace","EditRegexReplace","EditCompare","EditFilterColumns","EditFilterLines","EditRegexFilterLines","EditCutLines","EditInsertColumn","EditSwapColumns","EditConvertCase","EditSort","EditReverse","EditUnique","EditLineNumbers","paddingBottom","titleIcon","dialogActions","paddingTop","confirmIcon","closeIcon","EditDialog","toolRef","Edit","mapToolname","mapToolContent","DialogActions","tooltip","textAlign","letterSpacing","boxShadow","titleLabel","list","listItem","itemDeactivated","overflow","toolText","violetWord","lightGreenWord","greenWord","blueWord","lightBlueWord","yellowWord","darkYellowWord","redWord","lightRedWord","greenBlueWord","turquoiseWord","lightTurquoiseWord","listIcon","marginLR","ToolList","tools","removeTool","reactiveTool","sort","openEditDialog","setOpenEditDialog","toolToEdit","DragHandle","SortableHandle","mapComparator","mapFilterLinesContent","mapCase","mapUniqueVariant","mapTool","SortableItem","SortableElement","ListItem","ContainerComponent","popupId","bindTrigger","MoreVert","bindMenu","includes","isEditable","openEdit","VisibilityOff","Visibility","Delete","SortableListContainer","SortableContainer","List","map","Settings","lockAxis","useDragHandle","onSortEnd","helperClass","variantIcon","success","CheckCircle","warning","Warning","Error","info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Alerts","prop","showSnackbar","setShowSnackbar","snackbarInfo","setSnackbarInfo","snackbarQueue","openSnackbar","push","Date","getTime","processSnackbarQueue","shift","closeSnackbar","reason","Snackbar","autoHideDuration","onExited","ContentProps","lastID","WebWorker","worker","code","toString","blob","Worker","getMatchOptions","regexReplaceAll","lines","tmp","match","specificMatch","j","firstChar","lastChar","join","findNextLine","text","data","findPrevLine","processTool","splitedText","columns","slice","z","matchTool","concat","Array","fill","regexMatchTool","replaceTool","regexReplaceTool","compareTool","splice","filterColumnsTool","charAt","filterLinesTool","regexFilterLinesTool","place","cutLinesTool","givenColumn","lineNumber","insertColumnTool","temp","swapColumnsTool","toUpperCase","toLowerCase","convertCaseTool","trim","trimTool","removeExtraSpacesTool","b","sortTool","reverse","reverseTool","unshift","uniqueTool","lineNumbersTool","processInspectTool","matchInspectTool","regexMatchInspectTool","x","replaceInspectTool","regexReplaceInspectTool","compareInspectTool","filterColumnsInspectTool","filterLinesInspectTool","regexFilterLinesInspectTool","cutLinesInspectTool","givenColumnLine","number","insertColumnInspectTool","swapColumnsInspectTool","convertCaseInspectTool","trimInspectTool","removeExtraSpacesInspectTool","sortInspectTool","reverseInspectTool","nextLine","prevLine","lastIndex","uniqueInspectTool","lineNumbersInspectTool","self","processData","unit","Math","ceil","postMessage","tempData","breakpoint","emptyBreakpoints","App","alertRef","setPipeline","setEditorContent","setEditorResult","setInspectMode","setPipeProgress","c","filter","each","onSortPipeline","oldIndex","newIndex","arrayMove","pipeWorker","onmessage","terminate","TopPanel","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f094476d.chunk.js","sourcesContent":["/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme, Tooltip } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      \tborder: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      \televation={0}\n      \tgetContentAnchorEl={null}\n      \tanchorOrigin={{\n        \tvertical: 'bottom',\n        \thorizontal: 'center',\n      \t}}\n      \ttransformOrigin={{\n        \tvertical: 'top',\n        \thorizontal: 'center',\n      \t}}\n      \t{...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      \t'&:focus': {\n        \tbackgroundColor: theme.palette.primary.main,\n        \t'& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          \t\tcolor: theme.palette.common.white,\n        \t},\n      \t},\n    },\n}))(MenuItem);\n\nconst theme = createMuiTheme({\n    palette: {\n      \tprimary: {\n        \tmain: \"rgb(30, 30, 30)\",\n        \tlight: grey[200],\n        \tdark: grey[900],\n      \t},\n      \ttype: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  \troot: {\n  \t  \tflexGrow: 1,\n  \t},\n  \tappName: {\n  \t    marginLeft: theme.spacing(10),\n  \t    fontSize: \"28px\",\n  \t    fontWeight: \"bold\",\n  \t    flex: 1,\n  \t},\n  \tsubtitle: {\n  \t    fontSize: \"11px\",\n  \t    textTransform: \"uppercase\",\n  \t    marginLeft: \"10px\",\n  \t    color: \"#039be5\",\n  \t},\n  \tlink: {\n  \t    textDecoration: 'none',\n  \t    color: 'inherit',\n  \t},\n}));\n\n// Inspirovano: https://material-ui.com/components/app-bar/\nconst DenseAppBar = React.memo(() => {\n  \tconst classes = useStyles();\n  \tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n  \tconst handleOpen = event => {\n  \t  \tsetAnchorEl(event.currentTarget);\n  \t};\n\n  \tconst handleClose = () => {\n  \t  \tsetAnchorEl(null);\n\t};\n\t  \n  \treturn (\n    \t<MuiThemeProvider theme={theme}>\n    \t    <div className={classes.root}>\n    \t      \t<AppBar position=\"static\">\n    \t        \t<Toolbar variant=\"dense\">\n    \t          \t\t<Typography className={classes.appName} variant=\"h4\" color=\"inherit\">\n    \t            \t\tCraftex\n    \t            \t\t<span className={classes.subtitle}>\n    \t            \t\t  \tonline text filters\n    \t            \t\t</span>\n    \t          \t\t</Typography>\n    \t          \t\t<Tooltip title=\"Menu\">\n    \t            \t\t<IconButton id=\"menu\" edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n    \t              \t\t\t<MenuIcon />\n    \t            \t\t</IconButton>\n    \t          \t\t</Tooltip>\n    \t            \t<StyledMenu\n    \t            \t    id=\"customized-menu\"\n    \t            \t    anchorEl={anchorEl}\n    \t            \t    keepMounted\n    \t            \t    open={Boolean(anchorEl)}\n    \t            \t    onClose={handleClose}\n    \t            \t>\n    \t                \t<a className={classes.link} href=\"https://github.com/Izuwei/production\">\n    \t                \t    <StyledMenuItem id=\"documentation\">\n    \t                \t      \t<ListItemIcon>\n    \t                \t      \t  \t<Description fontSize=\"small\" className={classes.itemIcon}/>\n    \t                \t      \t</ListItemIcon>\n    \t                \t      \t<ListItemText primary=\"Documentation\" />\n    \t                \t    </StyledMenuItem>\n    \t                \t</a>\n    \t                \t<a className={classes.link} href=\"https://github.com/Izuwei/production\">\n    \t                \t    <StyledMenuItem id=\"video\">\n    \t                \t      \t<ListItemIcon>\n    \t                \t      \t  \t<Videocam fontSize=\"small\" className={classes.itemIcon}/>\n    \t                \t      \t</ListItemIcon>\n    \t                \t      \t<ListItemText primary=\"Video\" />\n    \t                \t    </StyledMenuItem>\n    \t                \t</a>\n    \t                \t<a className={classes.link} href=\"https://github.com/Izuwei/production\">\n    \t                \t    <StyledMenuItem id=\"github\">\n    \t                \t      \t<ListItemIcon>\n    \t                \t      \t  \t<GitHub fontSize=\"small\" className={classes.itemIcon}/>\n    \t                \t      \t</ListItemIcon>\n    \t                \t      \t<ListItemText primary=\"GitHub\" />\n    \t                \t    </StyledMenuItem>\n    \t                \t</a>\n    \t            \t</StyledMenu>\n    \t        \t</Toolbar>\n    \t      \t</AppBar>\n    \t    </div>\n    \t</MuiThemeProvider>\n  \t);\n});\n\nexport default DenseAppBar;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nfunction regexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\nfunction awkRegexEscape(regex) {\n    regex = regexEscape(regex);\n    return regex.replace(/\\\\/g, \"\\\\$&\");\n};\n\nfunction awkDelimiter(delimiter) {\n    if (delimiter === ' ') {\n        return \"[ ]\";\n    }\n    else {\n        return delimiter;\n    }\n}\n\nfunction replaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction awkSlashEscape(regex) {\n    return regex.replace(/[\\\\]/g, \"\\\\$&\");\n}\n\nfunction regexReplaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + tool.find + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + tool.find + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction matchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction regexMatchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction compareCommand(tool) {\n    var separator = tool.inColumn === \"\" ? \"\\\\n\" : tool.delimiter;\n    var column = tool.inColumn === \"\" ? \"1\" : tool.inColumn;\n    var comparator = \"\";\n\n    switch (tool.comparator) {\n        case \"gt\":\n            comparator = \">\";\n            break;\n        case \"ge\":\n            comparator = \">=\";\n            break;\n        case \"lt\":\n            comparator = \"<\";\n            break;\n        case \"le\":\n            comparator = \"<=\";\n            break;\n        case \"eq\":\n            comparator = \"==\";\n            break;\n        default:\n            comparator = \"\";\n    }\n    return \"awk -F '\" + awkDelimiter(separator) + \"' '$\" + column + \" \" + comparator + \" \\\"\" + awkSlashEscape(tool.value) + \"\\\"'\";\n}\n\nfunction filterColumnsCommand(tool) {\n    var start = \"\";\n\n    switch (tool.variant) {\n        case \"remove\":\n            if (parseInt(tool.position) !== 1) {\n                start = \"-\" + parseInt(tool.position - 1) + \",\";\n            }\n\n            return \"cut -d '\" + tool.delimiter + \"' -f \" + start + (parseInt(tool.position) + 1) + \"-\";\n        case \"cut\":\n            return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '{print $\" + tool.position + \"}'\"; \n        default:\n            return \"\";\n    }\n}\n\nfunction filterLinesCommand(tool) {\n    switch (tool.content) {\n        case \"empty\":\n            return \"sed '/^$/d'\";\n        case \"whiteChars\":\n            return \"awk 'NF > 0'\";\n        case \"custom\":\n            if (tool.column === \"\") {\n                let ignoreCase = tool.casesensitive === false ? \"I\" : \"\";\n                return \"sed -E '/\" + regexEscape(tool.customContent) + \"/\" + ignoreCase + \"d'\";\n            }\n            else {\n                let ignoreCase = tool.casesensitive === false ? \"{IGNORECASE=1}\" : \"\";\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '\" + ignoreCase + \"$\" + tool.column + \" !~ \\\"\" + regexEscape(tool.customContent) + \"\\\" {print}'\";\n            }\n        default:\n            return \"\";\n    }\n}\n\nfunction regexFilterLinesCommand(tool) {\n    if (tool.column === \"\") {\n        var ignoreCase = tool.casesensitive === false ? \"I\" : \"\";\n        return \"sed -E '/\" + tool.expression + \"/\" + ignoreCase + \"d'\";\n    }\n    else {\n        let ignoreCase = tool.casesensitive === false ? \"{IGNORECASE=1}\" : \"\";\n        return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '\" + ignoreCase + \"$\" + tool.column + \" !~ /\" + tool.expression + \"/'\";\n    }\n}\n\nfunction insertColumnCommand(tool) {\n    const colBubble = (position) => {\n        if (parseInt(position) === 1) {\n            return \"\";\n        }\n        var res = \"t=$1;\";\n\n        for (let i = 1; i < position; i++) {\n            res += \"$\" + i + \"=$\" + (parseInt(i) + 1) + \";\";\n        }\n        return \" | awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{\" + res + \"$\" + tool.position + \"=t;print;}'\";\n    }\n\n    return \"pr -mts'\" + tool.delimiter + \"' $COLUMN_FILE /dev/stdin\" + colBubble(tool.position);\n}\n\nfunction swapColumnsCommand(tool) {\n    return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{t=$\" + tool.first + \";$\" + tool.first + \"=$\" + tool.second + \";$\" + tool.second + \"=t;print;}'\";\n}\n\nfunction convertCaseCommand(tool) {\n    switch (tool.textCase) {\n        case \"uppercase\":\n            return \"tr '[:lower:]' '[:upper:]'\";\n        case \"lowercase\":\n            return \"tr '[:upper:]' '[:lower:]'\";\n        default:\n            return \"\";\n    }\n}\n\n// https://unix.stackexchange.com/questions/102008/how-do-i-trim-leading-and-trailing-whitespace-from-each-line-of-some-output\nfunction trimCommand() {\n    return \"sed 's/^[[:blank:]]*//;s/[[:blank:]]*$//'\";\n}\n\nfunction removeExtraSpacesCommand() {\n    return \"tr -s ' '\";\n}\n\nfunction cutLinesCommand(tool) {\n    switch (tool.variant) {\n        case \"head\":\n            return \"head -n \" + tool.count;\n        case \"tail\":\n            return \"tail -n \" + tool.count;\n        default:\n            return \"\";\n    }\n}\n\nfunction sortCommand(tool) {\n    var command = \"LC_ALL=C sort -s\";\n    \n    if (tool.order === \"descending\") {\n        command += \"r\";\n    }\n    if (tool.casesensitive === false) {\n        command += \"f\";\n    }\n    if (tool.ignoreLeadingBlanks === true) {\n        command += \"b\";\n    }\n    return command;\n}\n\nfunction reverseCommand(tool) {\n    switch (tool.direction) {\n        case \"horizontal\":\n            return \"rev\";\n        case \"vertical\":\n            return \"tac\";\n        default:\n            return \"\";\n    }\n}\n\nfunction uniqueCommand(tool) {\n    var command = \"uniq\";\n\n    if (tool.casesensitive === false) {\n        command += \" -i\";\n    }\n    switch (tool.variant) {\n        case \"merge\":\n            if (tool.countPrefix === true) {\n                return command += \" -c | sed 's/^[[:blank:]]*//'\";\n            }\n            return command;\n        case \"unique\":\n            return command + \" -u\";\n        case \"duplicate\":\n            return command + \" -D\";\n        default:\n            return \"\";\n    }\n}\n\nfunction lineNumbersCommand(tool) {\n    var command = \"nl -s '\" + tool.delimiter + \"' -v \" + tool.startingNumber;\n\n    switch (tool.variant) {\n        case \"all\":\n            return command + \" -b a | sed 's/^[[:blank:]]*//'\";\n        case \"nonempty\":\n            return command + \" -b t | sed 's/^[[:blank:]]*//'\";\n        default:\n            return \"\";\n    }\n}\n\nfunction getToolCommand(tool) {\n    var command = \"\";\n\n    switch (tool.toolname) {\n        case \"match\":\n            command = matchCommand(tool);\n            break;\n        case \"regexMatch\":\n            command = regexMatchCommand(tool);\n            break;\n        case \"replace\":\n            command = replaceCommand(tool);\n            break;\n        case \"regexReplace\":\n            command = regexReplaceCommand(tool);\n            break;\n        case \"compare\":\n            command = compareCommand(tool);\n            break;\n        case \"filterColumns\":\n            command = filterColumnsCommand(tool);\n            break;\n        case \"filterLines\":\n            command = filterLinesCommand(tool);\n            break;\n        case \"regexFilterLines\":\n            command = regexFilterLinesCommand(tool);\n            break;\n        case \"insertColumn\":\n            command = insertColumnCommand(tool);\n            break;\n        case \"swapColumns\":\n            command = swapColumnsCommand(tool);\n            break;\n        case \"convertCase\":\n            command = convertCaseCommand(tool);\n            break;\n        case \"trim\":\n            command = trimCommand();\n            break;\n        case \"removeExtraSpaces\":\n            command = removeExtraSpacesCommand();\n            break;\n        case \"cutLines\":\n            command = cutLinesCommand(tool);\n            break;\n        case \"sort\":\n            command = sortCommand(tool);\n            break;\n        case \"reverse\":\n            command = reverseCommand(tool);\n            break;\n        case \"unique\":\n            command = uniqueCommand(tool);\n            break;\n        case \"lineNumbers\":\n            command = lineNumbersCommand(tool);\n            break;\n        default:\n            return;\n    }\n    return \" | \" + command;\n}\n\nexport default function (pipeline) {\n    var result = \"cat $FILENAME\";\n\n    for (var i = 0; i < pipeline.length; i++) {\n        if (pipeline[i].active === true) {\n            result += getToolCommand(pipeline[i]);\n        }\n    }\n\n    return result;\n}","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport { Dialog, Tooltip, useTheme, makeStyles, DialogTitle, DialogContent, useMediaQuery, MuiThemeProvider, DialogContentText } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport shellGenerator from \"../scripts/shellGenerator\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: \"#ff9408\",\n    },\n    content: {\n        marginBottom: \"20px\",\n    },\n    textContent: {\n        color: \"white\",\n        marginBottom: \"0px\",\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n}));\n\nfunction ShellDialog(props) {    // TODO: dodelat (ikonky, stylyzace)\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                Shell script\n                <Tooltip title={\"Close\"}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.close}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </DialogTitle>\n            <DialogContent dividers className={classes.content}>\n                <DialogContentText\n                    className={classes.textContent}\n                    id=\"scroll-dialog-text\"\n                    tabIndex={-1}\n                >\n                    {shellGenerator(props.pipeline)}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default ShellDialog;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { Toolbar, Button, IconButton, makeStyles, Popper, Grow, Paper, MenuItem, MenuList, ClickAwayListener, InputBase, Tooltip } from \"@material-ui/core\";\nimport { Description, FiberNew, Done, Publish, GetApp, Undo, Redo, BugReport, Clear, ClearAll, ListAlt, WrapText, Search, Translate, TextFields, SkipNext, SkipPrevious, AllInclusive, ViewDay } from \"@material-ui/icons\";\nimport { fade } from \"@material-ui/core/styles\";\nimport ShellDialog from \"./ShellDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(35, 35, 35)\",\n        //marginTop: \"3px\",\n        minHeight: \"33px\",\n        height: \"33px\",\n    },\n    btn: {\n        height: \"33px\",\n        padding: \"0px 10px 0px 10px\",\n        margin: \"0px\",\n    },\n    toolbarIcon: {\n        marginRight: \"6px\",\n    },\n    popmenu: {\n        zIndex: \"9999\",\n    },\n    input: {\n        display: \"none\",\n    },\n\n    activeButton: {\n        backgroundColor: \"#039be5 !important\",\n    },\n    searchBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"stretch\",\n    },\n    searchBtns: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        borderRadius: \"4px\",\n    },\n    searchBtnIcons: {\n        height: \"10px\",\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1),\n          width: 'auto',\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    searchIcon: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 5),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst EditorToolbar = React.memo(({ setInput, result, undo, redo, clearAllBreakpoints, showAlert, wrap, toggleWrap, find, findAll, inspectMode, toggleInspectMode, pipeline, setPipelineActivity, clearPipeline }) => {\n    const classes = useStyles();\n\n    const [openFile, setOpenFile] = useState(false);\n    const [openEditor, setOpenEditor] = useState(false);\n    const [openPipeline, setOpenPipeline] = useState(false);\n    const [openSearch, setOpenSearch] = useState(false);\n    const [openShellDialog, setOpenShellDialog] = useState(false);\n\n    const [searchExpression, setSearchExpression] = useState(\"\");\n    const [searchRegExp, setSearchRegExp] = useState(false);\n    const [searchCaseSensitive, setSearchCaseSensitive] = useState(false);\n\n    const fileRef = React.createRef();\n    \n    const fileButtonRef = useRef(null);\n    const editorButtonRef = useRef(null);\n    const pipelineButtonRef = useRef(null);\n    const searchButtonRef = useRef(null);\n\n    const expandFile = useCallback(() => {\n        setOpenFile(prev => !prev);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandEditor = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(prev => !prev);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandInspect = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(prev => !prev);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandSearch = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(prev => !prev);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleClose = useCallback((event) => {\n        // Otevreni dalsiho selectu\n        if ((fileButtonRef.current && fileButtonRef.current.contains(event.target)) || \n            (editorButtonRef.current && editorButtonRef.current.contains(event.target)) ||\n            (pipelineButtonRef.current && pipelineButtonRef.current.contains(event.target)) ||\n            (searchButtonRef.current && searchButtonRef.current.contains(event.target))) {\n            return;\n        }\n        \n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleListKeyDown = useCallback((event) => {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpenFile(false);\n          setOpenEditor(false);\n          setOpenPipeline(false);\n        }\n    }, [setOpenFile, setOpenEditor, setOpenPipeline]);\n\n    const loadFile = useCallback(async(e) => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n\n        reader.onload = async (e) => { \n          setInput(e.target.result);\n        };\n        reader.readAsText(e.target.files[0]);\n        showAlert(\"info\", \"Info: File imported.\");\n    }, [setInput, showAlert]);\n\n    const downloadResult = useCallback(async() => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([result], {type: 'text/plain'});\n\n        element.href = URL.createObjectURL(file);\n        element.download = \"result.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }, [result]);\n\n    return (\n        <Toolbar className={classes.root}>\n            <Button \n                id=\"file-sec\"\n                className={classes.btn}\n                ref={fileButtonRef}\n                onClick={expandFile}\n            >\n                <Description fontSize=\"small\" className={classes.toolbarIcon} />\n                File\n            </Button>\n            <Popper className={classes.popmenu} open={openFile} anchorEl={fileButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList autoFocusItem={openFile} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <input\n                            accept=\"text/plain\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            ref={fileRef}\n                            onChange={e => `${loadFile(e)} ${handleClose(e)}`}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <MenuItem id=\"import\">\n                                <Publish fontSize=\"small\" className={classes.toolbarIcon}/>\n                                Import\n                            </MenuItem>\n                        </label>\n                        <MenuItem id=\"download\" onClick={downloadResult}>\n                            <GetApp fontSize=\"small\" className={classes.toolbarIcon} />\n                            Download\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                id=\"editor-sec\"\n                className={classes.btn}\n                ref={editorButtonRef}\n                onClick={expandEditor}\n            >\n                <ListAlt fontSize=\"small\" className={classes.toolbarIcon} />\n                Editor\n            </Button>\n            <Popper className={classes.popmenu} open={openEditor} anchorEl={editorButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={openEditor} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem id=\"undo\" onClick={e => `${undo(e)} ${handleClose(e)}`}>\n                            <Undo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Undo\n                        </MenuItem>\n                        <MenuItem id=\"redo\" onClick={e => `${redo(e)} ${handleClose(e)}`}>\n                            <Redo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Redo\n                        </MenuItem>\n                        <MenuItem id=\"wrap\" onClick={e => `${toggleWrap(e)} ${handleClose(e)}`}>\n                            <WrapText fontSize=\"small\" className={classes.toolbarIcon} />\n                            { wrap ? \"Disable wrap\" : \"Enable wrap\" }\n                        </MenuItem>\n                        <MenuItem id=\"toggle-inspector\" onClick={e => `${toggleInspectMode(e)} ${handleClose(e)}`}>\n                            <ViewDay fontSize=\"small\" className={classes.toolbarIcon} />\n                            { inspectMode ? \"Disable inspector\" : \"Enable inspector\" }\n                        </MenuItem>\n                        <MenuItem id=\"remove-breakpoints\" onClick={e => `${clearAllBreakpoints(e)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Remove all breakpoints\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                id=\"pipeline-sec\"\n                className={classes.btn}\n                ref={pipelineButtonRef}\n                onClick={expandInspect}\n            >\n                <BugReport fontSize=\"small\" className={classes.toolbarIcon} />\n                Pipeline\n            </Button>\n            <Popper className={classes.popmenu} open={openPipeline} anchorEl={pipelineButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList autoFocusItem={openPipeline} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem id=\"enable-tools\" onClick={e => `${setPipelineActivity(true)} ${handleClose(e)}`}>\n                            <Done fontSize=\"small\" className={classes.toolbarIcon} />\n                            Enable all tools\n                        </MenuItem>\n                        <MenuItem id=\"disable-tools\" onClick={e => `${setPipelineActivity(false)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Disable all tools\n                        </MenuItem>\n                        <MenuItem id=\"clear-pipeline\" onClick={e => `${clearPipeline()} ${handleClose(e)}`}>\n                            <ClearAll fontSize=\"small\" className={classes.toolbarIcon} />\n                            Clear pipeline\n                        </MenuItem>\n                        <MenuItem id=\"create-shell\" onClick={e => `${setOpenShellDialog(true)} ${handleClose(e)}`}>\n                            <FiberNew fontSize=\"small\" className={classes.toolbarIcon} />\n                            Create shell script\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                id=\"search-sec\"\n                className={classes.btn}\n                ref={searchButtonRef}\n                onClick={expandSearch}\n            >\n                <Search fontSize=\"small\" className={classes.toolbarIcon} />\n                Search\n            </Button>\n            <Popper className={classes.popmenu} open={openSearch} anchorEl={searchButtonRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                    <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                            <div className={classes.searchBox}>\n                                <Tooltip title=\"RegExp\">\n                                <IconButton id=\"search-regexp\" size=\"small\" className={`${classes.searchBtns} ${searchRegExp && classes.activeButton }`}\n                                    onClick={() => setSearchRegExp(prev => !prev)}\n                                >\n                                    <Translate />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Case sensitive\">\n                                <IconButton id=\"search-case\" size=\"small\" className={`${classes.searchBtns} ${searchCaseSensitive && classes.activeButton }`}\n                                    onClick={() => setSearchCaseSensitive(prev => !prev)}\n                                >\n                                    <TextFields />\n                                </IconButton>\n                                </Tooltip>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <Search />\n                                    </div>\n                                    <InputBase\n                                        id=\"search-pattern\"\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        onChange={event => setSearchExpression(event.target.value)}\n                                        value={searchExpression}\n                                    />\n                                    <Tooltip title=\"Remove\">\n                                    <IconButton id=\"search-clear\" size=\"small\" style={{marginRight: \"5px\"}} \n                                        onClick={() => setSearchExpression(\"\")}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    </Tooltip>\n                                </div>\n                                <Tooltip title=\"Previous\">\n                                <IconButton id=\"search-prev\" size=\"small\" className={classes.searchBtns} \n                                    onClick={() => find(searchExpression, { backwards: true, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipPrevious />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next\">\n                                <IconButton id=\"search-next\" size=\"small\" className={classes.searchBtns}\n                                     onClick={() => find(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipNext />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"All\">\n                                <IconButton id=\"search-all\" size=\"small\" className={classes.searchBtns} \n                                     onClick={() => findAll(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <AllInclusive />\n                                </IconButton>\n                                </Tooltip>\n                            </div>\n                        </ClickAwayListener>\n                    </Paper>\n                </Grow>\n            )}\n            </Popper>\n            {openShellDialog &&\n                <ShellDialog \n                    open={openShellDialog}\n                    close={() => setOpenShellDialog(false)}\n                    pipeline={pipeline}\n                />\n            }\n        </ Toolbar>\n    );\n});\n\nexport default EditorToolbar;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { forwardRef, useImperativeHandle, useEffect, useRef, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nconst EditorIn = React.memo(forwardRef(({ content, edit, wrap, toggleBreakpoint, onCursorChange }, ref) => {\n  \tconst aceIn = useRef(null);\n\n  \tuseImperativeHandle(ref, () => ({\n    \tfind(expression, properties){\n    \t  \taceIn.current.editor.find(expression, properties);\n    \t},\n\t\n    \tfindAll(expression, properties) {\n    \t  \taceIn.current.editor.findAll(expression, properties);\n    \t},\n\n    \tresize() {\n    \t  \taceIn.current.editor.resize();\n    \t},\n\n    \tundo()  {\n    \t  \taceIn.current.editor.undo();\n    \t},\n\t\n    \tredo  ()  {\n    \t  \taceIn.current.editor.redo();\n    \t},\n\t\n    \tclearAllBreakpoints  ()  {\n    \t  \taceIn.current.editor.session.clearBreakpoints();\n    \t},\n\t}));\n\n\t/**\n\t * https://ourcodeworld.com/articles/read/1052/how-to-add-toggle-breakpoints-on-the-ace-editor-gutter\n     */\n\tuseEffect(() => {\n  \t\taceIn.current.editor.on(\"guttermousedown\", function(e) {\n\t\tvar target = e.domEvent.target;\n\t\t\n    \tif (target.className.indexOf(\"ace_gutter-cell\") === -1) {\n    \t    return;\n    \t}\n\n    \t/*// Pokud neni editor focusnut ignorovat nastaveni breakpointu (mozna se bude hodit).\n    \tif (!(e.editor.isFocused())){\n    \t    return; \n    \t}*/\n\n    \t// Misto za cislici ignorujeme pro nastaveni breakpointu\n    \tif (e.clientX > 25 + target.getBoundingClientRect().left) {\n    \t    return;\n    \t}\n\n    \tvar row = e.getDocumentPosition().row;\n    \tvar breakpoints = e.editor.session.getBreakpoints(row, 0);\n\n    \tif (typeof breakpoints[row] === typeof undefined) {\n    \t  e.editor.session.setBreakpoint(row);\n    \t}\n    \telse {\n    \t    e.editor.session.clearBreakpoint(row);\n    \t}\n\n    \te.stop();\n\t\n    \ttoggleBreakpoint(breakpoints);\n    \t});\n  \t}, [toggleBreakpoint]);\n\n\n  \tconst onChange = useCallback((newValue) => {\n  \t  \tedit(newValue);\n  \t  \tconsole.log(aceIn.current.editor.session.getBreakpoints());\n  \t}, [edit]);\n  \n    return (\n    \t<AceEditor\n    \t    theme=\"idle_fingers\"\n    \t    fontSize=\"20px\"\n    \t    onChange={onChange}\n    \t    onCursorChange={(selection, event) => onCursorChange(selection, event)}\n    \t    ref={aceIn}\n    \t    value={content}\n    \t    mode=\"plain_text\"\n    \t    name=\"EditorIn\"\n    \t    height=\"100%\"\n    \t    width=\"100%\"\n    \t    placeholder=\"Insert your input here\"\n    \t    showPrintMargin={false}\n    \t    hScrollBarAlwaysVisible={true}\n    \t    debounceChangePeriod={1500}\n    \t    wrapEnabled={wrap}\n    \t    editorProps={{ $blockScrolling: true }}\n\t\t/>\n\t);\n}));\n \nexport default EditorIn;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\nconst EditorOut = React.memo(forwardRef(({ content, wrap }, ref) => {\n  \tconst aceOut = useRef(null);\n  \n  \tuseImperativeHandle(ref, () => ({\n  \t\tfind(expression, properties) {\n  \t\t\taceOut.current.editor.find(expression, properties);\n\t\t},\n\t\t  \n  \t\tfindAll(expression, properties) {\n  \t\t  \taceOut.current.editor.findAll(expression, properties);\n  \t\t},\n\n  \t\tresize() {\n  \t\t  \taceOut.current.editor.resize();\n  \t\t},\n  \t}));\n\n    return (\n    \t<AceEditor\n    \t    theme=\"idle_fingers\"\n    \t    fontSize=\"20px\"\n    \t    ref={aceOut}\n    \t    value={content}\n    \t    name=\"EditorOut\"\n    \t    height=\"100%\"\n    \t    width=\"100%\"\n    \t    mode=\"plain_text\"\n    \t    readOnly={true}\n    \t    placeholder=\"Your output will be here\"\n    \t    showPrintMargin={false}\n    \t    hScrollBarAlwaysVisible={true}\n    \t    wrapEnabled={wrap}\n    \t    editorProps={{ $blockScrolling: true }}\n\t\t/>\n\t);\n}));\n \nexport default EditorOut;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(33, 33, 33)\",\n        height: \"18px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        padding: \"1px 20px\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        flexWrap: \"nowrap\",\n        flexDirection: \"row-reverse\",\n        fontSize: \"13px\",\n        borderRadius: \"0px\",\n    },\n    item: {\n        marginLeft: \"15px\",\n    },\n    enabled: {\n        color: \"green\",\n    },\n    disabled: {\n        color: \"#bf001d\",\n    },\n    violet: {\n        color: \"#e35d14\",\n    },\n}));\n\nconst EditorBottomPanel = React.memo(forwardRef(({wrap, inspectMode}, ref) => {\n    const classes = useStyles();\n\n    const [position, setPosition] = useState({line: 1, column: 1});\n\n\n    useImperativeHandle(ref, () => ({\n        setPosition(line, column) {\n            setPosition(state => ({...state, line: line, column: column}));\n        }\n            \n    }));\n\n    return (\n        <Paper elevation={7} className={classes.root}>\n            <span className={classes.item}>Wrap: {wrap ? <span className={classes.enabled}>Enabled</span> : <span className={classes.disabled}>Disabled</span>}</span>\n            <span className={classes.item}>Mode: <span className={classes.violet}>{ inspectMode ? \"Inspect\" : \"Auto\" }</span></span>\n            <span>Ln {position.line}, Col {position.column}</span>\n        </Paper>\n    );\n}));\n\nexport default EditorBottomPanel;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport EditorToolbar from \"./EditorToolbar\";\nimport SplitPane from \"react-split-pane\";\nimport { Resizable } from \"re-resizable\";\nimport EditorIn from \"./EditorIn\";\nimport EditorOut from \"./EditorOut\";\nimport { LinearProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditorBottomPanel from \"./EditorBottomPanel\";\nimport \"./SplitEditor.css\";\n\nconst ColorLinearProgress = withStyles({\n    barColorPrimary: {\n      backgroundColor: '#028fd4',\n    },\n})(LinearProgress);\n\nconst SplitEditor = React.memo(({ editorContent, editText, editorResult, showAlert, toggleBreakpoint, inspectMode, toggleInspectMode, pipeProgress, pipeline, setPipelineActivity, clearPipeline }) => {\n    const aceIn = useRef();\n    const aceOut = useRef();\n    const bottomPanel = useRef();\n\n    const [wrap, setWrap] = useState(false);\n    const [windowResize, setWindowResize] = useState(false);\n    const [panelSize, setPanelSize] = useState(\"50%\");\n\n    const split = useRef();\n\n    const find = useCallback((expression, properties) => {\n        aceIn.current.find(expression, properties);\n        aceOut.current.find(expression, properties);\n    }, []);\n\n    const findAll = useCallback((expression, properties) => {\n        aceIn.current.findAll(expression, properties);\n        aceOut.current.findAll(expression, properties);\n    }, []);\n\n    const toggleWrap = useCallback(() => {\n        setWrap(prev => !prev);\n    }, [setWrap]);\n\n    // Inspirovano: https://github.com/tomkp/react-split-pane/issues/57\n    const handleResize = useCallback(() => {\n        const draggedSize = split.current.state.draggedSize;\n\n        if (draggedSize && split.current.splitPane.clientWidth) {\n            const percentage = draggedSize / split.current.splitPane.clientWidth;\n\n            setPanelSize(`${percentage * 100}%`);\n        }\n        \n        aceIn.current.resize();\n        aceOut.current.resize();\n    }, [setPanelSize]);\n\n    const undo = useCallback(() => {\n        aceIn.current.undo();\n    }, []);\n\n    const redo = useCallback(() => {\n        aceIn.current.redo();\n    }, []);\n\n    const clearAllBreakpoints = useCallback(() => {\n        aceIn.current.clearAllBreakpoints();\n        toggleBreakpoint([]);\n    }, [toggleBreakpoint]);\n\n    const initialEditorHeight = useCallback(() => {\n        const height = window.innerHeight - 1047;   // 1047 celkova vyska ostatniho contentu\n\n        return height < 480 ? \"480px\" : height;\n    }, []);\n\n    const onCursorChange = useCallback((selection, event) => {\n        bottomPanel.current.setPosition(selection.cursor.row + 1, selection.cursor.column + 1);\n    }, []);\n    \n    useEffect(() => {\n        const windowUpdate = (e) => {\n            setWindowResize(true);\n        }\n\n        window.addEventListener(\"resize\", windowUpdate);\n\n        return () => {\n            window.removeEventListener(\"resize\", windowUpdate);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (windowResize === true) {\n            setWindowResize(false);\n        }\n    }, [windowResize, setWindowResize])\n\n    return ( \n        <React.Fragment>\n            <EditorToolbar \n                setInput={editText} \n                result={editorResult} \n                undo={undo} \n                redo={redo}\n                clearAllBreakpoints={clearAllBreakpoints}\n                showAlert={showAlert} \n                wrap={wrap}\n                toggleWrap={toggleWrap}\n                find={find}\n                findAll={findAll}\n                inspectMode={inspectMode}\n                toggleInspectMode={toggleInspectMode}\n                pipeline={pipeline}\n                setPipelineActivity={setPipelineActivity}\n                clearPipeline={clearPipeline}\n            />\n            <Resizable\n                defaultSize={{ width: \"100%\", height: initialEditorHeight() }}\n                minHeight={100}\n                minWidth=\"100%\"\n                maxWidth=\"100%\"\n                enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n                onResize={() => handleResize()}\n                style={{display: \"flex\", flexDirection: \"column\", flexWrap: \"nowrap\", justifyContent: \"flex-start\",\n                    alignItems: \"stretch\", borderBottom: \"1px solid rgb(30, 30, 30)\"}}\n            >\n                <SplitPane \n                    className=\"SplitEditor\" \n                    split=\"vertical\"\n                    ref={split}\n                    style={{height: \"100%\", position: \"static\"}} \n                    minSize={200} maxSize={-200} \n                    defaultSize={panelSize} \n                    size={windowResize ? panelSize : undefined}\n                    onChange={() => handleResize()}\n                >\n                    <EditorIn ref={ aceIn } content={editorContent} edit={editText} wrap={wrap} toggleBreakpoint={toggleBreakpoint} onCursorChange={onCursorChange} />\n                    <EditorOut ref={ aceOut } content={editorResult} wrap={wrap} />\n                </SplitPane>\n                    <ColorLinearProgress variant=\"determinate\" value={pipeProgress} />\n                    <EditorBottomPanel ref={bottomPanel} wrap={wrap} inspectMode={inspectMode} />\n            </Resizable>\n        </React.Fragment>\n    );  \n});\n \nexport default SplitEditor;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nexport default {\n    toolHeader: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    toolName: {\n        color: \"#d9d9d9\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n        display: \"inline\",\n    },\n    toolInfo: {\n        marginLeft: \"5px\",\n        marginBottom: \"5px\",\n        color: \"#d9d9d9\",\n        \"&:hover\": {\n            color: \"#039be5\",\n        }\n    },\n    divider: {\n\t    marginTop: \"20px\",\n    },\n    infoCloseButton: {\n        marginLeft: \"50px\",\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n    infoTitleIcon: {\n        marginRight: \"15px\",\n        color: \"#09b011\",\n    },\n    infoTitle: {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"#09b011\",\n        fontWeight: \"bold\",\n        fontSize: \"26px\",\n    },\n    infoContent: {\n        marginBottom: \"20px\",\n    }\n};","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from \"react\";\nimport { Typography, IconButton, Tooltip, useTheme, useMediaQuery, MuiThemeProvider, Dialog, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport { Info, Close } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\n\nconst ToolHeader = React.memo(({ classes, toolname, description }) => {\n    const [showInfo, setShowInfo] = useState(false);\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={classes.toolHeader}>\n                <Typography variant=\"h5\" className={classes.toolName}>{toolname}</Typography>\n                <Tooltip title=\"Info\">\n                    <IconButton \n                        className={classes.toolInfo}\n                        onClick={() => setShowInfo(true)}\n                        size=\"small\"\n                    >\n                        <Info />\n                    </IconButton>\n                </Tooltip>\n            </div>\n            {showInfo &&\n            <Dialog\n            open={showInfo}\n            onClose={() => setShowInfo(false)}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"sm\"\n            aria-labelledby=\"info-dialog-title\"\n            >\n                <DialogTitle id=\"info-dialog-title\">\n                    <div className={classes.infoTitle}>\n                        <Info className={classes.infoTitleIcon} fontSize=\"large\" />\n                        <span>{toolname + \" info\"}</span>\n                    </div>\n                    <Tooltip title={\"Close\"}>\n                        <IconButton aria-label=\"close\" className={classes.infoCloseButton} onClick={() => setShowInfo(false)}>\n                            <Close />\n                        </IconButton>\n                    </Tooltip>\n                </DialogTitle>\n                <DialogContent dividers className={classes.infoContent}>\n                    {description}\n                </DialogContent>\n            </Dialog>}\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ToolHeader);","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction MatchTool(props) {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(\"\");\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [matchInColumn, setMatchInColumn] = useState(\"\");\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(\"\");\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    const handleMatch = () => {\n        if (matchFind === \"\"){\n            setMatchFindError(true);\n        }\n\n        if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n            setMatchDelimiterError(true);\n        }\n\n        if (matchInColumn !== \"\" && matchInColumn <= 0) {\n            setMatchColumnError(true);\n        }\n\n        if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n            props.addTool({toolname: \"match\", expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Match added into the pipeline.\");\n            setMatchFind(\"\");\n            setMatchInColumn(\"\");\n            setMatchColumnDelimiter(\"\");\n            setMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"match-occurence-label\"\n                      id=\"match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"match-occurrence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"match-occurrence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"match-case-label\"\n                      id=\"match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"match-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"match-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"match-expression\"\n                    label=\"Find\"\n                    value={matchFind}\n                    required={true}\n                    onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={matchFindError === true}\n                    helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-match\"\n                    className={classes.button}\n                    onClick={() => handleMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default MatchTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexMatchTool(props) {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(\"\");\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(\"\");\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(\"\");\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    const handleRegexMatch = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexMatchFind);\n        } \n        catch (e) {\n            setRegexMatchFindError(true);\n            validExpression = false;\n        }\n\n        if (regexMatchFind === \"\"){\n            setRegexMatchFindError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n            setRegexMatchDelimiterError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n            setRegexMatchColumnError(true);\n        }\n\n        if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexMatch\", expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex match added into the pipeline.\");\n            setRegexMatchFind(\"\");\n            setRegexMatchInColumn(\"\");\n            setRegexMatchColumnDelimiter(\"\");\n            setRegexMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-match-occurence-label\"\n                      id=\"regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"regex-match-occurence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"regex-match-occurence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-match-case-label\"\n                      id=\"regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"regex-match-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"regex-match-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-match-expression\"\n                    label=\"Regular expression\"\n                    value={regexMatchFind}\n                    required={true}\n                    onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={regexMatchFindError === true}\n                    helperText={regexMatchFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-match\"\n                    className={classes.button}\n                    onClick={() => handleRegexMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexMatchTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CompareTool(props) {\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(\"\");\n    const [comparator, setComparator] = useState(\"gt\")\n    const [inColumn, setInColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleCompare = () => {\n        if (compareValue === \"\"){\n            setValueError(true);\n        }\n\n        if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (inColumn !== \"\" && inColumn <= 0) {\n            setInColumnError(true);\n        }\n\n        if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n            props.addTool({toolname: \"compare\", value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Compare added into the pipeline.\");\n            setCompareValue(\"\");\n            setInColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding compare into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"compare-comparator-label\"\n                      id=\"compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem id=\"compare-comparator-gt\" value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem id=\"compare-comparator-ge\" value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem id=\"compare-comparator-lt\" value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem id=\"compare-comparator-le\" value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem id=\"compare-comparator-eq\" value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"compare-value\"\n                    label=\"Compare value\"\n                    value={compareValue}\n                    required={true}\n                    onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                    className={classes.textField}\n                    error={valueError === true}\n                    helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-compare\"\n                    className={classes.button}\n                    onClick={() => handleCompare()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default CompareTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Match from \"./Tools/Match\";\nimport RegexMatch from \"./Tools/RegexMatch\";\nimport Compare from \"./Tools/Compare\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Match\" description={\n                        <React.Fragment>\n                            <p>Searches for <b>pattern</b> in each line independently. If line contains specified text, then is preproduced to the output.</p>\n                            <h4>Options:</h4>\n                            <ul>\n                                <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                            </ul>\n                        </React.Fragment>\n                    } \n                    />\n                    <Match addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex match\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently. If line contains expression, then is preproduced to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is matched. <b>First</b> will match only first line from start, other matches are ignored. Otherwise <b>All</b> match every corresponding line.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexMatch addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Compare\" description={\n                            <React.Fragment>\n                                <p>Compare each line with <b>requested value</b>. If comparison matches <b>comparator</b>, then line is preproduced to the output. The comparison is made on an <b>ASCII</b> basis.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Comparator -</b> Specifies mathematical comparison.</li>\n                                    <li><b>Column - </b> sets a column specifically for comparison. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        }\n                    />\n                    <Compare addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindTab);","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReplaceTool(props) {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [replaceInColumn, setReplaceInColumn] = useState(\"\");\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(\"\");\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n\n        if (replaceFind === replaceReplace && replaceFind !== \"\") {\n            setReplaceReplaceError(true);\n        }\n\n        if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n            setReplaceDelimiterError(true);\n        }\n\n        if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n            setReplaceColumnError(true);\n        }\n\n        if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n            props.addTool({toolname: \"replace\", find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n            setReplaceInColumn(\"\");\n            setReplaceColumnDelimiter(\"\");\n            setReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"replace-occurrence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"replace-occurrence-label\"\n                      id=\"replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"replace-occurrence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"replace-occurrence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"replace-case-label\"\n                      id=\"replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"replace-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"replace-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"replace-find\"\n                    label=\"Find\"\n                    value={replaceFind}\n                    required={true}\n                    onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={replaceFindError === true}\n                    helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-replace\"\n                    label=\"Replace\"\n                    value={replaceReplace}\n                    onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                    className={classes.textField}\n                    error={replaceReplaceError === true}\n                    helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-replace\"\n                    className={classes.button}\n                    onClick={() => handleReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ReplaceTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexReplaceTool(props) {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(\"\");\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(\"\");\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(\"\");\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(\"\");\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    const handleRegexReplace = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexReplaceFind);\n        } \n        catch (e) {\n            setRegexReplaceFindError(true);\n            validExpression = false;\n        }\n\n        if (regexReplaceFind === \"\"){\n            setRegexReplaceFindError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n            setRegexReplaceDelimiterError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n            setRegexReplaceColumnError(true);\n        }\n\n        if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexReplace\", find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex replace added into the pipeline.\");\n            setRegexReplaceFind(\"\");\n            setRegexReplaceReplace(\"\");\n            setRegexReplaceInColumn(\"\");\n            setRegexReplaceColumnDelimiter(\"\");\n            setRegexReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-occurrence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-occurrence-label\"\n                      id=\"regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"regex-replace-occurrence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"regex-replace-occurrence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-case-label\"\n                      id=\"regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"regex-replace-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"regex-replace-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-replace-find\"\n                    label=\"Regular expression\"\n                    value={regexReplaceFind}\n                    required={true}\n                    onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={regexReplaceFindError === true}\n                    helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-replace\"\n                    label=\"Replace\"\n                    value={regexReplaceReplace}\n                    onChange={event => setRegexReplaceReplace(event.target.value)}\n                    className={classes.textField}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-replace\"\n                    className={classes.button}\n                    onClick={() => handleRegexReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexReplaceTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport Replace from \"./Tools/Replace\";\nimport RegexReplace from \"./Tools/RegexReplace\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindAndReplaceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Replace\" description={\n                            <React.Fragment>\n                                <p>Searches for <b>pattern</b> in each line independently and replace them with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Replace addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex replace\" description={\n                            <React.Fragment>\n                                <p>Searches with <b>regular expression</b> in each line independently and replace matches with <b>requested value</b>. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Occurrence -</b> specifies which occurrence is replaced. <b>First</b> will replace only first match from start, other matches are ignored. Otherwise <b>All</b> replace every corresponding match.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column - </b> sets a column specifically for regular expression search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexReplace addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindAndReplaceTab);","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterColumnsTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"remove\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleFilterColumns = () => {\n        if (position === \"\" || position <= 0){\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"filterColumns\", variant: variant, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Filter columns added into the pipeline.\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"filter-columns-variant-label\"\n                  id=\"filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"filter-columns-variant-remove\" value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem id=\"filter-columns-variant-cut\" value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <TextField\n                id=\"filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.textField}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-columns\"\n                className={classes.button}\n                onClick={() => handleFilterColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterColumnsTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textFieldFW: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n}));\n\nfunction FilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(\"empty\");\n    const [caseSensitive, setCaseSensitive] = useState(false);\n    const [column, setColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n    const [customContent, setCustomContent] = useState(\"\");\n\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n    const [customContentError, setCustomContentError] = useState(false);\n\n    const handleRemoveLines = () => {\n        if (content === \"custom\" && customContent === \"\"){\n            setCustomContentError(true);\n        }\n\n        if (content === \"custom\" && (column !== \"\" && delimiter === \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (content === \"custom\" && column !== \"\" && column <= 0) {\n            setColumnError(true);\n        }\n\n        if (content === \"empty\" || content === \"whiteChars\" || (content === \"custom\" && customContent !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\")))) {\n            props.addTool({toolname: \"filterLines\", content: content, casesensitive: caseSensitive, column: column, delimiter: delimiter, customContent: customContent});\n            props.showAlert(\"success\", \"Success: Filter lines added into the pipeline.\");\n            setColumn(\"\");\n            setDelimiter(\"\");\n            setCustomContent(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"filter-lines-content-label\">Content</InputLabel>\n                    <Select\n                        labelId=\"filter-lines-content-label\"\n                        id=\"filter-lines-content\"\n                        className={classes.opts}\n                        value={content}\n                        onChange={(event) => `${setContent(event.target.value)} ${setColumnError(false)} ${setDelimiterError(false)} ${setCustomContentError(false)}`}\n                    >\n                        <MenuItem id=\"filter-lines-content-empty\" value={\"empty\"}>Empty</MenuItem>\n                        <MenuItem id=\"filter-lines-content-whitechars\" value={\"whiteChars\"}>White characters</MenuItem>\n                        <MenuItem id=\"filter-lines-content-custom\" value={\"custom\"}>Custom</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                        labelId=\"filter-lines-case-label\"\n                        id=\"filter-lines-case\"\n                        disabled={content !== \"custom\"}\n                        className={classes.opts}\n                        value={caseSensitive}\n                        onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"filter-lines-case-sensitive\"value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"filter-lines-case-isensitive\"value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"filter-lines-column\"\n                    label=\"Column\"\n                    disabled={content !== \"custom\"}\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.textField}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"filter-lines-delimiter\"\n                    label=\"Delimiter\"\n                    disabled={content !== \"custom\"}\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.textField}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"filter-lines-custom-content\"\n                    label=\"Custom content\"\n                    disabled={content !== \"custom\"}\n                    value={customContent}\n                    required={content === \"custom\"}\n                    onChange={event => `${setCustomContent(event.target.value)} ${setCustomContentError(false)}`}\n                    className={classes.textFieldFW}\n                    error={customContentError === true}\n                    helperText={customContentError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-filter-lines\"\n                    className={classes.button}\n                    onClick={() => handleRemoveLines()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default FilterLinesTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexFilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [expression, setExpression] = useState(\"\");\n    const [caseSensitive, setCaseSensitive] = useState(false);\n    const [column, setColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [expressionError, setExpressionError] = useState(false);\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleRegexFilterLines = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(expression);\n        } \n        catch (e) {\n            setExpressionError(true);\n            validExpression = false;\n        }\n\n        if (expression === \"\"){\n            setExpressionError(true);\n        }\n\n        if (column !== \"\" && delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (column !== \"\" && column <= 0) {\n            setColumnError(true);\n        }\n\n        if (validExpression === true && expression !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\"))) {\n            props.addTool({toolname: \"regexFilterLines\", expression: expression, casesensitive: caseSensitive, column: column, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Regex filter lines added into the pipeline.\");\n            setExpression(\"\");\n            setColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex filter lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-filter-lines-case-label\"\n                      id=\"regex-filter-lines-case\"\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"regex-filter-lines-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"regex-filter-lines-case-isensitive\"value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-filter-lines-in-column\"\n                    label=\"Column\"\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-filter-lines-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-filter-lines-expression\"\n                    label=\"Regular expression\"\n                    value={expression}\n                    required={true}\n                    onChange={event => `${setExpression(event.target.value)} ${setExpressionError(false)}`}\n                    className={classes.textField}\n                    error={expressionError === true}\n                    helperText={expressionError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-filter-lines\"\n                    className={classes.button}\n                    onClick={() => handleRegexFilterLines()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexFilterLinesTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CutLinesTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"head\");\n    const [count, setCount] = useState(\"\");\n\n    const [countError, setCountError] = useState(false);\n\n    const handleCutLines = () => {\n        if (count === \"\" || count <= 0) {\n            setCountError(true);\n        }\n\n        if (count !== \"\" && count > 0) {\n            props.addTool({toolname: \"cutLines\", variant: variant, count: count});\n            props.showAlert(\"success\", \"Success: Cut lines added into the pipeline.\");\n            setCount(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding cut lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"cut-lines-variant-label\"\n                    id=\"cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"cut-lines-variant-head\" value={\"head\"}>Head</MenuItem>\n                    <MenuItem id=\"cut-lines-variant-tail\" value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-cut-lines\"\n                className={classes.button}\n                onClick={() => handleCutLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default CutLinesTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction TrimTool(props) {\n    const classes = useStyles();\n\n    const handleTrim = () => {\n        props.addTool({toolname: \"trim\"});\n        props.showAlert(\"success\", \"Success: Trim added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-trim\"\n                onClick={() => handleTrim()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default TrimTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction RemoveExtraSpacesTool(props) {\n    const classes = useStyles();\n\n    const handleRemoveExtraSpaces = () => {\n        props.addTool({toolname: \"removeExtraSpaces\"});\n        props.showAlert(\"success\", \"Success: Remove extra spaces added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-remove-extra-spaces\"\n                onClick={() => handleRemoveExtraSpaces()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default RemoveExtraSpacesTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nfunction UniqueTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"merge\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [countPrefix, setCountPrefix] = useState(false);\n    const [countDisabled, setCountDisabled] = useState(false);\n\n    const handleUnique = () => {\n        props.addTool({toolname: \"unique\", variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n        props.showAlert(\"success\", \"Success: Unique added into the pipeline.\");\n    }\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"unique-variant-label\"\n                  id=\"unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem id=\"unique-variant-merge\" value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem id=\"unique-variant-unique\" value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem id=\"unique-variant-duplicate\" value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"unique-case-label\"\n                  id=\"unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem id=\"unique-case-sensitive\" value={true}>Sensitive</MenuItem>\n                    <MenuItem id=\"unique-case-isensitive\" value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-unique\"\n                className={classes.button}\n                onClick={() => handleUnique()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default UniqueTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport FilterColumns from \"./Tools/FilterColumns\";\nimport FilterLines from \"./Tools/FilterLines\";\nimport RegexFilterLines from \"./Tools/RegexFilterLines\";\nimport CutLines from \"./Tools/CutLines\";\nimport Trim from \"./Tools/Trim\";\nimport RemoveExtraSpaces from \"./Tools/RemoveExtraSpaces\";\nimport Unique from \"./Tools/Unique\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ReduceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Unique\" description={\n                            <React.Fragment>\n                                <p>Filter adjacent matching lines from input, writing to output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Merge</b> matching lines are merged to the first occurrence. Unique does not detect repeated lines unless they are adjacent. You may want to sort the input first.<br /><b>Unique only</b> only print unique lines.<br /><b>Duplicate only</b> only print duplicate lines, one for each group.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Unique addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter columns\" description={\n                            <React.Fragment>\n                                <p>Removes or cuts a column from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Remove</b> removes a column from the text.<br /><b>Cut</b> cuts a column from the text.</li>\n                                    <li><b>Position - </b> sets the column position to perform the operation. Numbering starts from 1.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Filter lines\" description={\n                            <React.Fragment>\n                                <p>Removes lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> sets the content of the row to be filtered.<br /><b>Empty</b> removes all lines without content.<br /><b>White characters</b> removes all lines containing white characters like spaces, tabs, etc.<br /><b>Custom</b> allows you to define custom value to be filtered. Also makes other options available for description.</li>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column -</b> sets a column specifically for pattern search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                    <li><b>Custom content -</b> Describes custom content for detection for removal. Detection removes the whole line.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <FilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Regex filter lines\" description={\n                            <React.Fragment>\n                                <p>Removes lines from the text using <b>extended regular expression</b>.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Case -</b> specify match that is sensitive to capitalization of letters.</li>\n                                    <li><b>Column -</b> sets a column specifically for <b>regex</b> search. Text out of specified column is ignored. This option is <b>optional</b>.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns. This option is required only if <b>Column</b> option is set.</li>\n                                    <li><b>Regular expression -</b> A place to define a regular expression. This field is required.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <RegexFilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Cut lines\" description={\n                            <React.Fragment>\n                                <p>Cuts lines from the input text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> specifies tool behavior.<br /><b>Head</b> cut lines from the beginning of the text.<br /><b>Tail</b> cut lines from the end of the text.</li>\n                                    <li><b>Count - </b> sets the number of lines to be cutted.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <CutLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Remove extra spaces\" description={\n                                <React.Fragment>\n                                    <p>Removes all adjacent spaces from text and replace them with single space.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <RemoveExtraSpaces addTool={addTool} showAlert={showAlert} />\n                    </div>\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                        <ToolHeader toolname=\"Trim\" description={\n                                <React.Fragment>\n                                    <p>Removes all leading and trailing spaces on each line.</p>\n                                </React.Fragment>\n                            } \n                        />\n                        <Trim addTool={addTool} showAlert={showAlert} />\n                    </div>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ReduceTab);","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, TextField, Collapse } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexEnd: {\n        marginTop: \"16px\",\n        display: \"flex\",\n        alignItems: \"flex-end\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    collapse: {\n        width: \"100%\",\n        flex: 1,\n    },\n}));\n\nfunction InsertColumnTool(props) {\n    const classes = useStyles();\n\n    const [focused, setFocused] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleInsertColumn = () => {\n        if (content === \"\"){\n            setContentError(true);\n        }\n\n        if (position === \"\" || position <= 0) {\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"insertColumn\", content: content, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Insert column added into the pipeline.\");\n            setContent(\"\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n            setFocused(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding insert column into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <TextField\n                    id=\"insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    required={true}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"insert-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexEnd}>\n                <Collapse className={classes.collapse} in={focused} collapsedHeight={\"50px\"} >\n                    <TextField\n                        id=\"insert-column-content\"\n                        label=\"Content\"\n                        value={content}\n                        required={true}\n                        variant=\"filled\"\n                        onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                        className={classes.textField}\n                        style={{width: \"100%\"}}\n                        error={contentError === true}\n                        helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                        multiline={true}\n                        rows={10}\n                        onFocus={() => setFocused(true)}\n                        onBlur={() => content === \"\" ? setFocused(false) : null}\n                    />\n                </Collapse>\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-insert-column\"\n                    className={classes.button}\n                    onClick={() => handleInsertColumn()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default InsertColumnTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SwapColumnsTool(props) {\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(\"\");\n    const [secondPosition, setSecondPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleSwapColumns = () => {\n        if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n            setFirstPositionError(true);\n        }\n\n        if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n            setSecondPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n            props.addTool({toolname: \"swapColumns\", first: firstPosition, second: secondPosition, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Swap columns added into the pipeline.\");\n            setFirstPosition(\"\");\n            setSecondPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding swap columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-swap-columns\"\n                className={classes.button}\n                onClick={() => handleSwapColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SwapColumnsTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ConvertCaseTool(props) {\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(\"uppercase\");\n\n    const handleConvertCase = () => {\n        props.addTool({toolname: \"convertCase\", textCase: textCase});\n        props.showAlert(\"success\", \"Success: Convert case added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"convert-case-case-label\"\n                  id=\"convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem id=\"convert-case-case-uppercase\" value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem id=\"convert-case-case-lowercase\" value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-convert-case\"\n                className={classes.button}\n                onClick={() => handleConvertCase()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ConvertCaseTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SortTool(props) {\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(\"ascending\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(false);\n\n    const handleSort = () => {\n        props.addTool({toolname: \"sort\", order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n        props.showAlert(\"success\", \"Success: Sort added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"sort-order-label\">Order</InputLabel>\n                <Select\n                    labelId=\"sort-order-label\"\n                    id=\"sort-order\"\n                    className={classes.opts}\n                    value={order}\n                    onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem id=\"sort-order-ascending\" value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem id=\"sort-order-descending\" value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"sort-case-label\">Case</InputLabel>\n                <Select\n                    labelId=\"sort-case-label\"\n                    id=\"sort-case\"\n                    className={classes.opts}\n                    value={caseSensitive}\n                    onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem id=\"sort-case-sensitive\" value={true}>Sensitive</MenuItem>\n                    <MenuItem id=\"sort-case-sensitive\" value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-sort\"\n                className={classes.button}\n                onClick={() => handleSort()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SortTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReverseTool(props) {\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(\"vertical\");\n\n    const handleReverse = () => {\n        props.addTool({toolname: \"reverse\", direction: direction});\n        props.showAlert(\"success\", \"Success: Reverse added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"reverse-direction-label\"\n                  id=\"reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem id=\"reverse-direction-horizontal\" value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem id=\"reverse-direction-vertical\" value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-reverse\"\n                className={classes.button}\n                onClick={() => handleReverse()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ReverseTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"400px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction LineNumbersTool(props) {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(\"\");\n    const [variant, setVariant] = useState(\"all\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const handleLineNumbers = () => {\n        props.addTool({toolname: \"lineNumbers\", variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n        props.showAlert(\"success\", \"Success: Line numbers added into the pipeline.\");\n        setStartingNumber(\"\");\n        setDelimiter(\"\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"line-numbers-variant-label\"\n                  id=\"line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"line-numbers-variant-all\" value={\"all\"}>All lines</MenuItem>\n                    <MenuItem id=\"line-numbers-variant-nonempty\" value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-line-numbers\"\n                className={classes.button}\n                onClick={() => handleLineNumbers()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default LineNumbersTool;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport ToolHeader from \"./ToolHeader\";\nimport InsertColumn from \"./Tools/InsertColumn\";\nimport SwapColumns from \"./Tools/SwapColumns\";\nimport ConvertCase from \"./Tools/ConvertCase\";\nimport Sort from \"./Tools/Sort\";\nimport Reverse from \"./Tools/Reverse\";\nimport LineNumbers from \"./Tools/LineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ModifyTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Insert column\" description={\n                            <React.Fragment>\n                                <p>Insert column with specified <b>content</b> on given position. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Content -</b> specifies content of the new column.</li>\n                                    <li><b>Position -</b> determines the position of the new column. Numbering starts from 1.</li>\n                                    <li><b>Delimiter - </b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <InsertColumn addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Sort\" description={\n                            <React.Fragment>\n                                <p>Sort lines of text. The sort is made on an <b>ASCII</b> basis character by character from the beginning of line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Order -</b> determines the order of sort.<br /><b>Ascending</b> is arranged from smallest to the largest value.<br /><b>Descending</b> is arranged from the largest value to the smallest.</li>\n                                    <li><b>Case -</b> specify if sort is ignoring capitalization of letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Sort addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Swap columns\" description={\n                            <React.Fragment>\n                                <p>Swap columns in text on given positions. Numbering of positions starts from 1. The rest of the text remains unchanged.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>First position -</b> specifies the location of the first column.</li>\n                                    <li><b>Second position -</b> specifies the location of the second column.</li>\n                                    <li><b>Delimiter -</b> sets separator between cloumns.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <SwapColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Line numbers\" description={\n                            <React.Fragment>\n                                <p>Adds a line number to the begging of the line.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> determines on which lines the numbers will be added.<br /><b>Non empty</b> adds to all non-empty lines.<br /><b>All</b> add numbers to all lines.</li>\n                                    <li><b>Starting number -</b> defines the starting number. This number is increasing by each next line. Default value is 1 if not specified.</li>\n                                    <li><b>Delimiter -</b> sets content to be added after line number. Default is space if not specified.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <LineNumbers addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Reverse\" description={\n                            <React.Fragment>\n                                <p>Reverse text from the inptut and prints to the output.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Variant -</b> sets the direction of rotation.<br /><b>Horizontal</b> each characters in line is reversed (from left to right).<br /><b>Vertical</b> reverse the order of lines (from top to bottom).</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <Reverse addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <ToolHeader toolname=\"Convert case\" description={\n                            <React.Fragment>\n                                <p>Convert case of all letters in text.</p>\n                                <h4>Options:</h4>\n                                <ul>\n                                    <li><b>Case -</b> defines case of letters.<br /><b>Upper case</b> converts a text to uppercase letters.<br /><b>Lower case</b> converts a text to lowercase letters.</li>\n                                </ul>\n                            </React.Fragment>\n                        } \n                    />\n                    <ConvertCase addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ModifyTab);","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { Search, Build, FindReplace, RemoveCircleOutline } from \"@material-ui/icons\";\nimport FindTab from \"./Tabs/FindTab\";\nimport ReplaceTab from \"./Tabs/ReplaceTab\";\nimport ReduceTab from \"./Tabs/ReduceTab\";\nimport ModifyTab from \"./Tabs/ModifyTab\";\n\n// Inspirovano: https://material-ui.com/components/tabs/\nfunction TabPanel(props) {\n  \tconst { children, value, index, ...other } = props;\n\n  \treturn (\n  \t  \t<Typography\n  \t  \t  \tcomponent=\"div\"\n  \t  \t  \trole=\"tabpanel\"\n  \t  \t  \thidden={value !== index}\n  \t  \t  \tid={`scrollable-auto-tabpanel-${index}`}\n  \t  \t  \taria-labelledby={`scrollable-auto-tab-${index}`}\n  \t  \t  \t{...other}\n  \t  \t>\n  \t    \t<Box p={3}>{children}</Box>\n  \t  </Typography>\n  \t);\n}\n\nTabPanel.propTypes = {\n  \tchildren: PropTypes.node,\n  \tindex: PropTypes.any.isRequired,\n  \tvalue: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  \treturn {\n  \t  \tid: `scrollable-auto-tab-${index}`,\n  \t  \t'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  \t};\n}\n\nconst theme = createMuiTheme({\n  \tpalette: {\n  \t  \tprimary: {\n  \t  \t  \tmain: lightBlue[600],\n  \t  \t  \tlight: lightBlue[300],\n  \t  \t  \tdark: lightBlue[900],\n  \t  \t},\n  \t  \ttype: 'dark',\n  \t}\n});\n\nconst useStyles = makeStyles(theme => ({\n  \troot: {\n  \t  \tflexGrow: 1,\n  \t  \tmarginTop: '20px',\n  \t  \tmarginBottom: '20px',\n  \t  \twidth: '95%',\n  \t  \tmarginLeft: 'auto',\n  \t  \tmarginRight: 'auto',\n  \t  \tbackgroundColor: 'rgb(50,50,50)',\n  \t  \tcolor: 'white',\n  \t},\n  \tfullWidth: {\n  \t  \twidth: \"100% !important\",\n  \t},\n}));\n\nconst ToolTabs = React.memo(({ showAlert, addTool }) => {\n  \tconst classes = useStyles();\n  \tconst [value, setValue] = React.useState(0);\n\n  \tconst fullWidth = useMediaQuery(theme.breakpoints.down('sm'));\n\n  \tconst handleChange = (event, newValue) => {\n  \t  \tsetValue(newValue);\n  \t};\n\n  \treturn (\n    \t<MuiThemeProvider theme={theme}>\n    \t  \t<div className={`${classes.root} ${fullWidth && classes.fullWidth}`}>\n    \t  \t  \t<AppBar position=\"static\" color=\"default\">\n    \t  \t  \t  \t<Tabs\n    \t  \t  \t  \t  \tvalue={value}\n    \t  \t  \t  \t  \tonChange={handleChange}\n    \t  \t  \t  \t  \tindicatorColor=\"primary\"\n    \t  \t  \t  \t  \ttextColor=\"primary\"\n    \t  \t  \t  \t  \tvariant=\"fullWidth\"\n    \t  \t  \t  \t  \taria-label=\"tabs\"\n    \t  \t  \t  \t  \tscrollButtons=\"auto\"\n    \t  \t  \t  \t  \tcentered\n    \t  \t  \t  \t>\n    \t  \t  \t    \t<Tab icon={<Search />} label=\"Find\" {...a11yProps(0)} />\n    \t  \t  \t    \t<Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n    \t  \t  \t    \t<Tab icon={<RemoveCircleOutline />} label=\"Reduce\" {...a11yProps(2)} />\n    \t  \t  \t    \t<Tab icon={<Build />} label=\"Modify\" {...a11yProps(3)} />\n    \t  \t  \t  \t</Tabs>\n    \t  \t  \t</AppBar>\n    \t  \t  \t<TabPanel theme={theme} value={value} index={0}>\n    \t  \t  \t  \t<FindTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={1}>\n    \t  \t  \t  \t<ReplaceTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={2}>\n    \t  \t  \t  \t<ReduceTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel>\n    \t  \t  \t<TabPanel value={value} index={3}>\n    \t  \t  \t  \t<ModifyTab showAlert={showAlert} addTool={addTool} />\n    \t  \t  \t</TabPanel> \n    \t  \t</div>\n    \t</MuiThemeProvider>\n  \t);\n});\n\nexport default ToolTabs;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(props.tool.expression);\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [matchInColumn, setMatchInColumn] = useState(props.tool.inColumn);\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (matchFind === \"\"){\n                setMatchFindError(true);\n            }\n    \n            if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n                setMatchDelimiterError(true);\n            }\n    \n            if (matchInColumn !== \"\" && matchInColumn <= 0) {\n                setMatchColumnError(true);\n            }\n            \n            if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n                props.updateTool({...props.tool, expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-match-occurence-label\"\n                      id=\"edit-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-match-occurence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"edit-match-occurence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-match-case-label\"\n                      id=\"edit-match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-match-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-match-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-match-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={matchFind}\n                required={true}\n                onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                error={matchFindError === true}\n                helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexMatch = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(props.tool.expression);\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(props.tool.inColumn);\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexMatchFind);\n            } \n            catch (e) {\n                setRegexMatchFindError(true);\n                validExpression = false;\n            }\n\n            if (regexMatchFind === \"\"){\n                setRegexMatchFindError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n                setRegexMatchDelimiterError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n                setRegexMatchColumnError(true);\n            }\n            \n            if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-occurence-label\"\n                      id=\"edit-regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-regex-match-occurence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"edit-regex-match-occurence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-case-label\"\n                      id=\"edit-regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-regex-match-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-regex-match-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-match-find\"\n                label=\"Regular expression\"\n                className={classes.textField}\n                value={regexMatchFind}\n                required={true}\n                onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                error={regexMatchFindError === true}\n                helperText={regexMatchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexMatch;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditReplace = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(props.tool.find);\n    const [replaceReplace, setReplaceReplace] = useState(props.tool.replace);\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [replaceInColumn, setReplaceInColumn] = useState(props.tool.inColumn);\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (replaceFind === \"\"){\n                setReplaceFindError(true);\n            }\n    \n            if (replaceFind === replaceReplace && replaceFind !== \"\") {\n                setReplaceReplaceError(true);\n            }\n    \n            if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n                setReplaceDelimiterError(true);\n            }\n    \n            if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n                setReplaceColumnError(true);\n            }\n    \n            if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n                props.updateTool({...props.tool, find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-occurence-label\"\n                      id=\"edit-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-replace-occurence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"edit-replace-occurence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-case-label\"\n                      id=\"edit-replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-replace-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-replace-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={replaceFind}\n                required={true}\n                onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                error={replaceFindError === true}\n                helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={replaceReplace}\n                onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                error={replaceReplaceError === true}\n                helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditReplace;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexReplace = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(props.tool.find);\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(props.tool.replace);\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(props.tool.inColumn);\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexReplaceFind);\n            } \n            catch (e) {\n                setRegexReplaceFindError(true);\n                validExpression = false;\n            }\n\n            if (regexReplaceFind === \"\"){\n                setRegexReplaceFindError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n                setRegexReplaceDelimiterError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n                setRegexReplaceColumnError(true);\n            }\n\n            if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-occurence-label\"\n                      id=\"edit-regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-regex-replace-occurence-first\" value={\"first\"}>First</MenuItem>\n                        <MenuItem id=\"edit-regex-replace-occurence-all\" value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-case-label\"\n                      id=\"edit-regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-regex-replace-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-regex-replace-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={regexReplaceFind}\n                required={true}\n                onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                error={regexReplaceFindError === true}\n                helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-regex-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={regexReplaceReplace}\n                onChange={event => setRegexReplaceReplace(event.target.value)}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexReplace;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditCompare = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(props.tool.value);\n    const [comparator, setComparator] = useState(props.tool.comparator)\n    const [inColumn, setInColumn] = useState(props.tool.inColumn);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {      \n            if (compareValue === \"\"){\n                setValueError(true);\n            }\n    \n            if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (inColumn !== \"\" && inColumn <= 0) {\n                setInColumnError(true);\n            }\n    \n            if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n                props.updateTool({...props.tool, value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"edit-compare-comparator-label\"\n                      id=\"edit-compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-compare-comparator-gt\" value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem id=\"edit-compare-comparator-ge\" value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem id=\"edit-compare-comparator-lt\" value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem id=\"edit-compare-comparator-le\" value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem id=\"edit-compare-comparator-eq\" value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-compare-value\"\n                label=\"Compare value\"\n                value={compareValue}\n                required={true}\n                onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                className={classes.textField}\n                error={valueError === true}\n                helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCompare;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditFilterColumns = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (position === \"\" || position <= 0){\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, variant: variant, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-filter-columns-variant-label\"\n                  id=\"edit-filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"edit-filter-columns-variant-remove\" value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem id=\"edit-filter-columns-variant-cut\" value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterColumns;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textFieldFW: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n}));\n\nconst EditFilterLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [column, setColumn] = useState(props.tool.column);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n    const [customContent, setCustomContent] = useState(props.tool.customContent);\n\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n    const [customContentError, setCustomContentError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"custom\" && customContent === \"\"){\n                setCustomContentError(true);\n            }\n    \n            if (content === \"custom\" && (column !== \"\" && delimiter === \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (content === \"custom\" && column !== \"\" && column <= 0) {\n                setColumnError(true);\n            }\n    \n            if (content === \"empty\" || content === \"whiteChars\" || (content === \"custom\" && customContent !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\")))) {\n                props.updateTool({...props.tool, content: content, casesensitive: caseSensitive, column: column, delimiter: delimiter, customContent: customContent});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-filter-lines-content-label\">Content</InputLabel>\n                    <Select\n                      labelId=\"edit-filter-lines-content-label\"\n                      id=\"edit-filter-lines-content\"\n                      className={classes.opts}\n                      value={content}\n                      onChange={(event) => setContent(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-filter-lines-content-empty\" value={\"empty\"}>Empty</MenuItem>\n                        <MenuItem id=\"edit-filter-lines-content-whitechars\" value={\"whiteChars\"}>White characters</MenuItem>\n                        <MenuItem id=\"edit-filter-lines-content-custom\" value={\"custom\"}>Custom</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-filter-lines-case-label\"\n                      id=\"edit-filter-lines-case\"\n                      disabled={content !== \"custom\"}\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-filter-lines-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-filter-lines-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-filter-lines-column\"\n                    label=\"Column\"\n                    disabled={content !== \"custom\"}\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.textField}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-filter-lines-delimiter\"\n                    label=\"Delimiter\"\n                    disabled={content !== \"custom\"}\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.textField}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"edit-filter-lines-custom-content\"\n                    label=\"Custom content\"\n                    disabled={content !== \"custom\"}\n                    value={customContent}\n                    required={content === \"custom\"}\n                    onChange={event => `${setCustomContent(event.target.value)} ${setCustomContentError(false)}`}\n                    className={classes.textFieldFW}\n                    error={customContentError === true}\n                    helperText={customContentError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterLines;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexFilterLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [expression, setExpression] = useState(props.tool.expression);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [column, setColumn] = useState(props.tool.column);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [expressionError, setExpressionError] = useState(false);\n    const [columnError, setColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(expression);\n            } \n            catch (e) {\n                setExpressionError(true);\n                validExpression = false;\n            }\n\n            if (expression === \"\"){\n                setExpressionError(true);\n            }\n    \n            if (column !== \"\" && delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (column !== \"\" && column <= 0) {\n                setColumnError(true);\n            }\n            \n            if (validExpression === true && expression !== \"\" && (column === \"\" || (column > 0 && delimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: expression, casesensitive: caseSensitive, column: column, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-filter-lines-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-filter-lines-case-label\"\n                      id=\"edit-regex-filter-lines-case\"\n                      className={classes.opts}\n                      value={caseSensitive}\n                      onChange={(event) => setCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem id=\"edit-regex-filter-lines-case-sensitive\" value={true}>Sensitive</MenuItem>\n                        <MenuItem id=\"edit-regex-filter-lines-case-isensitive\" value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-filter-lines-in-column\"\n                    label=\"Column\"\n                    value={column}\n                    onChange={event => `${setColumn(event.target.value)} ${setColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={columnError === true}\n                    helperText={columnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-filter-lines-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={column === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-filter-lines-expression\"\n                label=\"Regular expression\"\n                value={expression}\n                required={true}\n                onChange={event => `${setExpression(event.target.value)} ${setExpressionError(false)}`}\n                className={classes.textField}\n                error={expressionError === true}\n                helperText={expressionError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexFilterLines;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n    },\n}));\n\nconst EditCutLines = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [count, setCount] = useState(props.tool.count);\n\n    const [countError, setCountError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (count === \"\" || count <= 0) {\n                setCountError(true);\n            }\n            if (count !== \"\" && count > 0) {\n                props.updateTool({...props.tool, variant: variant, count: count});\n                props.close();\n            }     \n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"edit-cut-lines-variant-label\"\n                    id=\"edit-cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"edit-cut-lines-variant-head\" value={\"head\"}>Head</MenuItem>\n                    <MenuItem id=\"edit-cut-lines-variant-tail\" value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCutLines;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditInsertColumn = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"\"){\n                setContentError(true);\n            }\n    \n            if (position === \"\" || position <= 0) {\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, content: content, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"edit-insert-column-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                error={positionError === true}\n                helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-insert-column-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={position === \"\" ? false : true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-insert-column-content\"\n                label=\"Content\"\n                value={content}\n                required={true}\n                variant=\"filled\"\n                onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                className={classes.textField}\n                style={{width: \"100%\", marginTop: \"16px\"}}\n                error={contentError === true}\n                helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                multiline={true}\n                rows={10}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditInsertColumn;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditSwapColumns = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(props.tool.first);\n    const [secondPosition, setSecondPosition] = useState(props.tool.second);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n                setFirstPositionError(true);\n            }\n\n            if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n                setSecondPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n                props.updateTool({...props.tool, first: firstPosition, second: secondPosition, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"edit-swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditSwapColumns;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditConvertCase = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(props.tool.textCase);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, textCase: textCase});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-convert-case-case-label\"\n                  id=\"edit-convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem id=\"edit-convert-case-case-uppercase\" value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem id=\"edit-convert-case-case-lowercase\" value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditConvertCase;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n    flexCenter: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditSort = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(props.tool.order);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(props.tool.ignoreLeadingBlanks);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n            props.close();\n        }\n    }));\n\n    return (\n        <div className={classes.flexCenter}>\n            <FormControl>\n                <InputLabel id=\"edit-sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"edit-sort-order-label\"\n                  id=\"edit-sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem id=\"edit-sort-order-ascending\" value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem id=\"edit-sort-order-descending\" value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-sort-case-label\"\n                  id=\"edit-sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem id=\"edit-sort-case-sensitive\" value={true}>Sensitive</MenuItem>\n                    <MenuItem id=\"edit-sort-case-isensitive\" value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"edit-sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n        </div>\n    );\n});\n\nexport default EditSort;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditReverse = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(props.tool.direction);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, direction: direction});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"edit-reverse-direction-label\"\n                  id=\"edit-reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem id=\"edit-reverse-direction-horizontal\" value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem id=\"edit-reverse-direction-vertical\" value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditReverse;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditUnique = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [countPrefix, setCountPrefix] = useState(props.tool.countPrefix);\n    const [countDisabled, setCountDisabled] = useState(props.tool.variant === \"merge\" ? false : true);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n            props.close();\n        }\n    }));\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-unique-variant-label\"\n                  id=\"edit-unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem id=\"edit-unique-variant-merge\" value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem id=\"edit-unique-variant-unique\" value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem id=\"edit-unique-variant-duplicate\" value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-unique-case-label\"\n                  id=\"edit-unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem id=\"edit-unique-case-sensitive\" value={true}>Sensitive</MenuItem>\n                    <MenuItem id=\"edit-unique-case-isensitive\" value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\", flex: 1}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"edit-unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditUnique;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditLineNumbers = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [startingNumber, setStartingNumber] = useState(props.tool.startingNumber);\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, startingNumber: startingNumber === \"\" ? \"1\" : startingNumber, delimiter: delimiter === \"\" ? \" \" : delimiter});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-line-numbers-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-line-numbers-variant-label\"\n                  id=\"edit-line-numbers-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem id=\"edit-line-numbers-variant-all\" value={\"all\"}>All lines</MenuItem>\n                    <MenuItem id=\"edit-line-numbers-variant-nonempty\" value={\"nonempty\"}>Nonempty lines</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"line-numbers-starting-number\"\n                label=\"Starting number\"\n                placeholder=\"Default 1\"\n                value={startingNumber}\n                onChange={event => setStartingNumber(event.target.value)}\n                type=\"number\"\n                className={classes.opts}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                id=\"edit-line-numbers-delimiter\"\n                label=\"Delimiter\"\n                placeholder=\"Default space\"\n                value={delimiter}\n                onChange={event => setDelimiter(event.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditLineNumbers;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useRef } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, useMediaQuery, Tooltip, makeStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Done, Close, Edit } from \"@material-ui/icons\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport EditMatch from \"./Tools/EditMatch\";\nimport EditRegexMatch from \"./Tools/EditRegexMatch\";\nimport EditReplace from \"./Tools/EditReplace\";\nimport EditRegexReplace from \"./Tools/EditRegexReplace\";\nimport EditCompare from \"./Tools/EditCompare\";\nimport EditFilterColumns from \"./Tools/EditFilterColumns\";\nimport EditFilterLines from \"./Tools/EditFilterLines\";\nimport EditRegexFilterLines from \"./Tools/EditRegexFilterLines\";\nimport EditCutLines from \"./Tools/EditCutLines\";\nimport EditInsertColumn from \"./Tools/EditInsertColumn\";\nimport EditSwapColumns from \"./Tools/EditSwapColumns\";\nimport EditConvertCase from \"./Tools/EditConvertCase\";\nimport EditSort from \"./Tools/EditSort\";\nimport EditReverse from \"./Tools/EditReverse\";\nimport EditUnique from \"./Tools/EditUnique\";\nimport EditLineNumbers from \"./Tools/EditLineNumbers\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        borderBottom: \"solid 1px grey\",\n        marginBottom: \"15px\",\n        paddingBottom: \"8px\",\n        color: \"#039be5\",\n    },\n    titleIcon: {\n        marginRight: \"15px\",\n        color: \"#039be5\",\n    },\n    dialogActions: {\n        paddingTop: \"0px\",\n    },\n    confirmIcon: {\n        color: \"#43a047\",\n    },\n    closeIcon: {\n        color: \"red\",\n    },\n}));\n\nfunction EditDialog(props) {\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const toolRef = useRef();\n\n    const mapToolname = (tool) => {\n        switch (tool.toolname) {\n            case \"match\": return \"Match\";\n            case \"regexMatch\": return \"Regex match\";\n            case \"replace\": return \"Replace\";\n            case \"regexReplace\": return \"Regex replace\";\n            case \"compare\": return \"Compare\";\n            case \"filterColumns\": return \"Filter columns\";\n            case \"filterLines\": return \"Filter lines\";\n            case \"regexFilterLines\": return \"Regex filter lines\";\n            case \"cutLines\": return \"Cut lines\";\n            case \"insertColumn\": return \"Insert column\";\n            case \"swapColumns\": return \"Swap columns\";\n            case \"convertCase\": return \"Convert case\";\n            case \"sort\": return \"Sort\";\n            case \"reverse\": return \"Reverse\";\n            case \"unique\": return \"Unique\";\n            case \"lineNumbers\": return \"Line numbers\";\n            default: return;\n        }\n    };\n\n    /**\n     * Vypis html kontextu podle zvoleneho nastroje\n    */\n    const mapToolContent = (tool) => {\n        switch (tool.toolname) {\n            case \"match\":\n                return (\n                    <EditMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexMatch\":\n                return (\n                    <EditRegexMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"replace\":\n                return (\n                    <EditReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexReplace\":\n                return (\n                    <EditRegexReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"compare\":\n                return (\n                    <EditCompare ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterColumns\":\n                return (\n                    <EditFilterColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterLines\":\n                return (\n                    <EditFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexFilterLines\":\n                return (\n                    <EditRegexFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"cutLines\":\n                return (\n                    <EditCutLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"insertColumn\":\n                return (\n                    <EditInsertColumn ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"swapColumns\":\n                return (\n                    <EditSwapColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"convertCase\":\n                return (\n                    <EditConvertCase ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"sort\":\n                return (\n                    <EditSort ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"reverse\":\n                return (\n                    <EditReverse ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"unique\":\n                return (\n                    <EditUnique ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"lineNumbers\":\n                return (\n                    <EditLineNumbers ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            default:\n                return;\n        }\n    };\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                <Edit className={classes.titleIcon} fontSize=\"large\" />\n                {mapToolname(props.tool)}\n            </DialogTitle>\n            <DialogContent>\n                {mapToolContent(props.tool)}\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <Tooltip className={classes.tooltip} title=\"Close\">\n                    <IconButton id=\"close-edit\" className={classes.closeIcon} onClick={() => props.close()}>\n                        <Close fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Confirm\">\n                    <IconButton id=\"confirm-edit\" className={classes.confirmIcon} onClick={() => toolRef.current.handleUpdate()}>\n                        <Done fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n            </DialogActions>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default EditDialog;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, useRef } from \"react\";\nimport { List, ListItem, makeStyles, IconButton, Menu, MenuItem, Tooltip, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Settings, Delete, Visibility, VisibilityOff, Edit, MoreVert } from \"@material-ui/icons\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport EditDialog from \"./Edits/EditDialog\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport { Resizable } from \"re-resizable\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        //width: \"95%\",\n        minWidth: \"95%\",\n        maxWidth: \"95%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        marginTop: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"rgb(50,50,50)\",\n        color: \"white\",\n        borderBottom: \"1px solid rgb(30, 30, 30)\",\n    },\n    fullWidth: {\n        width: \"100% !important\",\n        minWidth: \"100% !important\",\n        maxWidth: \"100% !important\",\n    },\n    title: {\n        height: \"22px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        fontSize: \"15px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    listItem: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n    },\n    itemDeactivated: {\n        color: \"grey !important\",\n    },\n    content: {\n        //height: \"208px\",\n        overflow: \"auto\",\n        flexGrow: \"1\",\n    },\n    toolName: {\n        color: \"#ff5d00\",\n        fontWeight: \"bold\",\n        marginRight: \"8px\",\n    },\n    toolText: {\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\",\n        height: \"100%\",\n        width: \"100%\",\n        cursor: \"grab\",\n    },\n    violetWord: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n    },\n    lightGreenWord: {\n        color: \"#a4ad00\",\n        fontWeight: \"bold\",\n    },\n    greenWord: {\n        color: \"#22ba09\",\n        fontWeight: \"bold\",\n    },\n    blueWord: {\n        color: \"#089dcf\",\n        fontWeight: \"bold\",\n    },\n    lightBlueWord: {\n        color: \"#0fbbff\",\n        fontWeight: \"bold\",\n    },\n    yellowWord: {\n        color: \"#ffcc00\",\n        fontWeight: \"bold\",\n    },\n    darkYellowWord: {\n        color: \"#ffb700\",\n        fontWeight: \"bold\",\n    },\n    redWord: {\n        color: \"#bd0032\",\n        fontWeight: \"bold\",\n    },\n    lightRedWord: {\n        color: \"#ff0a68\",\n        fontWeight: \"bold\",\n    },\n    greenBlueWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    turquoiseWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    lightTurquoiseWord: {\n        color: \"#14db78\",\n        fontWeight: \"bold\",\n    },\n    listIcon: {\n        marginRight: \"15px\",\n        color: \"#e0e0e0\",\n    },\n    marginLR: {\n        marginLeft: \"8px\",\n        marginRight: \"8px\",\n    },\n}));\n\nfunction mapComparator(comparator) {\n    switch (comparator) {\n        case \"gt\": return \"greater than\";\n        case \"ge\": return \"greater equal\";\n        case \"lt\": return \"less than\";\n        case \"le\": return \"less equal\";\n        case \"eq\": return \"equal\";\n        default: return \"\";\n    }\n};\n\nfunction mapCase(textCase) {\n    switch (textCase) {\n        case \"uppercase\": return \"upper case\";\n        case \"lowercase\": return \"lower case\";\n        default: return \"\";\n    }\n}\n\nfunction mapFilterLinesContent(content) {\n    switch (content) {\n        case \"empty\":\n            return \"empty content\";\n        case \"whiteChars\":\n            return \"white characters\";\n        case \"custom\":\n            return \"custom content\";\n        default:\n            return \"\";\n    }\n}\n\nfunction mapUniqueVariant(variant) {\n    switch (variant) {\n        case \"merge\":\n            return \"merge\";\n        case \"unique\":\n            return \"unique only\";\n        case \"duplicate\":\n            return \"duplicate only\";\n        default:\n            return \"\";\n    }\n}\n\nfunction isEditable(tool) {\n    const nonEditable = [\"trim\", \"removeExtraSpaces\"];\n    \n    return nonEditable.includes(tool.toolname) ? false : true;\n}\n\nconst ToolList = React.memo(({ tools, removeTool, reactiveTool, updateTool, sort }) => {\n    const classes = useStyles();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const theme = useTheme();   // useMediaQuery\n    const fullWidth = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const toolToEdit = useRef({});\n\n    const openEdit = (tool) => {\n        toolToEdit.current = tool;\n        setOpenEditDialog(true);\n    }\n\n    const mapTool = (tool) => {\n        switch (tool.toolname) {\n            case \"regexMatch\":\n            case \"match\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"match\" ?  \"Match\" :\"Regex match\"}</span> \n                        <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"regexReplace\":\n            case \"replace\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"replace\" ?  \"Replace\" : \"Regex replace\"}</span>\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.find}\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>with</span> \n                        {tool.replace}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"compare\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Compare</span>\n                        <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{mapComparator(tool.comparator)}</span>\n                        {tool.value}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"filterColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter columns</span>\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>\n                            {tool.variant + \" \"}\n                            at\n                        </span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"filterLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter lines</span>\n                        <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>with {tool.content === \"custom\" && (tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \")}{mapFilterLinesContent(tool.content)}</span>\n                        {tool.content === \"custom\" && <span className={`${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>\n                            {tool.customContent}\n                            {tool.column === \"\" ? \"\" : \n                                <React.Fragment>\n                                    <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                    {tool.column + \".\"}\n                                    <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                    {tool.delimiter}\n                                </React.Fragment>\n                            }\n                        </span>}\n                    </React.Fragment>\n                );\n            case \"regexFilterLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Regex filter lines</span> \n                        <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.casesensitive === true ? \"case sensitive\" : \"case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.column === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.column + \".\"}\n                                <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"cutLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Cut lines</span>\n                        {tool.count}\n                        <span className={`${classes.lightGreenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>{\n                            tool.variant === \"head\" ? \"from the beggining\" : \"from the end\"\n                        }</span>\n                    </React.Fragment>\n                );\n            case \"insertColumn\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Insert column</span>\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>starting with</span>\n                        {tool.content.split('\\n')[0] + \"...\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>at</span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"swapColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Swap columns</span>\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>at</span>\n                        {tool.first + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>and</span>\n                        {tool.second + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"convertCase\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Convert case</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>to</span>\n                        {mapCase(tool.textCase)}\n                    </React.Fragment>\n                );\n            case \"trim\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Trim</span>\n                    </React.Fragment>\n                );\n            case \"removeExtraSpaces\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Remove extra spaces</span>\n                    </React.Fragment>\n                );\n            case \"sort\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Sort</span>\n                        <span className={`${classes.lightBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.order}\n                            {tool.casesensitive === true ? \" case sensitive \" : \" case isensitive \"}\n                            {tool.ignoreLeadingBlanks === true ? \" ignoring leading blanks\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"reverse\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Reverse</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`}>{tool.direction}</span>\n                    </React.Fragment>\n                );\n            case \"unique\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Unique</span>\n                        <span className={`${classes.lightRedWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \"}\n                            {mapUniqueVariant(tool.variant)}\n                            {tool.variant === \"merge\" && tool.countPrefix === true ? \" with count prefix\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"lineNumbers\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Line numbers</span>\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.variant + \" starting with\"}</span>\n                        {tool.startingNumber}\n                        <span className={`${classes.darkYellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>after that</span>\n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            default:\n                return;\n        }\n    }\n\n    const DragHandle = SortableHandle(({tool}) => (\n        <div className={classes.toolText}>\n          {mapTool(tool)}\n        </div>\n    ));\n\n    const SortableItem = SortableElement(({ tool }) => (\n        <ListItem key={tool.id} ContainerComponent=\"li\" divider={true} className={`${classes.listItem} ${!(tool.active) && classes.itemDeactivated}`}>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {properties => (\n                    <React.Fragment>\n                        <Tooltip title=\"Properties\">\n                            <IconButton \n                                className={classes.listIcon} \n                                variant=\"contained\" \n                                size=\"small\" \n                                {...bindTrigger(properties)}\n                            >\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu {...bindMenu(properties)}>\n                            {isEditable(tool) &&\n                                <MenuItem onClick={() => openEdit(tool)}>\n                                    <Edit className={classes.listIcon} /> Edit\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={() => reactiveTool(tool)}>\n                                {tool.active ? \n                                    (<React.Fragment> <VisibilityOff className={classes.listIcon} /> Deactivate </React.Fragment>) : \n                                    (<React.Fragment> <Visibility className={classes.listIcon} /> Activate </React.Fragment>)}\n                            </MenuItem>\n                            <MenuItem onClick={() => removeTool(tool)}>\n                                <Delete className={classes.listIcon} /> Delete\n                            </MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n            <DragHandle tool={tool}/>\n        </ListItem>\n    ));\n\n    const SortableListContainer = SortableContainer(({ tools }) => (\n        <List component=\"ul\" className={classes.list}>\n                {tools.map((tool, index) => (\n                    <SortableItem key={tool.id} index={index} tool={tool} />\n                ))}\n        </List>\n    ));\n\n    return (\n        <Resizable \n            className={`${classes.root} ${fullWidth && classes.fullWidth}`}\n            defaultSize={{ width: \"95%\", height: \"250px\" }}\n            minHeight={100}\n            enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n        >\n            <div className={classes.title}>\n                <Settings style={{fontSize: \"22px\", paddingLeft: \"5px\"}}/>\n                <div className={classes.titleLabel}>Pipeline</div>\n                <div />\n            </div>\n            <div className={classes.content}>\n                <SortableListContainer\n                    tools={tools}\n                    lockAxis='y'\n                    useDragHandle={true}\n                    onSortEnd={sort}\n                    helperClass={\"SortableHelper\"}\n                />\n            </div>\n            {openEditDialog && \n                <EditDialog \n                    open={openEditDialog}\n                    close={() => setOpenEditDialog(false)}\n                    tool={toolToEdit.current}\n                    updateTool={updateTool}\n            />}\n        </Resizable>\n    );\n});\n\nexport default ToolList;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nconst variantIcon = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: blue[500],\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 25,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n  \nfunction CustomSnackbarContent(props) {\n    const classes = useStyles();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            message={\n                <span id=\"message-id\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                \n                    onClick={onClose}\n                >\n                    <Close />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n  \nCustomSnackbarContent.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nconst Alerts = React.memo(forwardRef(({ prop }, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n    const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n    const snackbarQueue = useRef([]);\n\n    useImperativeHandle(ref, () => ({\n        openSnackbar(variant, message) {\n            snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n        \n            if (showSnackbar) {\n                setShowSnackbar(false);\n            }\n            else {\n                processSnackbarQueue();\n            }\n          }\n    }));\n\n    const processSnackbarQueue = () => {\n        if (snackbarQueue.current.length > 0) {\n            setSnackbarInfo(snackbarQueue.current.shift());\n            setShowSnackbar(true);\n        }\n    };\n    \n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setShowSnackbar(false);\n    };\n    \n    const handleExited = () => {\n        processSnackbarQueue();\n    };\n\n    return (\n        <Snackbar\n            key={snackbarInfo ? snackbarInfo.key : undefined}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            open={showSnackbar}\n            autoHideDuration={2000}\n            onClose={closeSnackbar}\n            onExited={handleExited}\n            ContentProps={{ 'aria-describedby': 'message-id' }} \n        >\n            <CustomSnackbarContent\n                message={snackbarInfo ? snackbarInfo.message : undefined}\n                variant={snackbarInfo ? snackbarInfo.variant : undefined}\n                onClose={closeSnackbar}\n            />\n        </Snackbar>\n    );\n  }));\n\n  export default Alerts;","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nlet lastID = 0;\n\nexport default function() {\n    lastID++;\n    return lastID;\n}","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\n/**\n * https://medium.com/prolanceer/optimizing-react-app-performance-using-web-workers-79266afd4a7\n */\nexport default class WebWorker {\n    constructor (worker) {\n        const code = worker.toString();\n        const blob = new Blob(['('+code+')()']);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nexport default () => {\n\n    // https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript\n    function regexEscape(regex) {\n        return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n      \n    /**\n     * Replace nastroj\n     */\n    function getMatchOptions(tool) {\n      if (tool.occurrence === \"all\") {\n          return tool.casesensitive === true ? \"g\" : \"gi\";\n      }\n      else {\n          return tool.casesensitive === true ? \"\" : \"i\";\n      }\n    }\n    \n    function replaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {\n                for (var i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else { \n                for (var z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function replaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    text[i].data = text[i].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (var x = 0; x < text.length; x++) {\n                    if (text[x].data === null) {\n                        continue;\n                    }\n\n                    if (text[x].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[x].data = text[x].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (var z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    function regexReplaceAll(lines, tool) {\n        var option = tool.casesensitive ? \"g\" : \"gi\";\n        var tmp = \"\";\n\n        for (let i = 0; i < lines.length; i++) {\n            tmp = lines[i].match(new RegExp(tool.find, option));\n\n            if (tmp === null) {\n                continue;\n            }\n\n            var specificMatch = true;\n            for (let j = 0; j < tmp.length; j++) {\n              if (tmp[j] === \"\" && tmp.length > 1) {\n                specificMatch = false;\n                break;\n              }\n            }\n\n            if (specificMatch === true) {\n                lines[i] = lines[i].replace(new RegExp(tool.find, option), tool.replace);\n                continue;\n            }\n            \n            var fullMatch = tmp[0].length === lines[i].length ? true : false;\n            if (fullMatch === true) {\n              lines[i] = tool.replace;\n            }\n            else {\n                lines[i] = lines[i].split(new RegExp(tool.find, option));\n                var firstChar = lines[i][0] === \"\" ? \"\" : tool.replace;\n                var lastChar = lines[i][lines[i].length - 1] === \"\" ? \"\" : tool.replace;\n                lines[i] = firstChar + lines[i].join(tool.replace) + lastChar;\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Regex replace nastroj\n     */\n    function regexReplaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var splitedText = text.split('\\n');\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                /*for (var y = 0; y < splitedText.length; y++) {  // TODO: otestovat na fullmatch\n                    splitedText[y] = splitedText[y].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return splitedText.join('\\n');*/\n                return regexReplaceAll(splitedText, tool).join('\\n');\n            }\n            else {                              // Pouze prvni vyskyt\n                for (let i = 0; i < splitedText.length; i++) {\n                    if (splitedText[i].match(new RegExp(tool.find, option)) !== null) {\n                        splitedText[i] = splitedText[i].replace(new RegExp(tool.find, option), tool.replace);\n                        return splitedText.join('\\n');\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                    \n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = regexReplaceAll([columns[tool.inColumn - 1]], tool);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else {                              // Prvni vyskyt\n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n                    \n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function regexReplaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = regexReplaceAll([text[i].data], tool)[0];\n                    //text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[i].data = text[i].data.replace(new RegExp(tool.find, option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n\n                    columns = text[j].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n\n                    columns = text[z].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn && \"\".match(new RegExp(tool.find, option))) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Match nastroj\n     */\n    function matchTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            text = text.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option));\n            return text === null ? \"\" : text.join('\\n');\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n            var result = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            result += splitedText[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            return splitedText[z];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function matchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {        // Vsechny radky\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {  // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                    else {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                        else {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                            return text;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Regex match nastroj\n     */\n    function regexMatchTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var lines = text.split('\\n');\n        var result = \"\";\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else {\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n                \n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n              \n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function regexMatchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                    if (columns.length < tool.inColumn) {\n                        columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                    }\n                    if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    };\n\n    function filterColumnsTool(text, tool) {\n        text = text.split('\\n');\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return text.join('\\n');\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i] = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i] = \"\";\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    };\n\n    function filterColumnsInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i].data = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i].data = \"\";\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    };\n\n    /**\n     * Compare nastroj\n     */\n    function compareTool(text, tool) {\n        var lines = text.split('\\n');\n        var result = \"\";\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] > tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (columns[tool.inColumn - 1] > tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] >= tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (columns[tool.inColumn - 1] >= tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] < tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (columns[tool.inColumn - 1] < tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < lines.length; i++) {\n                            if (lines[i] <= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < lines.length; i++) {\n                            columns = lines[i].split(tool.delimiter);\n    \n                            if (tool.inColumn > columns.length) {\n                                columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                            }\n                            if (columns[tool.inColumn - 1] <= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                    return result.slice(0, -1);\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < lines.length; i++) {\n                                if (lines[i] === tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < lines.length; i++) {\n                                columns = lines[i].split(tool.delimiter);\n\n                                if (tool.inColumn > columns.length) {\n                                    columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                                }\n                                if (columns[tool.inColumn - 1] === tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                        return result.slice(0, -1);\n            default:\n                return text;\n        }\n    }\n\n    function compareInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data > tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (!(columns[tool.inColumn - 1] > tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data >= tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (!(columns[tool.inColumn - 1] >= tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i] < tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn > columns.length) {\n                            columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                        }\n                        if (!(columns[tool.inColumn - 1] < tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            if (!(text[i].data <= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            columns = text[i].data.split(tool.delimiter);\n    \n                            if (tool.inColumn > columns.length) {\n                                columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                            }\n                            if (!(columns[tool.inColumn - 1] <= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    return text;\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                if (!(text[i].data === tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                columns = text[i].data.split(tool.delimiter);\n\n                                if (tool.inColumn > columns.length) {\n                                    columns = columns.concat(Array(tool.inColumn - columns.length).fill(\"\"));\n                                }\n                                if (!(columns[tool.inColumn - 1] === tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * FilterLines nastroj\n     */\n    function filterLinesTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                text = text.replace(/\\n+/g, '\\n');\n                break;\n            case \"whiteChars\":\n                text = text.replace(/^\\s*[\\r\\n]/gm, '');\n                text = text.replace(/[\\r\\n]\\s*$/g, '');\n                break;\n            case \"custom\":\n                text = text.split('\\n');\n                var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n                if (tool.column === \"\") {   // Cele radky\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                else {      // Ve sloupci\n                    var column = \"\";\n                    for (let i = 0; i < text.length; i++) {\n                        column = text[i].split(tool.delimiter);\n                        if (column.length < tool.column) {\n                            continue;\n                        }\n                        if (column[tool.column - 1].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text;\n        }\n        if (text.charAt(0) === '\\n') {\n            text = text.slice(1)\n        }\n        if (text.charAt(text.length - 1) === '\\n') {\n            text = text.slice(0, -1);\n        }\n        return text;\n    }\n\n    function filterLinesInspectTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"whiteChars\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.trim() === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"custom\":\n                var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n                if (tool.column === \"\") {   // Cele radky\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {      // Ve sloupci\n                    var column = \"\";\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        column = text[i].data.split(tool.delimiter);\n                        if (column.length < tool.column) {\n                            continue;\n                        }\n                        if (column[tool.column - 1].match(new RegExp(\".*\" + regexEscape(tool.customContent) + \".*\", option)) !== null) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Regex filter lines nastroj\n     */\n    function regexFilterLinesTool(text, tool) {\n        text = text.split('\\n');\n        var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n        if (tool.column === \"\") {   // Cele radky\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].match(new RegExp(tool.expression, option)) !== null) {\n                    text.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        else {      // Ve sloupci\n            var column = \"\";\n            for (let i = 0; i < text.length; i++) {\n                column = text[i].split(tool.delimiter);\n                if (column.length < tool.column) {\n                    column = column.concat(Array(tool.column - column.length).fill(\"\"));\n                }\n                if (column[tool.column - 1].match(new RegExp(tool.expression, option)) !== null) {\n                    text.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        return text.join('\\n');\n    }\n\n    function regexFilterLinesInspectTool(text, tool) {\n        var option = tool.casesensitive === true ? \"g\" : \"gi\";\n\n        if (tool.column === \"\") {   // Cele radky\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].data === null) {\n                    continue;\n                }\n                if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                    text[i].data = null;\n                }\n            }\n        }\n        else {      // Ve sloupci\n            var column = \"\";\n            for (let i = 0; i < text.length; i++) {\n                if (text[i].data === null) {\n                    continue;\n                }\n                column = text[i].data.split(tool.delimiter);\n                if (column.length < tool.column) {\n                    column = column.concat(Array(tool.column - column.length).fill(\"\"));\n                }\n                if (column[tool.column - 1].match(new RegExp(tool.expression, option)) !== null) {\n                    text[i].data = null;\n                }\n            }\n        }\n        return text;\n    }\n\n    /**\n     * Cut lines nastroj\n     */\n    function cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                var place = text.length - tool.count;\n                if (place < 0) {\n                    place = 0;\n                }\n                text = text.slice(place);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Insert column nastroj\n     */\n    function insertColumnTool(text, tool) {\n        text = text.split('\\n');\n        const givenColumn = tool.content.split('\\n');\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            columns = text[lineNumber].split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = columns.join(tool.delimiter);\n            lineNumber++;\n        }\n        while(lineNumber < givenColumn.length) {\n            text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = text[lineNumber].join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber] += tool.delimiter;\n            }\n            lineNumber++;\n        }\n        return text.join('\\n');\n    }\n\n    function insertColumnInspectTool(text, tool) {\n        const givenColumn = tool.content.split('\\n');\n        var givenColumnLine = 0;\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            if (text[lineNumber].data === null) {\n                lineNumber++;\n                continue;\n            }\n            columns = text[lineNumber].data.split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = columns.join(tool.delimiter);\n            givenColumnLine++;\n            lineNumber++;\n        }\n        while(givenColumnLine < givenColumn.length) {\n            text.push({number: lineNumber + 1, data: Array(tool.position - 1).fill(\"\")});\n            //text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].data.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = text[lineNumber].data.join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber].data += tool.delimiter;\n            }\n            givenColumnLine++;\n            lineNumber++;\n        }\n        return text;\n    }\n\n    /**\n     * Swap columns nastroj\n     */\n    function swapColumnsTool(text, tool) {\n        text = text.split('\\n');\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            column = text[i].split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i] = column.join(tool.delimiter);\n        }\n        return text.join('\\n');\n    }\n\n    function swapColumnsInspectTool(text, tool) {\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            column = text[i].data.split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i].data = column.join(tool.delimiter);\n        }\n        return text;\n    }\n\n    /**\n     * Convert case nastroj\n     */\n    function convertCaseTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                return text.toUpperCase();\n            case \"lowercase\":\n                return text.toLowerCase();\n            default:\n                return text;\n        }\n    }\n\n    function convertCaseInspectTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toUpperCase();\n                }\n                return text;\n            case \"lowercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toLowerCase();\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Trim nastroj\n     */\n    function trimTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].trim();\n        }\n\n        return lines.join('\\n');\n    }\n\n    function trimInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.trim();\n        }\n        return text;\n    }\n\n    /**\n     * Remove extra spaces nastroj\n     */\n    function removeExtraSpacesTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].replace(/\\s+/g, ' ');\n        }\n\n        return lines.join('\\n');\n    }\n\n    function removeExtraSpacesInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.replace(/\\s+/g, ' ');\n        }\n        return text;\n    }\n\n    /**\n     * Sort nastroj\n     */\n    function sortTool(text, tool) {\n        const compare = (a, b) => {\n            if (tool.casesensitive === false) {\n                a = a.toUpperCase();\n                b = b.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a = a.trim();\n                b = b.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a < b) {\n                    return -1;\n                }\n                if (a > b) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a > b) {\n                    return -1;\n                }\n                if (a < b) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n\n        text = text.split('\\n');\n        text.sort(compare);\n        return text.join('\\n');\n    }\n\n    function sortInspectTool(text, tool) {\n        const compareData = (a, b) => {\n            if (a.data === null) {\n                return 1;\n            }\n            if (b.data === null) {\n                return -1;\n            }\n            if (tool.casesensitive === false) {\n                a.data = a.data.toUpperCase();\n                b.data = b.data.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a.data = a.data.trim();\n                b.data = b.data.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a.data < b.data) {\n                    return -1;\n                }\n                if (a.data > b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a.data > b.data) {\n                    return -1;\n                }\n                if (a.data < b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n        text =text.sort(compareData);\n        return text;\n    }\n\n    /**\n     * Reverse nastroj\n     */\n    function reverseTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = text[i].split('');\n                    text[i] = text[i].reverse();\n                    text[i] = text[i].join('');\n                }\n                return text.join('\\n');\n            case \"vertical\":\n                text = text.reverse();\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function reverseInspectTool(text, tool) {\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.split('');\n                    text[i].data = text[i].data.reverse();\n                    text[i].data = text[i].data.join('');\n                }\n                return text;\n            case \"vertical\":\n                text = text.reverse();\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Unique nastroj\n     */\n    function uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n        for (let i = index + 1; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function findPrevLine(text, index) {\n        for (let i = index - 1; i >= 0; i--) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                            return text;\n                        }   \n                        if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                            text[i].data = null;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        text[nextLine.index].data = null;\n\n                        while ((nextLine = findNextLine(text, i)) !== null) {\n                            if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                                text[nextLine.index].data = null;\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        text[i].data = null;\n                        continue;\n                    }\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        for (var lastIndex = nextLine.index; (nextLine = findNextLine(text, nextLine.index)) !== null; lastIndex = nextLine.index) {\n                            if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                                i = nextLine.index - 1;\n                                break;\n                            }\n                        }\n                        i = lastIndex;\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Line numbers nastroj\n     */\n    function lineNumbersTool(text, tool) {\n        text = text.split('\\n');\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i] === \"\") {\n                        continue;\n                    }\n                    text[i] = lineNumber + tool.delimiter + text[i];\n                    lineNumber++;\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function lineNumbersInspectTool(text, tool) {\n        var lineNumber = parseInt(tool.startingNumber);\n\n        switch (tool.variant) {\n            case \"all\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            case \"nonempty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null || text[i].data === \"\") {\n                        continue;\n                    }\n                    text[i].data = lineNumber + tool.delimiter + text[i].data;\n                    lineNumber++;\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Ridici funkce\n     */\n    function processTool(text, tool) {\n        var result = \"\";\n\n        switch (tool.toolname) {\n            case \"match\":\n                result = matchTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchTool(text, tool);\n                break;\n        \tcase \"replace\":\n        \t\tresult = replaceTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesTool(text, tool);\n                break;\n            case \"regexFilterLines\":\n                result = regexFilterLinesTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesTool(text);\n                break;\n            case \"sort\":\n                result = sortTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersTool(text, tool);\n                break;\n        \tdefault:\n        \t\tbreak;\n        } \n        return result;\n    };\n\n    function processInspectTool(text, tool) {\n        var result = \"\";\n      \n        switch (tool.toolname) {\n            case \"match\":\n                result = matchInspectTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchInspectTool(text, tool);\n                break;\n            case \"replace\":\n                result = replaceInspectTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceInspectTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareInspectTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsInspectTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesInspectTool(text, tool);\n                break;\n            case \"regexFilterLines\":\n                result = regexFilterLinesInspectTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesInspectTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnInspectTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsInspectTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseInspectTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimInspectTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesInspectTool(text);\n                break;\n            case \"sort\":\n                result = sortInspectTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseInspectTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueInspectTool(text, tool);\n                break;\n            case \"lineNumbers\":\n                result = lineNumbersInspectTool(text, tool);\n                break;\n            default:\n                break;\n        }\n        return result;\n    };\n\n    self.addEventListener('message', event => { // eslint-disable-line no-restricted-globals\n        //var processData = event.data.inspectMode === true ? event.data.text.split('\\n') : event.data.text;\n        var processData = \"\";\n\n        if (event.data.inspectMode === false) {\n            processData = event.data.text;\n        }\n        else {\n            let lines = event.data.text.split('\\n');\n            processData = Array(lines.length);\n\n            for (let index = 0; index < processData.length; index++) {\n                processData[index] = {number: index + 1, data: lines[index]};\n            }\n        }\n\n        const pipeline = event.data.pipeline;\n        const unit = Math.ceil(100 / pipeline.length);\n\n        if (pipeline.length > 0) {\n            postMessage({type: \"progress\", data: 0});\n        }\n        \n        for (var i = 0; i < pipeline.length; i++) {\n        \tif (pipeline[i].active === true) {\n                if (event.data.inspectMode === false) {\n                    processData = processTool(processData, pipeline[i]);\n                }\n                else {\n                    processData = processInspectTool(processData, pipeline[i]);\n                }\n            }\n\n            postMessage({type: \"progress\", data: (i + 1) === pipeline.length ? 100 : (i + 1) * unit});\n        }\n\n        if (event.data.inspectMode === true) {\n            let lines = [];\n            let tempData = [];\n            console.log(processData);\n\n            for (var breakpoint in event.data.breakpoints) {\n                lines.push(parseInt(breakpoint) + 1);\n            }\n\n            for (let index = 0; index < processData.length; index++) {\n                if (lines.includes(processData[index].number) && processData[index].data !== null) {\n                    tempData.push(processData[index].data);\n                }\n            }\n\n            processData = tempData.join('\\n');\n        }\n        /*if (event.data.inspectMode === true) {\n            var temp = [];\n            console.log(processData);\n            for (var breakpoint in event.data.breakpoints) {\n                if (processData[breakpoint] !== null) {\n                    temp.push(processData[breakpoint]);\n                }\n            }\n            processData = temp.join('\\n');\n        }*/\n\n        postMessage({type: \"result\", data: processData});\n    });\n}","/**\n * FIT VUT 2020\n * @author Jakub Sadilek\n */\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport ToolList from './components/ToolList';\nimport Alerts from './components/Alerts';\nimport arrayMove from 'array-move';\nimport newID from './scripts/generatorID';\nimport WebWorker from './scripts/WebWorker';\nimport pipeWorker from './scripts/pipeWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\n//-------------------------------DEBUG------------------------------------\n/*\nfunction cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\nfunction uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n      for (let i = index + 1; i < text.length; i++) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function findPrevLine(text, index) {\n      for (let i = index - 1; i >= 0; i--) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                  for (let i = text.length - 1; i >= 0; i--) {\n                      if (text[i].data === null) {\n                          continue;\n                      }\n                      prevLine = findPrevLine(text, i);\n                      if (prevLine === null) {\n                        return text;\n                      }\n\n                      if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                          text[i].data = null;\n                      }\n                      i = prevLine.index + 1;  \n                  }\n                  return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                      continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                      return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                      text[nextLine.index].data = null;\n\n                      while ((nextLine = findNextLine(text, i)) !== null) {\n                        if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                          text[nextLine.index].data = null;\n                        }\n                        else {\n                          break;\n                        }\n                      }\n                      text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                  if (text[i].data === null) {\n                    continue;\n                  }\n                  nextLine = findNextLine(text, i);\n                  if (nextLine === null) {\n                    text[i].data = null;\n                    continue;\n                  }\n                  if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                    for (var j = i; (nextLine = findNextLine(text, nextLine.index)) !== null; j++) {\n                      if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                        i = nextLine.index - 1;\n                        break;\n                      }\n                    }\n                    i = j + 1;\n                  }\n                  else {\n                    text[i].data = null;\n                  }\n              }\n              return text;\n            default:\n                return text;\n            }\n        }\n\nfunction processTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction processInspectTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueInspectTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesInspectTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction proc(data) { // eslint-disable-line no-restricted-globals\n  const pipeline = data.pipeline;\n  var processData = \"\";\n\n  if (data.inspectMode === false) {\n    processData = data.text;\n  }\n  else {\n      let lines = data.text.split('\\n');\n      processData = Array(lines.length);\n\n      for (let index = 0; index < processData.length; index++) {\n          processData[index] = {number: index + 1, data: lines[index]};\n      }\n  }\n  \n  for (var i = 0; i < pipeline.length; i++) {\n    if (pipeline[i].active === false)\n      continue;\n\n      if (data.inspectMode === false) {\n        processData = processTool(processData, pipeline[i]);\n      }\n      else {\n        processData = processInspectTool(processData, pipeline[i]);\n      }\n  }\n\n  if (data.inspectMode === true) {\n    let lines = [];\n    let tempData = [];\n\n    for (var breakpoint in data.breakpoints) {\n        lines.push(parseInt(breakpoint) + 1);\n    }\n\n    for (let index = 0; index < processData.length; index++) {\n        if (lines.includes(processData[index].number) && processData[index].data !== null) {\n            tempData.push(processData[index].data);\n        }\n    }\n\n    processData = tempData.join('\\n');\n}\n\n  return processData;\n};\n*/\n//------------------------------------------------------------------------\n\n/**\n * Funkce zkontroluje pole, zda nejsou nastavene breakpointy.\n * Kdyby byla velmi pomala, vytvorit workera.\n */\nfunction emptyBreakpoints(breakpoints) {\n  \tfor (var i in breakpoints) {\n  \t    if (typeof breakpoints[i] !== typeof undefined) {\n  \t        return false;\n  \t    }\n  \t}\n  \treturn true;\n};\n\nfunction App() {\n  \tconst alertRef = useRef();\n  \tconst [pipeline, setPipeline] = useState([]);\n\n  \tconst [editorContent, setEditorContent] = useState(\"\");\n  \tconst [editorResult, setEditorResult] = useState(\"\");\n  \tconst [inspectMode, setInspectMode] = useState({enabled: false, breakpoints: []});\n  \tconst [pipeProgress, setPipeProgress] = useState(100);\n  \t//const [inspectMode, setInspectMode] = useState(false);\n\n  \tconst addTool = useCallback((tool) => {\n  \t  \ttool.id = newID();\n  \t  \ttool.active = true;\n  \t  \tsetPipeline(c => [...c, tool]);\n  \t}, [setPipeline]);\n\n  \tconst removeTool = useCallback((tool) => {\n  \t  \tsetPipeline(c => c.filter(each => each.id !== tool.id));\n  \t}, [setPipeline]);\n\n  \tconst updateTool = useCallback((tool) => {  // TODO: opravit jen na set\n  \t  \tconst tmp = [...pipeline];\n\n  \t  \tfor (var i in tmp) {\n  \t  \t  \tif (tmp[i].id === tool.id) {\n  \t  \t  \t  \ttmp[i] = tool;\n  \t  \t  \t  \tbreak;\n  \t  \t  \t}\n  \t  \t}\n  \t  \tsetPipeline(tmp);\n  \t}, [pipeline, setPipeline]);\n\n  \tconst reactiveTool = useCallback((tool) => {\n  \t  \tsetPipeline(state => state.map(each => {\n  \t  \t  \tif (each.id === tool.id) {\n  \t  \t  \t  \treturn {...each, active: !each.active}\n  \t  \t  \t}\n  \t  \t  \telse return each}));\n  \t}, [setPipeline]);\n\n  \tconst onSortPipeline = useCallback(({ oldIndex, newIndex }) => {\n  \t  \tif (oldIndex !== newIndex) {\n  \t  \t  \tsetPipeline(pipeline => arrayMove(pipeline, oldIndex, newIndex));\n  \t  \t}\n  \t  \tconsole.log(pipeline);\n  \t}, [pipeline, setPipeline]);\n\n  \tconst editText = useCallback((newValue) => {\n  \t  \tsetEditorContent(newValue);\n  \t}, [setEditorContent]);\n\n  \tconst toggleInspectMode = useCallback(() => {\n  \t  \tsetInspectMode(state => ({ ...state, enabled: !state.enabled}));\n  \t}, [setInspectMode]);\n\n  \tconst toggleBreakpoint = useCallback((breakpoints) => {\n  \t  \tsetInspectMode(state => ({ ...state, enabled: !emptyBreakpoints(breakpoints), breakpoints: breakpoints}));\n  \t}, [setInspectMode]);\n\n  \tconst setPipelineActivity = useCallback((value) => {\n  \t  \tsetPipeline(state => state.map(tool => {return {...tool, active: value}}));\n  \t}, [setPipeline]);\n\n  \tconst clearPipeline = useCallback(() => {\n  \t  \tsetPipeline([]);\n  \t}, [setPipeline]);\n\n  \tuseEffect(() => {\n  \t  \t//---------------DEBUG---------------------\n  \t  \t/*\n  \t  \tsetEditorResult(proc({\n  \t  \t  text: editorContent, \n  \t  \t  pipeline: pipeline, \n  \t  \t  breakpoints: inspectMode.breakpoints, \n  \t  \t  inspectMode: inspectMode.enabled\n  \t  \t}));\n  \t  \t*/\n  \t  \t//-----------------------------------------\n  \t  \tconst worker = new WebWorker(pipeWorker);\n\n  \t  \tworker.postMessage({\n  \t  \t  \ttext: editorContent, \n  \t  \t  \tpipeline: pipeline, \n  \t  \t  \tbreakpoints: inspectMode.breakpoints, \n  \t  \t  \tinspectMode: inspectMode.enabled\n  \t  \t});\n\n  \t  \tworker.onmessage = (event) => {\n  \t  \t  \tif (event.data.type === \"progress\")\n  \t  \t  \t  \tsetPipeProgress(event.data.data);\n  \t  \t  \telse\n  \t  \t  \t  \tsetEditorResult(event.data.data);\n  \t  \t};\n\n  \t  \treturn () => {  // Cleanup\n  \t  \t  \tworker.terminate();\n  \t  \t};\n  \t}, [editorContent, pipeline, inspectMode, setEditorResult]);\n\n  \tconst showAlert = useCallback((variant, message) => {\n  \t  \talertRef.current.openSnackbar(variant, message);\n  \t}, []);\n\n  \treturn (\n  \t  \t<MuiThemeProvider theme={theme}>\n  \t  \t  \t<div className=\"App\">\n  \t  \t  \t  \t<TopPanel />\n  \t  \t  \t  \t<SplitEditor \n  \t  \t  \t  \t  \teditorContent={editorContent} \n  \t  \t  \t  \t  \teditText={editText} \n  \t  \t  \t  \t  \teditorResult={editorResult}\n  \t  \t  \t  \t  \tshowAlert={showAlert} \n  \t  \t  \t  \t  \ttoggleBreakpoint={toggleBreakpoint}\n  \t  \t  \t  \t  \tinspectMode={inspectMode.enabled}\n  \t  \t  \t  \t  \ttoggleInspectMode={toggleInspectMode}\n  \t  \t  \t  \t  \tpipeProgress={pipeProgress}\n  \t  \t  \t  \t  \tpipeline={pipeline}\n  \t  \t  \t  \t  \tsetPipelineActivity={setPipelineActivity}\n  \t  \t  \t  \t  \tclearPipeline={clearPipeline}\n  \t  \t  \t  \t/>\n  \t  \t  \t  \t<ToolList \n  \t  \t  \t  \t  \ttools={pipeline}\n  \t  \t  \t  \t  \tremoveTool={removeTool}\n  \t  \t  \t  \t  \treactiveTool={reactiveTool}\n  \t  \t  \t  \t  \tupdateTool={updateTool}\n  \t  \t  \t  \t  \tsort={onSortPipeline}\n  \t  \t  \t  \t/>\n  \t  \t  \t  \t<ToolTabs showAlert={showAlert} addTool={addTool}/>\n  \t  \t  \t  \t<Alerts ref={alertRef} />\n  \t  \t  \t</div>\n  \t  \t</MuiThemeProvider>\n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}