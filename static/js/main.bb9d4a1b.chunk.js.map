{"version":3,"sources":["components/TopPanel.jsx","scripts/shellGenerator.js","components/ShellDialog.jsx","components/EditorToolbar.jsx","components/EditorIn.jsx","components/EditorOut.jsx","components/EditorBottomPanel.jsx","components/SplitEditor.jsx","components/Tabs/TabStyles.js","components/Tabs/Tools/Match.jsx","components/Tabs/Tools/RegexMatch.jsx","components/Tabs/Tools/Compare.jsx","components/Tabs/FindTab.jsx","components/Tabs/Tools/Replace.jsx","components/Tabs/Tools/RegexReplace.jsx","components/Tabs/ReplaceTab.jsx","components/Tabs/Tools/FilterColumns.jsx","components/Tabs/Tools/FilterLines.jsx","components/Tabs/Tools/CutLines.jsx","components/Tabs/Tools/Trim.jsx","components/Tabs/Tools/RemoveExtraSpaces.jsx","components/Tabs/Tools/Unique.jsx","components/Tabs/ReduceTab.jsx","components/Tabs/Tools/InsertColumn.jsx","components/Tabs/Tools/SwapColumns.jsx","components/Tabs/Tools/ConvertCase.jsx","components/Tabs/Tools/Sort.jsx","components/Tabs/Tools/Reverse.jsx","components/Tabs/ModifyTab.jsx","components/ToolTabs.jsx","components/Edits/Tools/EditMatch.jsx","components/Edits/Tools/EditRegexMatch.jsx","components/Edits/Tools/EditReplace.jsx","components/Edits/Tools/EditRegexReplace.jsx","components/Edits/Tools/EditCompare.jsx","components/Edits/Tools/EditFilterColumns.jsx","components/Edits/Tools/EditFilterLines.jsx","components/Edits/Tools/EditCutLines.jsx","components/Edits/Tools/EditInsertColumn.jsx","components/Edits/Tools/EditSwapColumns.jsx","components/Edits/Tools/EditConvertCase.jsx","components/Edits/Tools/EditSort.jsx","components/Edits/Tools/EditReverse.jsx","components/Edits/Tools/EditUnique.jsx","components/Edits/EditDialog.jsx","components/ToolList.jsx","components/Alerts.jsx","scripts/generatorID.js","scripts/WebWorker.js","scripts/pipeWorker.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","createMuiTheme","light","grey","dark","type","useStyles","makeStyles","flexGrow","appName","marginLeft","spacing","flex","link","textDecoration","DenseAppBar","React","memo","classes","useState","anchorEl","setAnchorEl","className","AppBar","position","Toolbar","variant","Typography","Tooltip","title","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","href","ListItemIcon","Description","fontSize","itemIcon","ListItemText","Videocam","GitHub","CardMembership","regexEscape","regex","replace","awkRegexEscape","awkDelimiter","delimiter","awkSlashEscape","getToolCommand","tool","command","toolname","inColumn","casesensitive","occurrence","expression","matchCommand","regexMatchCommand","find","replaceCommand","regexReplaceCommand","separator","column","comparator","value","compareCommand","start","parseInt","filterColumnsCommand","content","filterLinesCommand","res","i","colBubble","insertColumnCommand","first","second","swapColumnsCommand","textCase","convertCaseCommand","count","cutLinesCommand","order","ignoreLeadingBlanks","sortCommand","direction","reverseCommand","countPrefix","uniqueCommand","marginBottom","textContent","closeButton","right","top","ShellDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","close","fullWidth","scroll","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","pipeline","result","length","active","shellGenerator","minHeight","height","btn","padding","margin","toolbarIcon","marginRight","popmenu","zIndex","input","display","activeButton","searchBox","flexDirection","flexWrap","justifyContent","alignItems","searchBtns","paddingLeft","paddingRight","borderRadius","searchBtnIcons","search","shape","fade","width","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","EditorToolbar","setInput","undo","redo","clearAllBreakpoints","showAlert","wrap","toggleWrap","findAll","inspectMode","toggleInspectMode","setPipelineActivity","clearPipeline","openFile","setOpenFile","openEditor","setOpenEditor","openPipeline","setOpenPipeline","openSearch","setOpenSearch","openShellDialog","setOpenShellDialog","searchExpression","setSearchExpression","searchRegExp","setSearchRegExp","searchCaseSensitive","setSearchCaseSensitive","fileRef","createRef","fileButtonRef","useRef","editorButtonRef","pipelineButtonRef","searchButtonRef","expandFile","useCallback","prev","expandEditor","expandInspect","expandSearch","handleClose","current","contains","target","handleListKeyDown","key","preventDefault","loadFile","e","a","async","reader","FileReader","onload","readAsText","files","downloadResult","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Button","ref","Popper","role","undefined","disablePortal","TransitionProps","placement","Grow","style","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","accept","multiple","onChange","htmlFor","Publish","GetApp","ListAlt","Undo","Redo","WrapText","ViewDay","Clear","BugReport","Done","ClearAll","FiberNew","Search","size","Translate","TextFields","InputBase","placeholder","inputProps","backwards","caseSensitive","wholeWord","regExp","SkipPrevious","SkipNext","AllInclusive","EditorIn","forwardRef","edit","toggleBreakpoint","onCursorChange","aceIn","useImperativeHandle","properties","editor","resize","session","clearBreakpoints","useEffect","on","domEvent","indexOf","clientX","getBoundingClientRect","left","row","getDocumentPosition","getBreakpoints","setBreakpoint","clearBreakpoint","stop","newValue","console","log","selection","mode","name","showPrintMargin","hScrollBarAlwaysVisible","debounceChangePeriod","wrapEnabled","editorProps","$blockScrolling","EditorOut","state","bind","this","refs","aceOut","readOnly","Component","item","enabled","disabled","violet","EditorBottomPanel","line","setPosition","ColorLinearProgress","barColorPrimary","LinearProgress","SplitEditor","editorContent","editText","editorResult","pipeProgress","bottomPanel","setWrap","handleResize","initialEditorHeight","window","innerHeight","cursor","Fragment","defaultSize","minWidth","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","onResize","borderBottom","split","minSize","maxSize","toolName","fontWeight","divider","marginTop","button","textField","flexCenter","flexStart","opts","MatchTool","matchFind","setMatchFind","matchCaseSensitive","setMatchCaseSensitive","setOccurrence","matchInColumn","setMatchInColumn","matchColumnDelimiter","setMatchColumnDelimiter","matchFindError","setMatchFindError","matchColumnError","setMatchColumnError","matchDelimiterError","setMatchDelimiterError","FormControl","InputLabel","Select","labelId","TextField","label","InputLabelProps","shrink","error","helperText","required","addTool","startIcon","Add","RegexMatchTool","regexMatchFind","setRegexMatchFind","regexMatchCaseSensitive","setRegexMatchCaseSensitive","regexMatchInColumn","setRegexMatchInColumn","regexMatchColumnDelimiter","setRegexMatchColumnDelimiter","regexMatchFindError","setRegexMatchFindError","regexMatchColumnError","setRegexMatchColumnError","regexMatchDelimiterError","setRegexMatchDelimiterError","validExpression","RegExp","handleRegexMatch","CompareTool","compareValue","setCompareValue","setComparator","setInColumn","setDelimiter","valueError","setValueError","inColumnError","setInColumnError","delimiterError","setDelimiterError","lightBlue","secondary","green","FindTab","Grid","container","xs","Match","Divider","orientation","RegexMatch","Compare","styles","ReplaceTool","replaceFind","setReplaceFind","replaceReplace","setReplaceReplace","replaceCaseSensitive","setReplaceCaseSensitive","replaceInColumn","setReplaceInColumn","replaceColumnDelimiter","setReplaceColumnDelimiter","replaceFindError","setReplaceFindError","replaceReplaceError","setReplaceReplaceError","replaceColumnError","setReplaceColumnError","replaceDelimiterError","setReplaceDelimiterError","RegexReplaceTool","regexReplaceFind","setRegexReplaceFind","regexReplaceReplace","setRegexReplaceReplace","regexReplaceCaseSensitive","setRegexReplaceCaseSensitive","regexReplaceInColumn","setRegexReplaceInColumn","regexReplaceColumnDelimiter","setRegexReplaceColumnDelimiter","regexReplaceFindError","setRegexReplaceFindError","regexReplaceColumnError","setRegexReplaceColumnError","regexReplaceDelimiterError","setRegexReplaceDelimiterError","handleRegexReplace","FindAndReplaceTab","Replace","RegexReplace","FilterColumnsTool","setVariant","positionError","setPositionError","FilterLinesTool","setContent","CutLinesTool","setCount","countError","setCountError","TrimTool","RemoveExtraSpacesTool","checkbox","UniqueTool","setCaseSensitive","setCountPrefix","countDisabled","setCountDisabled","option","handleVariant","FormControlLabel","control","Checkbox","checked","ReduceTab","Unique","FilterColumns","FilterLines","CutLines","RemoveExtraSpaces","Trim","flexEnd","collapse","InsertColumnTool","focused","setFocused","contentError","setContentError","Collapse","in","collapsedHeight","multiline","rows","onFocus","onBlur","SwapColumnsTool","firstPosition","setFirstPosition","secondPosition","setSecondPosition","firstPositionError","setFirstPositionError","secondPositionError","setSecondPositionError","ConvertCaseTool","setTextCase","SortTool","setOrder","setIgnoreLeadingBlanks","ReverseTool","setDirection","ModifyTab","InsertColumn","Sort","SwapColumns","Reverse","ConvertCase","TabPanel","children","index","other","component","hidden","Box","p","a11yProps","ToolTabs","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","FindReplace","RemoveCircleOutline","Build","ReplaceTab","EditMatch","handleUpdate","updateTool","EditRegexMatch","EditReplace","EditRegexReplace","EditCompare","EditFilterColumns","EditFilterLines","EditCutLinesTool","EditConvertCase","EditReverse","EditUnique","paddingBottom","titleIcon","dialogActions","paddingTop","confirmIcon","closeIcon","EditDialog","toolRef","Edit","mapToolname","EditCutLines","EditInsertColumn","EditSwapColumns","EditSort","mapToolContent","DialogActions","tooltip","textTransform","textAlign","letterSpacing","boxShadow","titleLabel","list","listItem","itemDeactivated","overflow","toolText","violetWord","lightGreenWord","greenWord","blueWord","lightBlueWord","yellowWord","redWord","lightRedWord","greenBlueWord","turquoiseWord","lightTurquoiseWord","listIcon","marginLR","ToolList","tools","removeTool","reactiveTool","sort","openEditDialog","setOpenEditDialog","toolToEdit","DragHandle","SortableHandle","mapComparator","mapFilterLinesContent","mapCase","mapUniqueVariant","mapTool","SortableItem","SortableElement","ListItem","ContainerComponent","popupId","bindTrigger","MoreVert","bindMenu","includes","isEditable","openEdit","VisibilityOff","Visibility","Delete","SortableListContainer","SortableContainer","List","map","Settings","lockAxis","useDragHandle","onSortEnd","helperClass","variantIcon","success","CheckCircle","warning","Warning","Error","info","Info","blue","amber","iconVariant","opacity","message","CustomSnackbarContent","Icon","SnackbarContent","clsx","action","Alerts","prop","showSnackbar","setShowSnackbar","snackbarInfo","setSnackbarInfo","snackbarQueue","openSnackbar","push","Date","getTime","processSnackbarQueue","shift","closeSnackbar","reason","Snackbar","autoHideDuration","onExited","ContentProps","lastID","WebWorker","worker","code","toString","blob","Worker","getMatchOptions","regexReplaceAll","lines","tmp","match","specificMatch","j","firstChar","lastChar","join","findNextLine","text","data","findPrevLine","processTool","splitedText","columns","slice","z","matchTool","regexMatchTool","replaceTool","regexReplaceTool","compareTool","splice","filterColumnsTool","charAt","filterLinesTool","cutLinesTool","givenColumn","lineNumber","concat","Array","fill","insertColumnTool","temp","swapColumnsTool","toUpperCase","toLowerCase","convertCaseTool","trim","trimTool","removeExtraSpacesTool","b","sortTool","reverse","reverseTool","unshift","uniqueTool","processInspectTool","matchInspectTool","regexMatchInspectTool","x","replaceInspectTool","regexReplaceInspectTool","compareInspectTool","filterColumnsInspectTool","filterLinesInspectTool","cutLinesInspectTool","givenColumnLine","number","insertColumnInspectTool","swapColumnsInspectTool","convertCaseInspectTool","trimInspectTool","removeExtraSpacesInspectTool","sortInspectTool","reverseInspectTool","nextLine","prevLine","lastIndex","uniqueInspectTool","self","addEventListener","processData","unit","Math","ceil","postMessage","tempData","breakpoint","emptyBreakpoints","App","alertRef","setPipeline","setEditorContent","setEditorResult","setInspectMode","setPipeProgress","c","filter","each","onSortPipeline","oldIndex","newIndex","arrayMove","pipeWorker","onmessage","terminate","TopPanel","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb9d4a1b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Description, GitHub, Videocam, CardMembership } from '@material-ui/icons';\nimport { MuiThemeProvider, createMuiTheme, Tooltip } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #212121',\n    },\n})(props => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n));\n  \nconst StyledMenuItem = withStyles(theme => ({\n    root: {\n      '&:focus': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n}))(MenuItem);\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"rgb(30, 30, 30)\",\n        light: grey[200],\n        dark: grey[900],\n      },\n      type: 'dark',\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appName: {\n      marginLeft: theme.spacing(10),\n      flex: 1,\n  },\n  link: {\n      textDecoration: 'none',\n      color: 'inherit',\n  },\n}));\n\nconst DenseAppBar = React.memo(() => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography className={classes.appName} variant=\"h6\" color=\"inherit\">\n                React App\n              </Typography>\n              <Tooltip title=\"Menu\">\n                <IconButton edge='start' color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\n                  <MenuIcon />\n                </IconButton>\n              </Tooltip>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Description fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Documentation\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <Videocam fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Video\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <GitHub fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"GitHub\" />\n                        </StyledMenuItem>\n                    </a>\n                    <a className={classes.link} href=\"https://github.com/Izuwei/production\">\n                        <StyledMenuItem>\n                          <ListItemIcon>\n                            <CardMembership fontSize=\"small\" className={classes.itemIcon}/>\n                          </ListItemIcon>\n                          <ListItemText primary=\"Credits\" />\n                        </StyledMenuItem>\n                    </a>\n                </StyledMenu>\n            </Toolbar>\n          </AppBar>\n        </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default DenseAppBar;","\nfunction regexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\nfunction awkRegexEscape(regex) {\n    return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\\\\\\\\\$&\");\n};\n\nfunction awkDelimiter(delimiter) {\n    if (delimiter === ' ') {\n        return \"[ ]\";\n    }\n    else {\n        return delimiter;\n    }\n}\n\nfunction replaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + regexEscape(tool.find) + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + regexEscape(tool.find) + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkRegexEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkRegexEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction awkSlashEscape(regex) {\n    return regex.replace(/[\\\\]/g, \"\\\\$&\");\n}\n\nfunction regexReplaceCommand(tool) {\n    if (tool.inColumn === \"\")  {    // globalne\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/g'\";\n            }\n            else {  // case isensitive\n                return \"sed -E 's/\" + tool.find + \"/\" + tool.replace + \"/gI'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"sed -E '0,/\" + tool.find + \"/s//\" + tool.replace + \"/'\";\n            }\n            else {  // case isensitive\n                return \"sed -E '0,/\" + tool.find + \"/Is//\" + tool.replace + \"/'\";\n            }\n        }\n    }\n    else {  // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}{gsub(\\\"\" + awkSlashEscape(tool.find) + \"\\\", \\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \"); print }'\";\n            }\n        }\n        else {  // prvni vyskyt\n            if (tool.casesensitive === true) {  // case sensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n            else {  // case isensitive\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1}!x{x=sub(\\\"\" + awkSlashEscape(tool.find) + \"\\\",\\\"\" + tool.replace + \"\\\", $\" + tool.inColumn + \")}1'\";\n            }\n        }\n    }\n}\n\nfunction matchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + regexEscape(tool.expression) + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + regexEscape(tool.expression) + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + regexEscape(tool.expression) + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction regexMatchCommand(tool) {\n    if (tool.inColumn === \"\") {     // globalne\n        if (tool.casesensitive === true) {  // case-sensitive\n            if (tool.occurrence === \"all\") {    //\n                return \"grep -E '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n        else {\n            if (tool.occurrence === \"all\") {\n                return \"grep -E -i '\" + tool.expression + \"'\";\n            }\n            else {\n                return \"grep -E -i -m 1 '\" + tool.expression + \"'\";\n            }\n        }\n    }\n    else {      // ve sloupci\n        if (tool.occurrence === \"all\") {    // vsechny vyskyty\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/'\";\n            }\n        }\n        else {  // pouze prvni vyskyt\n            if (tool.casesensitive === true) {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '$\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n            else {\n                return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{IGNORECASE=1} $\" + tool.inColumn + \"~/\" + tool.expression + \"/ {print; exit}'\";\n            }\n        }\n    }\n}\n\nfunction compareCommand(tool) {\n    var separator = tool.inColumn === \"\" ? \"\\\\n\" : tool.delimiter;\n    var column = tool.inColumn === \"\" ? \"1\" : tool.inColumn;\n    var comparator = \"\";\n\n    switch (tool.comparator) {\n        case \"gt\":\n            comparator = \">\";\n            break;\n        case \"ge\":\n            comparator = \">=\";\n            break;\n        case \"lt\":\n            comparator = \"<\";\n            break;\n        case \"le\":\n            comparator = \"<=\";\n            break;\n        case \"eq\":\n            comparator = \"==\";\n            break;\n        default:\n            comparator = \"\";\n    }\n    return \"awk -F '\" + awkDelimiter(separator) + \"' '$\" + column + \" \" + comparator + \" \\\"\" + awkSlashEscape(tool.value) + \"\\\"'\";\n}\n\nfunction filterColumnsCommand(tool) {\n    var start = \"\";\n\n    switch (tool.variant) {\n        case \"remove\":\n            if (parseInt(tool.position) !== 1) {\n                start = \"-\" + parseInt(tool.position - 1) + \",\";\n            }\n\n            return \"cut -d '\" + tool.delimiter + \"' -f \" + start + (parseInt(tool.position) + 1) + \"-\";\n        case \"cut\":\n            return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' '{print $\" + tool.position + \"}'\"; \n        default:\n            return \"\";\n    }\n}\n\nfunction filterLinesCommand(tool) {\n    switch (tool.content) {\n        case \"empty\":\n            return \"sed '/^$/d'\";\n        case \"whiteChars\":\n            return \"awk 'NF > 0'\";\n        default:\n            return \"\";\n    }\n}\n\nfunction insertColumnCommand(tool) {\n    const colBubble = (position) => {\n        if (parseInt(position) === 1) {\n            return \"\";\n        }\n        var res = \"t=$1;\";\n\n        for (let i = 1; i < position; i++) {\n            res += \"$\" + i + \"=$\" + (parseInt(i) + 1) + \";\";\n        }\n        return \" | awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{\" + res + \"$\" + tool.position + \"=t;print;}'\";\n    }\n\n    return \"pr -mts'\" + tool.delimiter + \"' $COLUMN_FILE /dev/stdin\" + colBubble(tool.position);\n}\n\nfunction swapColumnsCommand(tool) {\n    return \"awk -F '\" + awkDelimiter(tool.delimiter) + \"' -v OFS='\" + tool.delimiter + \"' '{t=$\" + tool.first + \";$\" + tool.first + \"=$\" + tool.second + \";$\" + tool.second + \"=t;print;}'\";\n}\n\nfunction convertCaseCommand(tool) {\n    switch (tool.textCase) {\n        case \"uppercase\":\n            return \"tr '[:lower:]' '[:upper:]'\";\n        case \"lowercase\":\n            return \"tr '[:upper:]' '[:lower:]'\";\n        default:\n            return \"\";\n    }\n}\n\n// https://unix.stackexchange.com/questions/102008/how-do-i-trim-leading-and-trailing-whitespace-from-each-line-of-some-output\nfunction trimCommand() {\n    return \"sed 's/^[[:blank:]]*//;s/[[:blank:]]*$//'\";\n}\n\nfunction removeExtraSpacesCommand() {\n    return \"tr -s ' '\";\n}\n\nfunction cutLinesCommand(tool) {\n    switch (tool.variant) {\n        case \"head\":\n            return \"head -n \" + tool.count;\n        case \"tail\":\n            return \"tail -n \" + tool.count;\n        default:\n            return \"\";\n    }\n}\n\nfunction sortCommand(tool) {\n    var command = \"LC_ALL=C sort -s\";\n    \n    if (tool.order === \"descending\") {\n        command += \"r\";\n    }\n    if (tool.casesensitive === false) {\n        command += \"f\";\n    }\n    if (tool.ignoreLeadingBlanks === true) {\n        command += \"b\";\n    }\n    return command;\n}\n\nfunction reverseCommand(tool) {\n    switch (tool.direction) {\n        case \"horizontal\":\n            return \"rev\";\n        case \"vertical\":\n            return \"tac\";\n        default:\n            return \"\";\n    }\n}\n\nfunction uniqueCommand(tool) {\n    var command = \"uniq\";\n\n    if (tool.casesensitive === false) {\n        command += \" -i\";\n    }\n    switch (tool.variant) {\n        case \"merge\":\n            if (tool.countPrefix === true) {\n                return command += \" -c | sed 's/^[[:blank:]]*//'\";\n            }\n            return command;\n        case \"unique\":\n            return command + \" -u\";\n        case \"duplicate\":\n            return command + \" -D\";\n        default:\n            return \"\";\n    }\n}\n\nfunction getToolCommand(tool) {\n    var command = \"\";\n\n    switch (tool.toolname) {\n        case \"match\":\n            command = matchCommand(tool);\n            break;\n        case \"regexMatch\":\n            command = regexMatchCommand(tool);\n            break;\n        case \"replace\":\n            command = replaceCommand(tool);\n            break;\n        case \"regexReplace\":\n            command = regexReplaceCommand(tool);\n            break;\n        case \"compare\":\n            command = compareCommand(tool);\n            break;\n        case \"filterColumns\":\n            command = filterColumnsCommand(tool);\n            break;\n        case \"filterLines\":\n            command = filterLinesCommand(tool);\n            break;\n        case \"insertColumn\":\n            command = insertColumnCommand(tool);\n            break;\n        case \"swapColumns\":\n            command = swapColumnsCommand(tool);\n            break;\n        case \"convertCase\":\n            command = convertCaseCommand(tool);\n            break;\n        case \"trim\":\n            command = trimCommand();\n            break;\n        case \"removeExtraSpaces\":\n            command = removeExtraSpacesCommand();\n            break;\n        case \"cutLines\":\n            command = cutLinesCommand(tool);\n            break;\n        case \"sort\":\n            command = sortCommand(tool);\n            break;\n        case \"reverse\":\n            command = reverseCommand(tool);\n            break;\n        case \"unique\":\n            command = uniqueCommand(tool);\n            break;\n        default:\n            return;\n    }\n    return \" | \" + command;\n}\n\nexport default function (pipeline) {\n    var result = \"cat $FILENAME\";\n\n    for (var i = 0; i < pipeline.length; i++) {\n        if (pipeline[i].active === true) {\n            result += getToolCommand(pipeline[i]);\n        }\n    }\n\n    return result;\n}","import React from \"react\";\nimport { Dialog, Tooltip, useTheme, makeStyles, DialogTitle, DialogContent, useMediaQuery, MuiThemeProvider, DialogContentText } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport shellGenerator from \"../scripts/shellGenerator\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: \"#ff9408\",\n    },\n    content: {\n        marginBottom: \"20px\",\n    },\n    textContent: {\n        color: \"white\",\n        marginBottom: \"0px\",\n    },\n    closeButton: {\n        position: 'absolute',\n        right: \"10px\",\n        top: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n    },\n}));\n\nfunction ShellDialog(props) {    // TODO: dodelat (ikonky, stylyzace)\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            scroll={\"paper\"}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                Shell script\n                <Tooltip title={\"Close\"}>\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={props.close}>\n                        <CloseIcon />\n                    </IconButton>\n                </Tooltip>\n            </DialogTitle>\n            <DialogContent dividers className={classes.content}>\n                <DialogContentText\n                    className={classes.textContent}\n                    id=\"scroll-dialog-text\"\n                    tabIndex={-1}\n                >\n                    {shellGenerator(props.pipeline)}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default ShellDialog;","import React, { useRef, useState, useCallback } from \"react\";\nimport { Toolbar, Button, IconButton, makeStyles, Popper, Grow, Paper, MenuItem, MenuList, ClickAwayListener, InputBase, Tooltip } from \"@material-ui/core\";\nimport { Description, FiberNew, Done, Publish, GetApp, Undo, Redo, BugReport, Clear, ClearAll, ListAlt, WrapText, Search, Translate, TextFields, SkipNext, SkipPrevious, AllInclusive, ViewDay } from \"@material-ui/icons\";\nimport { fade } from \"@material-ui/core/styles\";\nimport ShellDialog from \"./ShellDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(35, 35, 35)\",\n        //marginTop: \"3px\",\n        minHeight: \"33px\",\n        height: \"33px\",\n    },\n    btn: {\n        height: \"33px\",\n        padding: \"0px 10px 0px 10px\",\n        margin: \"0px\",\n    },\n    toolbarIcon: {\n        marginRight: \"6px\",\n    },\n    popmenu: {\n        zIndex: \"9999\",\n    },\n    input: {\n        display: \"none\",\n    },\n\n    activeButton: {\n        backgroundColor: \"#039be5 !important\",\n    },\n    searchBox: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"nowrap\",\n        justifyContent: \"flex-start\",\n        alignItems: \"stretch\",\n    },\n    searchBtns: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        borderRadius: \"4px\",\n    },\n    searchBtnIcons: {\n        height: \"10px\",\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          marginRight: theme.spacing(1),\n          width: 'auto',\n        },\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    searchIcon: {\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 5),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nconst EditorToolbar = React.memo(({ setInput, result, undo, redo, clearAllBreakpoints, showAlert, wrap, toggleWrap, find, findAll, inspectMode, toggleInspectMode, pipeline, setPipelineActivity, clearPipeline }) => {\n    const classes = useStyles();\n\n    const [openFile, setOpenFile] = useState(false);\n    const [openEditor, setOpenEditor] = useState(false);\n    const [openPipeline, setOpenPipeline] = useState(false);\n    const [openSearch, setOpenSearch] = useState(false);\n    const [openShellDialog, setOpenShellDialog] = useState(false);\n\n    const [searchExpression, setSearchExpression] = useState(\"\");   // TODO: Predelat jednotlivy casti na mensi komponenty (asi)\n    const [searchRegExp, setSearchRegExp] = useState(false);\n    const [searchCaseSensitive, setSearchCaseSensitive] = useState(false);\n\n    const fileRef = React.createRef();\n    \n    const fileButtonRef = useRef(null);\n    const editorButtonRef = useRef(null);\n    const pipelineButtonRef = useRef(null);\n    const searchButtonRef = useRef(null);\n\n    const expandFile = useCallback(() => {\n        setOpenFile(prev => !prev);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandEditor = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(prev => !prev);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandInspect = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(prev => !prev);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const expandSearch = useCallback(() => {\n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(prev => !prev);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleClose = useCallback((event) => {\n        // Otevreni dalsiho selectu\n        if ((fileButtonRef.current && fileButtonRef.current.contains(event.target)) || \n            (editorButtonRef.current && editorButtonRef.current.contains(event.target)) ||\n            (pipelineButtonRef.current && pipelineButtonRef.current.contains(event.target)) ||\n            (searchButtonRef.current && searchButtonRef.current.contains(event.target))) {\n            return;\n        }\n        \n        setOpenFile(false);\n        setOpenEditor(false);\n        setOpenPipeline(false);\n        setOpenSearch(false);\n    }, [setOpenFile, setOpenEditor, setOpenPipeline, setOpenSearch]);\n\n    const handleListKeyDown = useCallback((event) => {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpenFile(false);\n          setOpenEditor(false);\n          setOpenPipeline(false);\n        }\n    }, [setOpenFile, setOpenEditor, setOpenPipeline]);\n\n    const loadFile = useCallback(async(e) => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n\n        reader.onload = async (e) => { \n          setInput(e.target.result);\n        };\n        reader.readAsText(e.target.files[0]);\n        showAlert(\"info\", \"Info: File imported.\");\n    }, [setInput, showAlert]);\n\n    const downloadResult = useCallback(async() => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([result], {type: 'text/plain'});\n\n        element.href = URL.createObjectURL(file);\n        element.download = \"result.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }, [result]);\n\n    return (\n        <Toolbar className={classes.root}>\n            <Button \n                className={classes.btn}\n                ref={fileButtonRef}\n                onClick={expandFile}\n            >\n                <Description fontSize=\"small\" className={classes.toolbarIcon} />\n                File\n            </Button>\n            <Popper className={classes.popmenu} open={openFile} anchorEl={fileButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList autoFocusItem={openFile} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <input\n                            accept=\"text/plain\"\n                            className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            type=\"file\"\n                            ref={fileRef}\n                            onChange={e => `${loadFile(e)} ${handleClose(e)}`}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <MenuItem>\n                                <Publish fontSize=\"small\" className={classes.toolbarIcon}/>\n                                Import\n                            </MenuItem>\n                        </label>\n                        <MenuItem onClick={downloadResult}>\n                            <GetApp fontSize=\"small\" className={classes.toolbarIcon} />\n                            Download\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={editorButtonRef}\n                onClick={expandEditor}\n            >\n                <ListAlt fontSize=\"small\" className={classes.toolbarIcon} />\n                Editor\n            </Button>\n            <Popper className={classes.popmenu} open={openEditor} anchorEl={editorButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <MenuList autoFocusItem={openEditor} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${undo(e)} ${handleClose(e)}`}>\n                            <Undo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Undo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${redo(e)} ${handleClose(e)}`}>\n                            <Redo fontSize=\"small\" className={classes.toolbarIcon} />\n                            Redo\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleWrap(e)} ${handleClose(e)}`}>\n                            <WrapText fontSize=\"small\" className={classes.toolbarIcon} />\n                            { wrap ? \"Disable wrap\" : \"Enable wrap\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${toggleInspectMode(e)} ${handleClose(e)}`}>\n                            <ViewDay fontSize=\"small\" className={classes.toolbarIcon} />\n                            { inspectMode ? \"Disable inspector\" : \"Enable inspector\" }\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearAllBreakpoints(e)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Remove all breakpoints\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={pipelineButtonRef}\n                onClick={expandInspect}\n            >\n                <BugReport fontSize=\"small\" className={classes.toolbarIcon} />\n                Pipeline\n            </Button>\n            <Popper className={classes.popmenu} open={openPipeline} anchorEl={pipelineButtonRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList autoFocusItem={openPipeline} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                        <MenuItem onClick={e => `${setPipelineActivity(true)} ${handleClose(e)}`}>\n                            <Done fontSize=\"small\" className={classes.toolbarIcon} />\n                            Enable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setPipelineActivity(false)} ${handleClose(e)}`}>\n                            <Clear fontSize=\"small\" className={classes.toolbarIcon} />\n                            Disable all tools\n                        </MenuItem>\n                        <MenuItem onClick={e => `${clearPipeline()} ${handleClose(e)}`}>\n                            <ClearAll fontSize=\"small\" className={classes.toolbarIcon} />\n                            Clear pipeline\n                        </MenuItem>\n                        <MenuItem onClick={e => `${setOpenShellDialog(true)} ${handleClose(e)}`}>\n                            <FiberNew fontSize=\"small\" className={classes.toolbarIcon} />\n                            Create shell script\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n            )}\n            </Popper>\n\n            <Button \n                className={classes.btn}\n                ref={searchButtonRef}\n                onClick={expandSearch}\n            >\n                <Search fontSize=\"small\" className={classes.toolbarIcon} />\n                Search\n            </Button>\n            <Popper className={classes.popmenu} open={openSearch} anchorEl={searchButtonRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                    <Paper>\n                        <ClickAwayListener onClickAway={handleClose}>\n                            <div className={classes.searchBox}>\n                                <Tooltip title=\"RegExp\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchRegExp && classes.activeButton }`}\n                                    onClick={() => setSearchRegExp(prev => !prev)}\n                                >\n                                    <Translate />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Case sensitive\">\n                                <IconButton size=\"small\" className={`${classes.searchBtns} ${searchCaseSensitive && classes.activeButton }`}\n                                    onClick={() => setSearchCaseSensitive(prev => !prev)}\n                                >\n                                    <TextFields />\n                                </IconButton>\n                                </Tooltip>\n                                <div className={classes.search}>\n                                    <div className={classes.searchIcon}>\n                                        <Search />\n                                    </div>\n                                    <InputBase\n                                        placeholder=\"Search…\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                        onChange={event => setSearchExpression(event.target.value)}\n                                        value={searchExpression}\n                                    />\n                                    <Tooltip title=\"Remove\">\n                                    <IconButton size=\"small\" style={{marginRight: \"5px\"}} \n                                        onClick={() => setSearchExpression(\"\")}\n                                    >\n                                        <Clear />\n                                    </IconButton>\n                                    </Tooltip>\n                                </div>\n                                <Tooltip title=\"Previous\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                    onClick={() => find(searchExpression, { backwards: true, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipPrevious />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Next\">\n                                <IconButton size=\"small\" className={classes.searchBtns}\n                                     onClick={() => find(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <SkipNext />\n                                </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"All\">\n                                <IconButton size=\"small\" className={classes.searchBtns} \n                                     onClick={() => findAll(searchExpression, { backwards: false, wrap: true, caseSensitive: searchCaseSensitive, wholeWord: false, regExp: searchRegExp })}\n                                >\n                                    <AllInclusive />\n                                </IconButton>\n                                </Tooltip>\n                            </div>\n                        </ClickAwayListener>\n                    </Paper>\n                </Grow>\n            )}\n            </Popper>\n            {openShellDialog &&\n                <ShellDialog \n                    open={openShellDialog}\n                    close={() => setOpenShellDialog(false)}\n                    pipeline={pipeline}\n                />\n            }\n        </ Toolbar>\n    );\n});\n\nexport default EditorToolbar;","import React, { forwardRef, useImperativeHandle, useEffect, useRef, useCallback } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n\nconst EditorIn = React.memo(forwardRef(({ content, edit, wrap, toggleBreakpoint, onCursorChange }, ref) => {\n  const aceIn = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    find(expression, properties){\n      aceIn.current.editor.find(expression, properties);\n    },\n    \n    findAll(expression, properties) {\n      aceIn.current.editor.findAll(expression, properties);\n    },\n\n    resize() {\n      aceIn.current.editor.resize();\n    },\n\n    undo()  {\n      aceIn.current.editor.undo();\n    },\n  \n    redo  ()  {\n      aceIn.current.editor.redo();\n    },\n  \n    clearAllBreakpoints  ()  {\n      aceIn.current.editor.session.clearBreakpoints();\n    },\n}));\n\n  /**\n   * https://ourcodeworld.com/articles/read/1052/how-to-add-toggle-breakpoints-on-the-ace-editor-gutter\n  */\nuseEffect(() => {\n  aceIn.current.editor.on(\"guttermousedown\", function(e) {\n    var target = e.domEvent.target;\n\n    if (target.className.indexOf(\"ace_gutter-cell\") === -1) {\n        return;\n    }\n\n    /*// Pokud neni editor focusnut ignorovat nastaveni breakpointu (mozna se bude hodit).\n    if (!(e.editor.isFocused())){\n        return; \n    }*/\n\n    // Misto za cislici ignorujeme pro nastaveni breakpointu\n    if (e.clientX > 25 + target.getBoundingClientRect().left) {\n        return;\n    }\n\n    var row = e.getDocumentPosition().row;\n    var breakpoints = e.editor.session.getBreakpoints(row, 0);\n\n    if (typeof breakpoints[row] === typeof undefined) {\n      e.editor.session.setBreakpoint(row);\n    }\n    else {\n        e.editor.session.clearBreakpoint(row);\n    }\n\n    e.stop();\n    \n    toggleBreakpoint(breakpoints);\n    });\n  }, [toggleBreakpoint]);\n\n\n  const onChange = useCallback((newValue) => {\n    edit(newValue);\n    console.log(aceIn.current.editor.session.getBreakpoints());\n  }, [edit]);\n  \n    return ( \n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        onChange={onChange}\n        onCursorChange={(selection, event) => onCursorChange(selection, event)}\n        ref={aceIn}\n        value={content}\n        mode=\"plain_text\"\n        name=\"EditorIn\"\n        height=\"100%\"\n        width=\"100%\"\n        placeholder=\"Insert your input here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        debounceChangePeriod={1500}\n        wrapEnabled={wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n}));\n \nexport default EditorIn;","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/webpack-resolver\";\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport \"ace-builds/src-noconflict/theme-idle_fingers\";\n\n//<button onClick={()=> {this.refs.AceOut.editor.find(\"a\")}}>Undo</button>\nclass EditorOut extends Component {\n  state = {  }\n  \n  constructor(props) {\n    super(props);\n    this.resize = this.resize.bind(this);\n  }\n\n  find(expression, properties) {\n    this.refs.aceOut.editor.find(expression, properties);\n  }\n\n  findAll(expression, properties) {\n    this.refs.aceOut.editor.findAll(expression, properties);\n  }\n\n  resize() {\n    this.refs.aceOut.editor.resize();\n  }\n\n  render() { \n    return (\n      <AceEditor\n        theme=\"idle_fingers\"\n        fontSize=\"20px\"\n        ref=\"aceOut\"\n        value={this.props.content}\n        name=\"EditorOut\"\n        height=\"100%\"\n        width=\"100%\"\n        mode=\"plain_text\"\n        readOnly={true}\n        placeholder=\"Your output will be here\"\n        showPrintMargin={false}\n        hScrollBarAlwaysVisible={true}\n        wrapEnabled={this.props.wrap}\n        editorProps={{ $blockScrolling: true }}\n      />);\n  }\n}\n \nexport default EditorOut;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: \"rgb(33, 33, 33)\",\n        height: \"18px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        padding: \"1px 20px\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        flexWrap: \"nowrap\",\n        flexDirection: \"row-reverse\",\n        fontSize: \"13px\",\n        borderRadius: \"0px\",\n    },\n    item: {\n        marginLeft: \"15px\",\n    },\n    enabled: {\n        color: \"green\",\n    },\n    disabled: {\n        color: \"#bf001d\",\n    },\n    violet: {\n        color: \"#e35d14\",\n    },\n}));\n\nconst EditorBottomPanel = React.memo(forwardRef(({wrap, inspectMode}, ref) => {\n    const classes = useStyles();\n\n    const [position, setPosition] = useState({line: 1, column: 1});\n\n\n    useImperativeHandle(ref, () => ({\n        setPosition(line, column) {\n            setPosition(state => ({...state, line: line, column: column}));\n        }\n            \n    }));\n\n    return (\n        <Paper elevation={7} className={classes.root}>\n            <span className={classes.item}>Wrap: {wrap ? <span className={classes.enabled}>Enabled</span> : <span className={classes.disabled}>Disabled</span>}</span>\n            <span className={classes.item}>Mode: <span className={classes.violet}>{ inspectMode ? \"Inspect\" : \"Auto\" }</span></span>\n            <span>Ln {position.line}, Col {position.column}</span>\n        </Paper>\n    );\n}));\n\nexport default EditorBottomPanel;","import React, { useRef, useState, useCallback } from \"react\";\nimport EditorToolbar from \"./EditorToolbar\";\nimport SplitPane from \"react-split-pane\";\nimport { Resizable } from \"re-resizable\";\nimport EditorIn from \"./EditorIn\";\nimport EditorOut from \"./EditorOut\";\nimport { LinearProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditorBottomPanel from \"./EditorBottomPanel\";\nimport \"./SplitEditor.css\";\n\nconst ColorLinearProgress = withStyles({\n    barColorPrimary: {\n      backgroundColor: '#028fd4',\n    },\n})(LinearProgress);\n\nconst SplitEditor = React.memo(({ editorContent, editText, editorResult, showAlert, toggleBreakpoint, inspectMode, toggleInspectMode, pipeProgress, pipeline, setPipelineActivity, clearPipeline }) => {\n    const aceIn = useRef();\n    const aceOut = useRef();\n    const bottomPanel = useRef();\n\n    const [wrap, setWrap] = useState(false);\n\n    const find = useCallback((expression, properties) => {\n        aceIn.current.find(expression, properties);\n        aceOut.current.find(expression, properties);\n    }, []);\n\n    const findAll = useCallback((expression, properties) => {\n        aceIn.current.findAll(expression, properties);\n        aceOut.current.findAll(expression, properties);\n    }, []);\n\n    const toggleWrap = useCallback(() => {\n        setWrap(prev => !prev);\n    }, [setWrap]);\n\n    const handleResize = useCallback(() => {\n        aceIn.current.resize();\n        aceOut.current.resize();\n    }, []);\n\n    const undo = useCallback(() => {\n        aceIn.current.undo();\n    }, []);\n\n    const redo = useCallback(() => {\n        aceIn.current.redo();\n    }, []);\n\n    const clearAllBreakpoints = useCallback(() => {\n        aceIn.current.clearAllBreakpoints();\n        toggleBreakpoint([]);\n    }, [toggleBreakpoint]);\n\n    const initialEditorHeight = useCallback(() => {\n        const height = window.innerHeight - 1047;   // 1047 celkova vyska ostatniho contentu\n\n        return height < 480 ? \"480px\" : height;\n    }, []);\n\n    const onCursorChange = useCallback((selection, event) => {\n        bottomPanel.current.setPosition(selection.cursor.row + 1, selection.cursor.column + 1);\n    }, []);\n\n    return ( \n        <React.Fragment>\n            <EditorToolbar \n                setInput={editText} \n                result={editorResult} \n                undo={undo} \n                redo={redo}\n                clearAllBreakpoints={clearAllBreakpoints}\n                showAlert={showAlert} \n                wrap={wrap}\n                toggleWrap={toggleWrap}\n                find={find}\n                findAll={findAll}\n                inspectMode={inspectMode}\n                toggleInspectMode={toggleInspectMode}\n                pipeline={pipeline}\n                setPipelineActivity={setPipelineActivity}\n                clearPipeline={clearPipeline}\n            />\n            <Resizable\n                defaultSize={{ width: \"100%\", height: initialEditorHeight() }}\n                minHeight={100}\n                minWidth=\"100%\"\n                maxWidth=\"100%\"\n                enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n                onResize={() => handleResize()}\n                style={{display: \"flex\", flexDirection: \"column\", flexWrap: \"nowrap\", justifyContent: \"flex-start\",\n                    alignItems: \"stretch\", borderBottom: \"1px solid rgb(30, 30, 30)\"}}\n            >\n                <SplitPane \n                    className=\"SplitEditor\" \n                    split=\"vertical\" \n                    style={{height: \"100%\", position: \"static\"}} \n                    minSize={200} maxSize={-200} \n                    defaultSize={\"50%\"} \n                    onChange={() => handleResize()}\n                >\n                    <EditorIn ref={ aceIn } content={editorContent} edit={editText} wrap={wrap} toggleBreakpoint={toggleBreakpoint} onCursorChange={onCursorChange} />\n                    <EditorOut ref={ aceOut } content={editorResult} wrap={wrap} />\n                </SplitPane>\n                    <ColorLinearProgress variant=\"determinate\" value={pipeProgress} />\n                    <EditorBottomPanel ref={bottomPanel} wrap={wrap} inspectMode={inspectMode} />\n            </Resizable>\n        </React.Fragment>\n    );  \n});\n \nexport default SplitEditor;","export default {\n    toolName: {\n        color: \"#d9d9d9\",\n        fontWeight: \"bold\",\n        marginBottom: \"5px\",\n    },\n    divider: {\n\t    marginTop: \"20px\",\n    },\n};","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction MatchTool(props) {\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(\"\");\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [matchInColumn, setMatchInColumn] = useState(\"\");\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(\"\");\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    const handleMatch = () => {\n        if (matchFind === \"\"){\n            setMatchFindError(true);\n        }\n\n        if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n            setMatchDelimiterError(true);\n        }\n\n        if (matchInColumn !== \"\" && matchInColumn <= 0) {\n            setMatchColumnError(true);\n        }\n\n        if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n            props.addTool({toolname: \"match\", expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Match added into the pipeline.\");\n            setMatchFind(\"\");\n            setMatchInColumn(\"\");\n            setMatchColumnDelimiter(\"\");\n            setMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"match-occurence-label\"\n                      id=\"match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"match-case-label\"\n                      id=\"match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"match-expression\"\n                    label=\"Find\"\n                    value={matchFind}\n                    required={true}\n                    onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={matchFindError === true}\n                    helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-match\"\n                    className={classes.button}\n                    onClick={() => handleMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default MatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexMatchTool(props) {\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(\"\");\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(\"\");\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(\"\");\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    const handleRegexMatch = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexMatchFind);\n        } \n        catch (e) {\n            setRegexMatchFindError(true);\n            validExpression = false;\n        }\n\n        if (regexMatchFind === \"\"){\n            setRegexMatchFindError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n            setRegexMatchDelimiterError(true);\n        }\n\n        if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n            setRegexMatchColumnError(true);\n        }\n\n        if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexMatch\", expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex match added into the pipeline.\");\n            setRegexMatchFind(\"\");\n            setRegexMatchInColumn(\"\");\n            setRegexMatchColumnDelimiter(\"\");\n            setRegexMatchDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex match into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-match-occurence-label\"\n                      id=\"regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-match-case-label\"\n                      id=\"regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-match-expression\"\n                    label=\"Regular expression\"\n                    value={regexMatchFind}\n                    required={true}\n                    onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                    className={classes.textField}\n                    error={regexMatchFindError === true}\n                    helperText={regexMatchFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-match\"\n                    className={classes.button}\n                    onClick={() => handleRegexMatch()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexMatchTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CompareTool(props) {\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(\"\");\n    const [comparator, setComparator] = useState(\"gt\")\n    const [inColumn, setInColumn] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleCompare = () => {\n        if (compareValue === \"\"){\n            setValueError(true);\n        }\n\n        if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n            setDelimiterError(true);\n        }\n\n        if (inColumn !== \"\" && inColumn <= 0) {\n            setInColumnError(true);\n        }\n\n        if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n            props.addTool({toolname: \"compare\", value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Compare added into the pipeline.\");\n            setCompareValue(\"\");\n            setInColumn(\"\");\n            setDelimiter(\"\");\n            setDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding compare into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"compare-comparator-label\"\n                      id=\"compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"compare-value\"\n                    label=\"Compare value\"\n                    value={compareValue}\n                    required={true}\n                    onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                    className={classes.textField}\n                    error={valueError === true}\n                    helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-compare\"\n                    className={classes.button}\n                    onClick={() => handleCompare()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default CompareTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport Match from \"./Tools/Match\";\nimport RegexMatch from \"./Tools/RegexMatch\";\nimport Compare from \"./Tools/Compare\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Match</Typography>\n                    <Match addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Regex match</Typography>\n                    <RegexMatch addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Compare</Typography>\n                    <Compare addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReplaceTool(props) {\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(\"\");\n    const [replaceReplace, setReplaceReplace] = useState(\"\");\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [replaceInColumn, setReplaceInColumn] = useState(\"\");\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(\"\");\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    const handleReplace = () => {\n        if (replaceFind === \"\"){\n            setReplaceFindError(true);\n        }\n\n        if (replaceFind === replaceReplace && replaceFind !== \"\") {\n            setReplaceReplaceError(true);\n        }\n\n        if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n            setReplaceDelimiterError(true);\n        }\n\n        if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n            setReplaceColumnError(true);\n        }\n\n        if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n            props.addTool({toolname: \"replace\", find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Replace added into the pipeline.\");\n            setReplaceFind(\"\");\n            setReplaceReplace(\"\");\n            setReplaceInColumn(\"\");\n            setReplaceColumnDelimiter(\"\");\n            setReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"replace-occurence-label\"\n                      id=\"replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"replace-case-label\"\n                      id=\"replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"replace-find\"\n                    label=\"Find\"\n                    value={replaceFind}\n                    required={true}\n                    onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={replaceFindError === true}\n                    helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n                <TextField\n                    id=\"replace-replace\"\n                    label=\"Replace\"\n                    value={replaceReplace}\n                    onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                    className={classes.textField}\n                    error={replaceReplaceError === true}\n                    helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-replace\"\n                    className={classes.button}\n                    onClick={() => handleReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ReplaceTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexCenter: {\n        marginTop: \"8px\",\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction RegexReplaceTool(props) {\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(\"\");\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(\"\");\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(false);\n    const [occurrence, setOccurrence] = useState(\"all\");\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(\"\");\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(\"\");\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    const handleRegexReplace = () => {\n        var validExpression = true;\n\n        try {\n            new RegExp(regexReplaceFind);\n        } \n        catch (e) {\n            setRegexReplaceFindError(true);\n            validExpression = false;\n        }\n\n        if (regexReplaceFind === \"\"){\n            setRegexReplaceFindError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n            setRegexReplaceDelimiterError(true);\n        }\n\n        if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n            setRegexReplaceColumnError(true);\n        }\n\n        if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n            props.addTool({toolname: \"regexReplace\", find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n            props.showAlert(\"success\", \"Success: Regex replace added into the pipeline.\");\n            setRegexReplaceFind(\"\");\n            setRegexReplaceReplace(\"\");\n            setRegexReplaceInColumn(\"\");\n            setRegexReplaceColumnDelimiter(\"\");\n            setRegexReplaceDelimiterError(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding regex replace into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-occurence-label\"\n                      id=\"regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"regex-replace-case-label\"\n                      id=\"regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Field cannot be empty!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexCenter}>\n                <TextField\n                    id=\"regex-replace-find\"\n                    label=\"Regular expression\"\n                    value={regexReplaceFind}\n                    required={true}\n                    onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                    className={classes.textField}\n                    error={regexReplaceFindError === true}\n                    helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                />\n                <TextField\n                    id=\"regex-replace-replace\"\n                    label=\"Replace\"\n                    value={regexReplaceReplace}\n                    onChange={event => setRegexReplaceReplace(event.target.value)}\n                    className={classes.textField}\n                />\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-regex-replace\"\n                    className={classes.button}\n                    onClick={() => handleRegexReplace()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default RegexReplaceTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport Replace from \"./Tools/Replace\";\nimport RegexReplace from \"./Tools/RegexReplace\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst FindAndReplaceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Replace</Typography>\n                    <Replace addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Regex replace</Typography>\n                    <RegexReplace addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(FindAndReplaceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterColumnsTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"remove\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleFilterColumns = () => {\n        if (position === \"\" || position <= 0){\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"filterColumns\", variant: variant, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Filter columns added into the pipeline.\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding filter columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"filter-columns-variant-label\"\n                  id=\"filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <TextField\n                id=\"filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.textField}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-columns\"\n                className={classes.button}\n                onClick={() => handleFilterColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction FilterLinesTool(props) {\n    const classes = useStyles();\n\n    const [content, setContent] = useState(\"empty\");\n\n    const handleRemoveLines = () => {\n        props.addTool({toolname: \"filterLines\", content: content});\n        props.showAlert(\"success\", \"Success: Filter lines added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"filter-lines-content-label\">Content</InputLabel>\n                <Select\n                  labelId=\"filter-lines-content-label\"\n                  id=\"filter-lines-content\"\n                  className={classes.opts}\n                  value={content}\n                  onChange={(event) => setContent(event.target.value)}\n                >\n                    <MenuItem value={\"empty\"}>Empty</MenuItem>\n                    <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-filter-lines\"\n                className={classes.button}\n                onClick={() => handleRemoveLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default FilterLinesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    textField: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction CutLinesTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"head\");\n    const [count, setCount] = useState(\"\");\n\n    const [countError, setCountError] = useState(false);\n\n    const handleCutLines = () => {\n        if (count === \"\" || count <= 0) {\n            setCountError(true);\n        }\n\n        if (count !== \"\" && count > 0) {\n            props.addTool({toolname: \"cutLines\", variant: variant, count: count});\n            props.showAlert(\"success\", \"Success: Cut lines added into the pipeline.\");\n            setCount(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding cut lines into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"cut-lines-variant-label\"\n                    id=\"cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-cut-lines\"\n                className={classes.button}\n                onClick={() => handleCutLines()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default CutLinesTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction TrimTool(props) {\n    const classes = useStyles();\n\n    const handleTrim = () => {\n        props.addTool({toolname: \"trim\"});\n        props.showAlert(\"success\", \"Success: Trim added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-trim\"\n                onClick={() => handleTrim()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default TrimTool;","import React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"11px 5px 5px 5px\",\n        display: \"inline-block\",\n    },\n}));\n\nfunction RemoveExtraSpacesTool(props) {\n    const classes = useStyles();\n\n    const handleRemoveExtraSpaces = () => {\n        props.addTool({toolname: \"removeExtraSpaces\"});\n        props.showAlert(\"success\", \"Success: Remove extra spaces added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-remove-extra-spaces\"\n                onClick={() => handleRemoveExtraSpaces()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default RemoveExtraSpacesTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nfunction UniqueTool(props) {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(\"merge\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [countPrefix, setCountPrefix] = useState(false);\n    const [countDisabled, setCountDisabled] = useState(false);\n\n    const handleUnique = () => {\n        props.addTool({toolname: \"unique\", variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n        props.showAlert(\"success\", \"Success: Unique added into the pipeline.\");\n    }\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"unique-variant-label\"\n                  id=\"unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"unique-case-label\"\n                  id=\"unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-unique\"\n                className={classes.button}\n                onClick={() => handleUnique()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default UniqueTool;","import React from \"react\";\nimport { Grid, Typography, MuiThemeProvider, createMuiTheme, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport FilterColumns from \"./Tools/FilterColumns\";\nimport FilterLines from \"./Tools/FilterLines\";\nimport CutLines from \"./Tools/CutLines\";\nimport Trim from \"./Tools/Trim\";\nimport RemoveExtraSpaces from \"./Tools/RemoveExtraSpaces\";\nimport Unique from \"./Tools/Unique\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ReduceTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Unique</Typography>\n                    <Unique addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Filter columns</Typography>\n                    <FilterColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Filter lines</Typography>\n                    <FilterLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Cut lines</Typography>\n                    <CutLines addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\"}}>\n                        <Typography variant=\"h5\" className={classes.toolName} display=\"inline\" style={{flex: 1}}>Remove extra spaces</Typography>\n                        <RemoveExtraSpaces addTool={addTool} showAlert={showAlert} />\n                    </div>\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={{display: \"flex\", alignItems: \"center\"}}>\n                        <Typography variant=\"h5\" className={classes.toolName} display=\"inline\" style={{flex: 1}}>Trim</Typography>\n                        <Trim addTool={addTool} showAlert={showAlert} />\n                    </div>\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ReduceTab);","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField, Collapse } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n    },\n    button: {\n        margin: \"8px 0px 8px 8px\",\n    },\n    textField: {\n        flex: 1,\n        marginRight: \"5px\",\n    },\n    flexEnd: {\n        marginTop: \"16px\",\n        display: \"flex\",\n        alignItems: \"flex-end\",\n    },\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    collapse: {\n        width: \"100%\",\n        flex: 1,\n    },\n}));\n\nfunction InsertColumnTool(props) {\n    const classes = useStyles();\n\n    const [focused, setFocused] = useState(false);\n    const [content, setContent] = useState(\"\");\n    const [position, setPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleInsertColumn = () => {\n        if (content === \"\"){\n            setContentError(true);\n        }\n\n        if (position === \"\" || position <= 0) {\n            setPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n            props.addTool({toolname: \"insertColumn\", content: content, position: position, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Insert column added into the pipeline.\");\n            setContent(\"\");\n            setPosition(\"\");\n            setDelimiter(\"\");\n            setFocused(false);\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding insert column into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexStart}>\n                <TextField\n                    id=\"insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    required={true}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"insert-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n                />\n            </div>\n            <div className={classes.flexEnd}>\n                <Collapse className={classes.collapse} in={focused} collapsedHeight={\"50px\"} >\n                    <TextField\n                        id=\"insert-column-content\"\n                        label=\"Content\"\n                        value={content}\n                        required={true}\n                        variant=\"filled\"\n                        onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                        className={classes.textField}\n                        style={{width: \"100%\"}}\n                        error={contentError === true}\n                        helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                        multiline={true}\n                        rows={10}\n                        onFocus={() => setFocused(true)}\n                        onBlur={() => content === \"\" ? setFocused(false) : null}\n                    />\n                </Collapse>\n                <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    id=\"add-insert-column\"\n                    className={classes.button}\n                    onClick={() => handleInsertColumn()}\n                    startIcon={<Add />}\n                >Add</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default InsertColumnTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({    // TODO: Nejspis predelat na sdileny styly pro tento tab\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SwapColumnsTool(props) {\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(\"\");\n    const [secondPosition, setSecondPosition] = useState(\"\");\n    const [delimiter, setDelimiter] = useState(\"\");\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    const handleSwapColumns = () => {\n        if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n            setFirstPositionError(true);\n        }\n\n        if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n            setSecondPositionError(true);\n        }\n\n        if (delimiter === \"\") {\n            setDelimiterError(true);\n        }\n\n        if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n            props.addTool({toolname: \"swapColumns\", first: firstPosition, second: secondPosition, delimiter: delimiter});\n            props.showAlert(\"success\", \"Success: Swap columns added into the pipeline.\");\n            setFirstPosition(\"\");\n            setSecondPosition(\"\");\n            setDelimiter(\"\");\n        }\n        else {\n            props.showAlert(\"error\", \"Error: An error occurred while adding swap columns into the pipeline!\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-swap-columns\"\n                className={classes.button}\n                onClick={() => handleSwapColumns()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SwapColumnsTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ConvertCaseTool(props) {\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(\"uppercase\");\n\n    const handleConvertCase = () => {\n        props.addTool({toolname: \"convertCase\", textCase: textCase});\n        props.showAlert(\"success\", \"Success: Convert case added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"convert-case-case-label\"\n                  id=\"convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-convert-case\"\n                className={classes.button}\n                onClick={() => handleConvertCase()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ConvertCaseTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction SortTool(props) {\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(\"ascending\");\n    const [caseSensitive, setCaseSensitive] = useState(true);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(false);\n\n    const handleSort = () => {\n        props.addTool({toolname: \"sort\", order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n        props.showAlert(\"success\", \"Success: Sort added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"sort-order-label\"\n                  id=\"sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"sort-case-label\"\n                  id=\"sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-sort\"\n                className={classes.button}\n                onClick={() => handleSort()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default SortTool;","import React, { useState } from 'react';\nimport { Button, makeStyles, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: \"5px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    button: {\n        margin: \"8px 0px 8px auto\",\n    },\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nfunction ReverseTool(props) {\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(\"vertical\");\n\n    const handleReverse = () => {\n        props.addTool({toolname: \"reverse\", direction: direction});\n        props.showAlert(\"success\", \"Success: Reverse added into the pipeline.\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <FormControl>\n                <InputLabel id=\"reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"reverse-direction-label\"\n                  id=\"reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n            <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                id=\"add-reverse\"\n                className={classes.button}\n                onClick={() => handleReverse()}\n                startIcon={<Add />}\n            >Add</Button>\n        </div>\n    );\n};\n\nexport default ReverseTool;","import React from \"react\";\nimport { Grid, MuiThemeProvider, createMuiTheme, Typography, Divider } from \"@material-ui/core\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./TabStyles\";\nimport InsertColumn from \"./Tools/InsertColumn\";\nimport SwapColumns from \"./Tools/SwapColumns\";\nimport ConvertCase from \"./Tools/ConvertCase\";\nimport Sort from \"./Tools/Sort\";\nimport Reverse from \"./Tools/Reverse\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst ModifyTab = React.memo(({ classes, addTool, showAlert }) => {\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Grid container alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Insert column</Typography>\n                    <InsertColumn addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Sort</Typography>\n                    <Sort addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Swap columns</Typography>\n                    <SwapColumns addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Reverse</Typography>\n                    <Reverse addTool={addTool} showAlert={showAlert} />\n                    <Divider className={classes.divider} orientation=\"horizontal\" variant=\"fullWidth\" />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.toolName}>Convert case</Typography>\n                    <ConvertCase addTool={addTool} showAlert={showAlert} />\n                </Grid>\n            </Grid>\n        </MuiThemeProvider>\n    );\n});\n\nexport default withStyles(styles)(ModifyTab);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Typography, Box, Tabs, Tab, makeStyles, MuiThemeProvider, createMuiTheme, useMediaQuery } from \"@material-ui/core\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { Search, Build, FindReplace, RemoveCircleOutline } from \"@material-ui/icons\";\nimport FindTab from \"./Tabs/FindTab\";\nimport ReplaceTab from \"./Tabs/ReplaceTab\";\nimport ReduceTab from \"./Tabs/ReduceTab\";\nimport ModifyTab from \"./Tabs/ModifyTab\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: lightBlue[600],\n      light: lightBlue[300],\n      dark: lightBlue[900],\n    },\n    type: 'dark',\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '20px',\n    marginBottom: '20px',\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    backgroundColor: 'rgb(50,50,50)',\n    color: 'white',\n  },\n  fullWidth: {\n    width: \"100% !important\",\n  },\n}));\n\nconst ToolTabs = React.memo(({ showAlert, addTool }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const fullWidth = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={`${classes.root} ${fullWidth && classes.fullWidth}`}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            aria-label=\"tabs\"\n            scrollButtons=\"auto\"\n            centered\n          >\n            <Tab icon={<Search />} label=\"Find\" {...a11yProps(0)} />\n            <Tab icon={<FindReplace />} label=\"Replace\" {...a11yProps(1)} />\n            <Tab icon={<RemoveCircleOutline />} label=\"Reduce\" {...a11yProps(2)} />\n            <Tab icon={<Build />} label=\"Modify\" {...a11yProps(3)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel theme={theme} value={value} index={0}>\n          <FindTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <ReplaceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <ReduceTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          <ModifyTab showAlert={showAlert} addTool={addTool} />\n        </TabPanel> \n      </div>\n    </MuiThemeProvider>\n  );\n});\n\nexport default ToolTabs;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [matchFind, setMatchFind] = useState(props.tool.expression);\n    const [matchCaseSensitive, setMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [matchInColumn, setMatchInColumn] = useState(props.tool.inColumn);\n    const [matchColumnDelimiter, setMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [matchFindError, setMatchFindError] = useState(false);\n    const [matchColumnError, setMatchColumnError] = useState(false);\n    const [matchDelimiterError, setMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (matchFind === \"\"){\n                setMatchFindError(true);\n            }\n    \n            if ((matchInColumn !== \"\" && matchColumnDelimiter === \"\") || (matchColumnDelimiter === matchFind && matchFind !== \"\")) {\n                setMatchDelimiterError(true);\n            }\n    \n            if (matchInColumn !== \"\" && matchInColumn <= 0) {\n                setMatchColumnError(true);\n            }\n            \n            if (matchFind !== \"\" && (matchInColumn === \"\" || (matchInColumn > 0 && matchColumnDelimiter !== \"\" && matchColumnDelimiter !== matchFind))) {\n                props.updateTool({...props.tool, expression: matchFind, occurrence: occurrence, casesensitive: matchCaseSensitive, inColumn: matchInColumn, delimiter: matchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-match-occurence-label\"\n                      id=\"edit-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-match-case-label\"\n                      id=\"edit-match-case\"\n                      className={classes.opts}\n                      value={matchCaseSensitive}\n                      onChange={(event) => setMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={matchInColumn}\n                    onChange={event => `${setMatchInColumn(event.target.value)} ${setMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={matchColumnError === true}\n                    helperText={matchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={matchColumnDelimiter}\n                    onChange={event => `${setMatchColumnDelimiter(event.target.value)} ${setMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={matchInColumn === \"\" ? false : true}\n                    error={matchDelimiterError === true}\n                    helperText={matchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-match-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={matchFind}\n                required={true}\n                onChange={event => `${setMatchFind(event.target.value)} ${setMatchFindError(false)}`}\n                error={matchFindError === true}\n                helperText={matchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexMatchFind, setRegexMatchFind] = useState(props.tool.expression);\n    const [regexMatchCaseSensitive, setRegexMatchCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexMatchInColumn, setRegexMatchInColumn] = useState(props.tool.inColumn);\n    const [regexMatchColumnDelimiter, setRegexMatchColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexMatchFindError, setRegexMatchFindError] = useState(false);\n    const [regexMatchColumnError, setRegexMatchColumnError] = useState(false);\n    const [regexMatchDelimiterError, setRegexMatchDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexMatchFind);\n            } \n            catch (e) {\n                setRegexMatchFindError(true);\n                validExpression = false;\n            }\n\n            if (regexMatchFind === \"\"){\n                setRegexMatchFindError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchColumnDelimiter === \"\") {\n                setRegexMatchDelimiterError(true);\n            }\n    \n            if (regexMatchInColumn !== \"\" && regexMatchInColumn <= 0) {\n                setRegexMatchColumnError(true);\n            }\n            \n            if (validExpression === true && regexMatchFind !== \"\" && (regexMatchInColumn === \"\" || (regexMatchInColumn > 0 && regexMatchColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, expression: regexMatchFind, occurrence: occurrence, casesensitive: regexMatchCaseSensitive, inColumn: regexMatchInColumn, delimiter: regexMatchColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-occurence-label\"\n                      id=\"edit-regex-match-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-match-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-match-case-label\"\n                      id=\"edit-regex-match-case\"\n                      className={classes.opts}\n                      value={regexMatchCaseSensitive}\n                      onChange={(event) => setRegexMatchCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-match-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexMatchInColumn}\n                    onChange={event => `${setRegexMatchInColumn(event.target.value)} ${setRegexMatchColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexMatchColumnError === true}\n                    helperText={regexMatchColumnError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-match-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexMatchColumnDelimiter}\n                    onChange={event => `${setRegexMatchColumnDelimiter(event.target.value)} ${setRegexMatchDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexMatchInColumn === \"\" ? false : true}\n                    error={regexMatchDelimiterError === true}\n                    helperText={regexMatchDelimiterError === true ? \"This field is required!\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-match-find\"\n                label=\"Regular expression\"\n                className={classes.textField}\n                value={regexMatchFind}\n                required={true}\n                onChange={event => `${setRegexMatchFind(event.target.value)} ${setRegexMatchFindError(false)}`}\n                error={regexMatchFindError === true}\n                helperText={regexMatchFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [replaceFind, setReplaceFind] = useState(props.tool.find);\n    const [replaceReplace, setReplaceReplace] = useState(props.tool.replace);\n    const [replaceCaseSensitive, setReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [replaceInColumn, setReplaceInColumn] = useState(props.tool.inColumn);\n    const [replaceColumnDelimiter, setReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [replaceFindError, setReplaceFindError] = useState(false);\n    const [replaceReplaceError, setReplaceReplaceError] = useState(false);\n    const [replaceColumnError, setReplaceColumnError] = useState(false);\n    const [replaceDelimiterError, setReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (replaceFind === \"\"){\n                setReplaceFindError(true);\n            }\n    \n            if (replaceFind === replaceReplace && replaceFind !== \"\") {\n                setReplaceReplaceError(true);\n            }\n    \n            if ((replaceInColumn !== \"\" && replaceColumnDelimiter === \"\") || (replaceColumnDelimiter === replaceFind && replaceFind !== \"\")) {\n                setReplaceDelimiterError(true);\n            }\n    \n            if (replaceInColumn !== \"\" && replaceInColumn <= 0) {\n                setReplaceColumnError(true);\n            }\n    \n            if (replaceFind !== \"\" && replaceFind !== replaceReplace && (replaceInColumn === \"\" || (replaceInColumn > 0 && replaceColumnDelimiter !== \"\" && replaceColumnDelimiter !== replaceFind))) {\n                props.updateTool({...props.tool, find: replaceFind, replace: replaceReplace, occurrence: occurrence, casesensitive: replaceCaseSensitive, inColumn: replaceInColumn, delimiter: replaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-occurence-label\"\n                      id=\"edit-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-replace-case-label\"\n                      id=\"edit-replace-case\"\n                      className={classes.opts}\n                      value={replaceCaseSensitive}\n                      onChange={(event) => setReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={replaceInColumn}\n                    onChange={event => `${setReplaceInColumn(event.target.value)} ${setReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={replaceColumnError === true}\n                    helperText={replaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={replaceColumnDelimiter}\n                    onChange={event => `${setReplaceColumnDelimiter(event.target.value)} ${setReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={replaceInColumn === \"\" ? false : true}\n                    error={replaceDelimiterError === true}\n                    helperText={replaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={replaceFind}\n                required={true}\n                onChange={event => `${setReplaceFind(event.target.value)} ${setReplaceFindError(false)}`}\n                error={replaceFindError === true}\n                helperText={replaceFindError === true ? \"Field cannot be empty!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={replaceReplace}\n                onChange={event => `${setReplaceReplace(event.target.value)} ${setReplaceReplaceError(false)}`}\n                error={replaceReplaceError === true}\n                helperText={replaceReplaceError === true ? \"Expression cannot be the same as find expression!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditRegexReplace = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [regexReplaceFind, setRegexReplaceFind] = useState(props.tool.find);\n    const [regexReplaceReplace, setRegexReplaceReplace] = useState(props.tool.replace);\n    const [regexReplaceCaseSensitive, setRegexReplaceCaseSensitive] = useState(props.tool.casesensitive);\n    const [occurrence, setOccurrence] = useState(props.tool.occurrence);\n    const [regexReplaceInColumn, setRegexReplaceInColumn] = useState(props.tool.inColumn);\n    const [regexReplaceColumnDelimiter, setRegexReplaceColumnDelimiter] = useState(props.tool.delimiter);\n\n    const [regexReplaceFindError, setRegexReplaceFindError] = useState(false);\n    const [regexReplaceColumnError, setRegexReplaceColumnError] = useState(false);\n    const [regexReplaceDelimiterError, setRegexReplaceDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            var validExpression = true;\n\n            try {\n                new RegExp(regexReplaceFind);\n            } \n            catch (e) {\n                setRegexReplaceFindError(true);\n                validExpression = false;\n            }\n\n            if (regexReplaceFind === \"\"){\n                setRegexReplaceFindError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceColumnDelimiter === \"\") {\n                setRegexReplaceDelimiterError(true);\n            }\n\n            if (regexReplaceInColumn !== \"\" && regexReplaceInColumn <= 0) {\n                setRegexReplaceColumnError(true);\n            }\n\n            if (validExpression === true && regexReplaceFind !== \"\" && (regexReplaceInColumn === \"\" || (regexReplaceInColumn > 0 && regexReplaceColumnDelimiter !== \"\"))) {\n                props.updateTool({...props.tool, find: regexReplaceFind, replace: regexReplaceReplace, occurrence: occurrence, casesensitive: regexReplaceCaseSensitive, inColumn: regexReplaceInColumn, delimiter: regexReplaceColumnDelimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-occurence-label\">Occurrence</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-occurence-label\"\n                      id=\"edit-regex-replace-occurrence\"\n                      className={classes.opts}\n                      value={occurrence}\n                      onChange={(event) => setOccurrence(event.target.value)}\n                    >\n                        <MenuItem value={\"first\"}>First</MenuItem>\n                        <MenuItem value={\"all\"}>All</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"edit-regex-replace-case-label\">Case</InputLabel>\n                    <Select\n                      labelId=\"edit-regex-replace-case-label\"\n                      id=\"edit-regex-replace-case\"\n                      className={classes.opts}\n                      value={regexReplaceCaseSensitive}\n                      onChange={(event) => setRegexReplaceCaseSensitive(event.target.value)}\n                    >\n                        <MenuItem value={true}>Sensitive</MenuItem>\n                        <MenuItem value={false}>Isensitive</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-regex-replace-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={regexReplaceInColumn}\n                    onChange={event => `${setRegexReplaceInColumn(event.target.value)} ${setRegexReplaceColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={regexReplaceColumnError === true}\n                    helperText={regexReplaceColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-regex-replace-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={regexReplaceColumnDelimiter}\n                    onChange={event => `${setRegexReplaceColumnDelimiter(event.target.value)} ${setRegexReplaceDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={regexReplaceInColumn === \"\" ? false : true}\n                    error={regexReplaceDelimiterError === true}\n                    helperText={regexReplaceDelimiterError === true ? \"Required and must be different than find expression.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-regex-replace-find\"\n                label=\"Find\"\n                className={classes.textField}\n                value={regexReplaceFind}\n                required={true}\n                onChange={event => `${setRegexReplaceFind(event.target.value)} ${setRegexReplaceFindError(false)}`}\n                error={regexReplaceFindError === true}\n                helperText={regexReplaceFindError === true ? \"Invalid or empty regular expression!\" : \"\"}\n                fullWidth\n            />\n            <TextField\n                id=\"edit-regex-replace-replace\"\n                label=\"Replace\"\n                className={classes.textField}\n                value={regexReplaceReplace}\n                onChange={event => setRegexReplaceReplace(event.target.value)}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditRegexReplace;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    flexStart: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        flexWrap: \"wrap\",\n    },\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditCompare = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [compareValue, setCompareValue] = useState(props.tool.value);\n    const [comparator, setComparator] = useState(props.tool.comparator)\n    const [inColumn, setInColumn] = useState(props.tool.inColumn);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [valueError, setValueError] = useState(false);\n    const [inColumnError, setInColumnError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {      \n            if (compareValue === \"\"){\n                setValueError(true);\n            }\n    \n            if ((inColumn !== \"\" && delimiter === \"\") || (delimiter === compareValue && compareValue !== \"\")) {\n                setDelimiterError(true);\n            }\n    \n            if (inColumn !== \"\" && inColumn <= 0) {\n                setInColumnError(true);\n            }\n    \n            if (compareValue !== \"\" && (inColumn === \"\" || (inColumn > 0 && delimiter !== \"\" && delimiter !== compareValue))) {\n                props.updateTool({...props.tool, value: compareValue, comparator: comparator, inColumn: inColumn, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <div className={classes.flexStart}>\n                <FormControl>\n                    <InputLabel id=\"edit-compare-comparator-label\">Comparator</InputLabel>\n                    <Select\n                      labelId=\"edit-compare-comparator-label\"\n                      id=\"edit-compare-comparator\"\n                      style={{ width: \"150px\", marginRight: \"10px\" }}\n                      value={comparator}\n                      onChange={(event) => setComparator(event.target.value)}\n                    >\n                        <MenuItem value={\"gt\"}>Greater than</MenuItem>\n                        <MenuItem value={\"ge\"}>Greater equal</MenuItem>\n                        <MenuItem value={\"lt\"}>Less than</MenuItem>\n                        <MenuItem value={\"le\"}>Less equal</MenuItem>\n                        <MenuItem value={\"eq\"}>Equal</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"edit-compare-in-column\"\n                    label=\"Column\"\n                    placeholder=\"All\"\n                    value={inColumn}\n                    onChange={event => `${setInColumn(event.target.value)} ${setInColumnError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    error={inColumnError === true}\n                    helperText={inColumnError === true ? \"Number must be greater than zero.\" : \"\"}\n                />\n                <TextField\n                    id=\"edit-compare-column-delimiter\"\n                    label=\"Delimiter\"\n                    value={delimiter}\n                    onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                    className={classes.opts}\n                    required={inColumn === \"\" ? false : true}\n                    error={delimiterError === true}\n                    helperText={delimiterError === true ? \"Required and must be different than compare value.\" : \"\"}\n                />\n            </div>\n            <TextField\n                id=\"edit-compare-value\"\n                label=\"Compare value\"\n                value={compareValue}\n                required={true}\n                onChange={event => `${setCompareValue(event.target.value)} ${setValueError(false)}`}\n                className={classes.textField}\n                error={valueError === true}\n                helperText={valueError === true ? \"Value cannot be empty!\" : \"\"}\n                fullWidth\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCompare;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditFilterColumns = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (position === \"\" || position <= 0){\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, variant: variant, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-columns-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-filter-columns-variant-label\"\n                  id=\"edit-filter-columns-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"remove\"}>Remove</MenuItem>\n                    <MenuItem value={\"cut\"}>Cut</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-filter-columns-position\"\n                label=\"Position\"\n                value={position}\n                onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={positionError === true}\n                helperText={positionError === true ? \"Required and number must be greater than zero!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-filter-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"This field is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterColumns;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditFilterLines = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, content: content});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-filter-lines-content-label\">Content</InputLabel>\n                <Select\n                  labelId=\"edit-filter-lines-content-label\"\n                  id=\"edit-filter-lines-content\"\n                  className={classes.opts}\n                  value={content}\n                  onChange={(event) => setContent(event.target.value)}\n                >\n                    <MenuItem value={\"empty\"}>Empty</MenuItem>\n                    <MenuItem value={\"whiteChars\"}>White characters</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditFilterLines;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        width: \"100px\",\n    },\n}));\n\nconst EditCutLinesTool = forwardRef((props, ref) => {\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [count, setCount] = useState(props.tool.count);\n\n    const [countError, setCountError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (count === \"\" || count <= 0) {\n                setCountError(true);\n            }\n            if (count !== \"\" && count > 0) {\n                props.updateTool({...props.tool, variant: variant, count: count});\n                props.close();\n            }     \n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-cut-lines-variant-label\">Variant</InputLabel>\n                <Select\n                    labelId=\"edit-cut-lines-variant-label\"\n                    id=\"edit-cut-lines-variant\"\n                    className={classes.opts}\n                    value={variant}\n                    onChange={(event) => setVariant(event.target.value)}\n                >\n                    <MenuItem value={\"head\"}>Head</MenuItem>\n                    <MenuItem value={\"tail\"}>Tail</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                id=\"edit-cut-lines-position\"\n                label=\"Count\"\n                value={count}\n                onChange={event => `${setCount(event.target.value)} ${setCountError(false)}`}\n                type=\"number\"\n                required={true}\n                className={classes.textField}\n                error={countError === true}\n                helperText={countError === true ? \"Required and number must be greater than zero.\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditCutLinesTool;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"100px\",\n        marginRight: \"10px\",\n    },\n    textField: {\n        margin: \"5px 0px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [content, setContent] = useState(props.tool.content);\n    const [position, setPosition] = useState(props.tool.position);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [contentError, setContentError] = useState(false);\n    const [positionError, setPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (content === \"\"){\n                setContentError(true);\n            }\n    \n            if (position === \"\" || position <= 0) {\n                setPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (content !== \"\" && position !== \"\" && position > 0 && delimiter !== \"\") {\n                props.updateTool({...props.tool, content: content, position: position, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                    id=\"edit-insert-column-position\"\n                    label=\"Position\"\n                    value={position}\n                    onChange={event => `${setPosition(event.target.value)} ${setPositionError(false)}`}\n                    type=\"number\"\n                    className={classes.opts}\n                    error={positionError === true}\n                    helperText={positionError === true ? \"Number must be greater than zero!\" : \"\"}\n                />\n            <TextField\n                id=\"edit-insert-column-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={position === \"\" ? false : true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-insert-column-content\"\n                label=\"Content\"\n                value={content}\n                required={true}\n                variant=\"filled\"\n                onChange={event => `${setContent(event.target.value)} ${setContentError(false)}`}\n                className={classes.textField}\n                style={{width: \"100%\", marginTop: \"16px\"}}\n                error={contentError === true}\n                helperText={contentError === true ? \"Content cannot be empty!\" : \"\"}\n                multiline={true}\n                rows={10}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditMatch = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [firstPosition, setFirstPosition] = useState(props.tool.first);\n    const [secondPosition, setSecondPosition] = useState(props.tool.second);\n    const [delimiter, setDelimiter] = useState(props.tool.delimiter);\n\n    const [firstPositionError, setFirstPositionError] = useState(false);\n    const [secondPositionError, setSecondPositionError] = useState(false);\n    const [delimiterError, setDelimiterError] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            if (firstPosition === \"\" || firstPosition <= 0 || firstPosition === secondPosition){\n                setFirstPositionError(true);\n            }\n\n            if (secondPosition === \"\" || secondPosition <= 0 || firstPosition === secondPosition) {\n                setSecondPositionError(true);\n            }\n    \n            if (delimiter === \"\") {\n                setDelimiterError(true);\n            }\n    \n            if (firstPosition !== \"\" && firstPosition > 0 && secondPosition !== \"\" && secondPosition > 0 && delimiter !== \"\" && firstPosition !== secondPosition) {\n                props.updateTool({...props.tool, first: firstPosition, second: secondPosition, delimiter: delimiter});\n                props.close();\n            }\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <TextField\n                id=\"edit-swap-columns-position-one\"\n                label=\"First position\"\n                value={firstPosition}\n                onChange={event => `${setFirstPosition(event.target.value)} ${setFirstPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={firstPositionError === true}\n                helperText={firstPositionError === true ? \"Number must be greater than zero and different than second position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-position-two\"\n                label=\"Second position\"\n                value={secondPosition}\n                onChange={event => `${setSecondPosition(event.target.value)} ${setSecondPositionError(false)}`}\n                type=\"number\"\n                className={classes.opts}\n                required={true}\n                error={secondPositionError === true}\n                helperText={secondPositionError === true ? \"Number must be greater than zero and different than first position!\" : \"\"}\n            />\n            <TextField\n                id=\"edit-swap-columns-delimiter\"\n                label=\"Delimiter\"\n                value={delimiter}\n                onChange={event => `${setDelimiter(event.target.value)} ${setDelimiterError(false)}`}\n                className={classes.opts}\n                required={true}\n                error={delimiterError === true}\n                helperText={delimiterError === true ? \"Delimiter is required!\" : \"\"}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditMatch;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditConvertCase = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [textCase, setTextCase] = useState(props.tool.textCase);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, textCase: textCase});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-convert-case-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-convert-case-case-label\"\n                  id=\"edit-convert-case-case\"\n                  className={classes.opts}\n                  value={textCase}\n                  onChange={(event) => setTextCase(event.target.value)}\n                >\n                    <MenuItem value={\"uppercase\"}>Upper case</MenuItem>\n                    <MenuItem value={\"lowercase\"}>Lower case</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditConvertCase;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"200px\",\n        marginRight: \"10px\",\n    },\n    flexCenter: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditConvertCase = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [order, setOrder] = useState(props.tool.order);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [ignoreLeadingBlanks, setIgnoreLeadingBlanks] = useState(props.tool.ignoreLeadingBlanks);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, order: order, casesensitive: caseSensitive, ignoreLeadingBlanks: ignoreLeadingBlanks});\n            props.close();\n        }\n    }));\n\n    return (\n        <div className={classes.flexCenter}>\n            <FormControl>\n                <InputLabel id=\"edit-sort-order-label\">Order</InputLabel>\n                <Select\n                  labelId=\"edit-sort-order-label\"\n                  id=\"edit-sort-order\"\n                  className={classes.opts}\n                  value={order}\n                  onChange={(event) => setOrder(event.target.value)}\n                >\n                    <MenuItem value={\"ascending\"}>Ascending</MenuItem>\n                    <MenuItem value={\"descending\"}>Descending</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-sort-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-sort-case-label\"\n                  id=\"edit-sort-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\"}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={ignoreLeadingBlanks}\n                        onChange={(event) => setIgnoreLeadingBlanks(event.target.checked)}\n                        id=\"edit-sort-ignore-leading-blanks\"\n                    />}\n                label=\"Ignore leading blanks\"\n            />\n        </div>\n    );\n});\n\nexport default EditConvertCase;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"150px\",\n        marginRight: \"10px\",\n    },\n}));\n\nconst EditReverse = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [direction, setDirection] = useState(props.tool.direction);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, direction: direction});\n            props.close();\n        }\n    }));\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-reverse-direction-label\">Direction</InputLabel>\n                <Select\n                  labelId=\"edit-reverse-direction-label\"\n                  id=\"edit-reverse-direction\"\n                  className={classes.opts}\n                  value={direction}\n                  onChange={(event) => setDirection(event.target.value)}\n                >\n                    <MenuItem value={\"horizontal\"}>Horizontal</MenuItem>\n                    <MenuItem value={\"vertical\"}>Vertical</MenuItem>\n                </Select>\n            </FormControl>\n        </React.Fragment>\n    );\n});\n\nexport default EditReverse;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { makeStyles, InputLabel, MenuItem, FormControl, Select, FormControlLabel, Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    opts: {\n        width: \"180px\",\n        marginRight: \"10px\",\n    },\n    checkbox: {\n        color: \"#039be5\",\n    },\n}));\n\nconst EditUnique = forwardRef((props, ref) => {    // TODO: dodelat callbacky\n    const classes = useStyles();\n\n    const [variant, setVariant] = useState(props.tool.variant);\n    const [caseSensitive, setCaseSensitive] = useState(props.tool.casesensitive);\n    const [countPrefix, setCountPrefix] = useState(props.tool.countPrefix);\n    const [countDisabled, setCountDisabled] = useState(props.tool.variant === \"merge\" ? false : true);\n\n    useImperativeHandle(ref, () => ({\n        handleUpdate () {\n            props.updateTool({...props.tool, variant: variant, casesensitive: caseSensitive, countPrefix: countPrefix});\n            props.close();\n        }\n    }));\n\n    const handleVariant = (option) => {\n        switch (option) {\n            case \"merge\":\n                setVariant(\"merge\");\n                setCountDisabled(false);\n                return;\n            case \"unique\":\n                setVariant(\"unique\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            case \"duplicate\":\n                setVariant(\"duplicate\");\n                setCountDisabled(true);\n                setCountPrefix(false);\n                return;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl>\n                <InputLabel id=\"edit-unique-variant-label\">Variant</InputLabel>\n                <Select\n                  labelId=\"edit-unique-variant-label\"\n                  id=\"edit-unique-variant\"\n                  className={classes.opts}\n                  value={variant}\n                  onChange={(event) => handleVariant(event.target.value)}\n                >\n                    <MenuItem value={\"merge\"}>Merge</MenuItem>\n                    <MenuItem value={\"unique\"}>Unique only</MenuItem>\n                    <MenuItem value={\"duplicate\"}>Duplicate only</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl>\n                <InputLabel id=\"edit-unique-case-label\">Case</InputLabel>\n                <Select\n                  labelId=\"edit-unique-case-label\"\n                  id=\"edit-unique-case\"\n                  className={classes.opts}\n                  value={caseSensitive}\n                  onChange={(event) => setCaseSensitive(event.target.value)}\n                >\n                    <MenuItem value={true}>Sensitive</MenuItem>\n                    <MenuItem value={false}>Isensitive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControlLabel\n                style={{marginLeft: \"10px\", flex: 1}}\n                control={\n                    <Checkbox \n                        className={classes.checkbox}\n                        color=\"default\"\n                        checked={countPrefix}\n                        disabled={countDisabled === true}\n                        onChange={(event) => setCountPrefix(event.target.checked)}\n                        id=\"edit-unique-count\"\n                    />}\n                label=\"Prefix lines by the number of occurrences\"\n            />\n        </React.Fragment>\n    );\n});\n\nexport default EditUnique;","import React, { useRef } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, useMediaQuery, Tooltip, makeStyles, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Done, Close, Edit } from \"@material-ui/icons\";\nimport { green, lightBlue } from \"@material-ui/core/colors\";\nimport EditMatch from \"./Tools/EditMatch\";\nimport EditRegexMatch from \"./Tools/EditRegexMatch\";\nimport EditReplace from \"./Tools/EditReplace\";\nimport EditRegexReplace from \"./Tools/EditRegexReplace\";\nimport EditCompare from \"./Tools/EditCompare\";\nimport EditFilterColumns from \"./Tools/EditFilterColumns\";\nimport EditFilterLines from \"./Tools/EditFilterLines\";\nimport EditCutLines from \"./Tools/EditCutLines\";\nimport EditInsertColumn from \"./Tools/EditInsertColumn\";\nimport EditSwapColumns from \"./Tools/EditSwapColumns\";\nimport EditConvertCase from \"./Tools/EditConvertCase\";\nimport EditSort from \"./Tools/EditSort\";\nimport EditReverse from \"./Tools/EditReverse\";\nimport EditUnique from \"./Tools/EditUnique\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: lightBlue[800],\n            light: lightBlue[600],\n            dark: lightBlue[900],\n          },\n        secondary: {\n            main: green[800],\n            light: green[200],\n            dark: green[900],\n        },\n        type: \"dark\",\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        borderBottom: \"solid 1px grey\",\n        marginBottom: \"15px\",\n        paddingBottom: \"8px\",\n        color: \"#039be5\",\n    },\n    titleIcon: {\n        marginRight: \"15px\",\n        color: \"#039be5\",\n    },\n    dialogActions: {\n        paddingTop: \"0px\",\n    },\n    confirmIcon: {\n        color: \"#43a047\",\n    },\n    closeIcon: {\n        color: \"red\",\n    },\n}));\n\nfunction EditDialog(props) {\n    const classes = useStyles();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const toolRef = useRef();\n\n    const mapToolname = (tool) => {\n        switch (tool.toolname) {\n            case \"match\": return \"Match\";\n            case \"regexMatch\": return \"Regex match\";\n            case \"replace\": return \"Replace\";\n            case \"regexReplace\": return \"Regex replace\";\n            case \"compare\": return \"Compare\";\n            case \"filterColumns\": return \"Filter columns\";\n            case \"filterLines\": return \"Filter lines\";\n            case \"cutLines\": return \"Cut lines\";\n            case \"insertColumn\": return \"Insert column\";\n            case \"swapColumns\": return \"Swap columns\";\n            case \"convertCase\": return \"Convert case\";\n            case \"sort\": return \"Sort\";\n            case \"reverse\": return \"Reverse\";\n            case \"unique\": return \"Unique\";\n            default: return;\n        }\n    };\n\n    /**\n     * Vypis html kontextu podle zvoleneho nastroje\n    */\n    const mapToolContent = (tool) => {\n        switch (tool.toolname) {\n            case \"match\":\n                return (\n                    <EditMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexMatch\":\n                return (\n                    <EditRegexMatch ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"replace\":\n                return (\n                    <EditReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"regexReplace\":\n                return (\n                    <EditRegexReplace ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"compare\":\n                return (\n                    <EditCompare ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterColumns\":\n                return (\n                    <EditFilterColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"filterLines\":\n                return (\n                    <EditFilterLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"cutLines\":\n                return (\n                    <EditCutLines ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"insertColumn\":\n                return (\n                    <EditInsertColumn ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"swapColumns\":\n                return (\n                    <EditSwapColumns ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"convertCase\":\n                return (\n                    <EditConvertCase ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"sort\":\n                return (\n                    <EditSort ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"reverse\":\n                return (\n                    <EditReverse ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            case \"unique\":\n                return (\n                    <EditUnique ref={toolRef} updateTool={props.updateTool} tool={props.tool} close={props.close} />\n                );\n            default:\n                return;\n        }\n    };\n    \n    return (\n        <MuiThemeProvider theme={theme}>\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            fullScreen={fullScreen}\n            fullWidth={true}\n            maxWidth = \"md\"\n            aria-labelledby=\"responsive-dialog-title\"\n        >\n            <DialogTitle className={classes.title} id=\"responsive-dialog-title\">\n                <Edit className={classes.titleIcon} fontSize=\"large\" />\n                {mapToolname(props.tool)}\n            </DialogTitle>\n            <DialogContent>\n                {mapToolContent(props.tool)}\n            </DialogContent>\n            <DialogActions className={classes.dialogActions}>\n                <Tooltip className={classes.tooltip} title=\"Close\">\n                    <IconButton className={classes.closeIcon} onClick={() => props.close()}>\n                        <Close fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Confirm\">\n                    <IconButton className={classes.confirmIcon} onClick={() => toolRef.current.handleUpdate()}>\n                        <Done fontSize=\"large\"/>\n                    </IconButton>\n                </Tooltip>\n            </DialogActions>\n        </Dialog>\n        </MuiThemeProvider>\n    );\n}\n\nexport default EditDialog;","import React, { useState, useRef } from \"react\";\nimport { List, ListItem, makeStyles, IconButton, Menu, MenuItem, Tooltip, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { Settings, Delete, Visibility, VisibilityOff, Edit, MoreVert } from \"@material-ui/icons\";\nimport { SortableContainer, SortableElement, SortableHandle } from \"react-sortable-hoc\";\nimport EditDialog from \"./Edits/EditDialog\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport { Resizable } from \"re-resizable\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"250px\",\n        //width: \"95%\",\n        minWidth: \"95%\",\n        maxWidth: \"95%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        marginTop: \"20px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"rgb(50,50,50)\",\n        color: \"white\",\n        borderBottom: \"1px solid rgb(30, 30, 30)\",\n    },\n    fullWidth: {\n        width: \"100% !important\",\n        minWidth: \"100% !important\",\n        maxWidth: \"100% !important\",\n    },\n    title: {\n        height: \"22px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        fontSize: \"14px\",\n        backgroundColor: grey[900],\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n        color: \"rgba(255, 255, 255, 0.7)\",\n        letterSpacing: \"0.02857em\",\n        boxShadow: \"0px 4px 4px -1px rgba(0,0,0,0.2)\",\n    },\n    titleLabel: {\n        fontSize: \"15px\",\n    },\n    list: {\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n    },\n    listItem: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n    },\n    itemDeactivated: {\n        color: \"grey !important\",\n    },\n    content: {\n        //height: \"208px\",\n        overflow: \"auto\",\n        flexGrow: \"1\",\n    },\n    toolName: {\n        color: \"#ff5d00\",\n        fontWeight: \"bold\",\n        marginRight: \"8px\",\n    },\n    toolText: {\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\",\n        height: \"100%\",\n        width: \"100%\",\n        cursor: \"grab\",\n    },\n    violetWord: {\n        color: \"#b500d1\",\n        fontWeight: \"bold\",\n    },\n    lightGreenWord: {\n        color: \"#a4ad00\",\n        fontWeight: \"bold\",\n    },\n    greenWord: {\n        color: \"#22ba09\",\n        fontWeight: \"bold\",\n    },\n    blueWord: {\n        color: \"#089dcf\",\n        fontWeight: \"bold\",\n    },\n    lightBlueWord: {\n        color: \"#0fbbff\",\n        fontWeight: \"bold\",\n    },\n    yellowWord: {\n        color: \"#ffcc00\",\n        fontWeight: \"bold\",\n    },\n    redWord: {\n        color: \"#bd0032\",\n        fontWeight: \"bold\",\n    },\n    lightRedWord: {\n        color: \"#ff0a68\",\n        fontWeight: \"bold\",\n    },\n    greenBlueWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    turquoiseWord: {\n        color: \"#00b87d\",\n        fontWeight: \"bold\",\n    },\n    lightTurquoiseWord: {\n        color: \"#14db78\",\n        fontWeight: \"bold\",\n    },\n    listIcon: {\n        marginRight: \"15px\",\n        color: \"#e0e0e0\",\n    },\n    marginLR: {\n        marginLeft: \"8px\",\n        marginRight: \"8px\",\n    },\n}));\n\nfunction mapComparator(comparator) {\n    switch (comparator) {\n        case \"gt\": return \"greater than\";\n        case \"ge\": return \"greater equal\";\n        case \"lt\": return \"less than\";\n        case \"le\": return \"less equal\";\n        case \"eq\": return \"equal\";\n        default: return \"\";\n    }\n};\n\nfunction mapCase(textCase) {\n    switch (textCase) {\n        case \"uppercase\": return \"upper case\";\n        case \"lowercase\": return \"lower case\";\n        default: return \"\";\n    }\n}\n\nfunction mapFilterLinesContent(content) {\n    switch (content) {\n        case \"empty\":\n            return \"with empty content\";\n        case \"whiteChars\":\n            return \"with white characters\";\n        default:\n            return \"\";\n    }\n}\n\nfunction mapUniqueVariant(variant) {\n    switch (variant) {\n        case \"merge\":\n            return \"merge\";\n        case \"unique\":\n            return \"unique only\";\n        case \"duplicate\":\n            return \"duplicate only\";\n        default:\n            return \"\";\n    }\n}\n\nfunction isEditable(tool) {\n    const nonEditable = [\"trim\", \"removeExtraSpaces\"];\n    \n    return nonEditable.includes(tool.toolname) ? false : true;\n}\n\nconst ToolList = React.memo(({ tools, removeTool, reactiveTool, updateTool, sort }) => {\n    const classes = useStyles();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const theme = useTheme();   // useMediaQuery\n    const fullWidth = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const toolToEdit = useRef({});\n\n    const openEdit = (tool) => {\n        toolToEdit.current = tool;\n        setOpenEditDialog(true);\n    }\n\n    const mapTool = (tool) => {\n        switch (tool.toolname) {\n            case \"regexMatch\":\n            case \"match\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"match\" ?  \"Match\" :\"Regex match\"}</span> \n                        <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.expression}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.blueWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"regexReplace\":\n            case \"replace\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>{tool.toolname === \"replace\" ?  \"Replace\" : \"Regex replace\"}</span>\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{tool.occurrence}{tool.casesensitive === true ? \" case sensitive\" : \" case isensitive\"}</span>\n                        {tool.find}\n                        <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>with</span> \n                        {tool.replace}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.greenWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"compare\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Compare</span>\n                        <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>{mapComparator(tool.comparator)}</span>\n                        {tool.value}\n                        {tool.inColumn === \"\" ? \"\" : \n                            <React.Fragment>\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>in</span>\n                                {tool.inColumn + \".\"}\n                                <span className={`${classes.yellowWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>column delimited by</span>\n                                {tool.delimiter}\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                );\n            case \"filterColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter columns</span>\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>\n                            {tool.variant + \" \"}\n                            at\n                        </span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.violetWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"filterLines\":\n                    return (\n                        <React.Fragment>\n                            <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Filter lines</span>\n                            <span className={`${classes.greenBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>{mapFilterLinesContent(tool.content)}</span>\n                        </React.Fragment>\n                    );\n            case \"cutLines\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Cut lines</span>\n                        {tool.count}\n                        <span className={`${classes.lightGreenWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginLeft: \"8px\"}}>{\n                            tool.variant === \"head\" ? \"from the beggining\" : \"from the end\"\n                        }</span>\n                    </React.Fragment>\n                );\n            case \"insertColumn\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Insert column</span>\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>starting with</span>\n                        {tool.content.split('\\n')[0] + \"...\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>at</span>\n                        {tool.position + \".\"}\n                        <span className={`${classes.turquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"swapColumns\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Swap columns</span>\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>at</span>\n                        {tool.first + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>and</span>\n                        {tool.second + \".\"}\n                        <span className={`${classes.lightTurquoiseWord} ${!(tool.active) && classes.itemDeactivated} ${classes.marginLR}`}>position delimited by</span> \n                        {tool.delimiter}\n                    </React.Fragment>\n                );\n            case \"convertCase\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Convert case</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`} style={{marginRight: \"8px\"}}>to</span>\n                        {mapCase(tool.textCase)}\n                    </React.Fragment>\n                );\n            case \"trim\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Trim</span>\n                    </React.Fragment>\n                );\n            case \"removeExtraSpaces\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Remove extra spaces</span>\n                    </React.Fragment>\n                );\n            case \"sort\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Sort</span>\n                        <span className={`${classes.lightBlueWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.order}\n                            {tool.casesensitive === true ? \" case sensitive \" : \" case isensitive \"}\n                            {tool.ignoreLeadingBlanks === true ? \" ignoring leading blanks\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            case \"reverse\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Reverse</span>\n                        <span className={`${classes.redWord} ${!(tool.active) && classes.itemDeactivated}`}>{tool.direction}</span>\n                    </React.Fragment>\n                );\n            case \"unique\":\n                return (\n                    <React.Fragment>\n                        <span className={`${classes.toolName} ${!(tool.active) && classes.itemDeactivated}`}>Unique</span>\n                        <span className={`${classes.lightRedWord} ${!(tool.active) && classes.itemDeactivated}`}>\n                            {tool.casesensitive === true ? \"case sensitive \" : \"case isensitive \"}\n                            {mapUniqueVariant(tool.variant)}\n                            {tool.variant === \"merge\" && tool.countPrefix === true ? \" with count prefix\" : \"\"}\n                        </span>\n                    </React.Fragment>\n                );\n            default:\n                return;\n        }\n    }\n\n    const DragHandle = SortableHandle(({tool}) => (\n        <div className={classes.toolText}>\n          {mapTool(tool)}\n        </div>\n    ));\n\n    const SortableItem = SortableElement(({ tool }) => (\n        <ListItem key={tool.id} ContainerComponent=\"li\" divider={true} className={`${classes.listItem} ${!(tool.active) && classes.itemDeactivated}`}>\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {properties => (\n                    <React.Fragment>\n                        <Tooltip title=\"Properties\">\n                            <IconButton \n                                className={classes.listIcon} \n                                variant=\"contained\" \n                                size=\"small\" \n                                {...bindTrigger(properties)}\n                            >\n                                <MoreVert />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu {...bindMenu(properties)}>\n                            {isEditable(tool) &&\n                                <MenuItem onClick={() => openEdit(tool)}>\n                                    <Edit className={classes.listIcon} /> Edit\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={() => reactiveTool(tool)}>\n                                {tool.active ? \n                                    (<React.Fragment> <VisibilityOff className={classes.listIcon} /> Deactivate </React.Fragment>) : \n                                    (<React.Fragment> <Visibility className={classes.listIcon} /> Activate </React.Fragment>)}\n                            </MenuItem>\n                            <MenuItem onClick={() => removeTool(tool)}>\n                                <Delete className={classes.listIcon} /> Delete\n                            </MenuItem>\n                        </Menu>\n                    </React.Fragment>\n                )}\n            </PopupState>\n            <DragHandle tool={tool}/>\n        </ListItem>\n    ));\n\n    const SortableListContainer = SortableContainer(({ tools }) => (\n        <List component=\"ul\" className={classes.list}>\n                {tools.map((tool, index) => (\n                    <SortableItem key={tool.id} index={index} tool={tool} />\n                ))}\n        </List>\n    ));\n\n    return (\n        <Resizable \n            className={`${classes.root} ${fullWidth && classes.fullWidth}`}\n            defaultSize={{ width: \"95%\", height: \"250px\" }}\n            minHeight={100}\n            enable={{ top:false, right:false, bottom:true, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\n        >\n            <div className={classes.title}>\n                <Settings style={{fontSize: \"22px\", paddingLeft: \"5px\"}}/>\n                <div className={classes.titleLabel}>Pipeline</div>\n                <div />\n            </div>\n            <div className={classes.content}>\n                <SortableListContainer\n                    tools={tools}\n                    lockAxis='y'\n                    useDragHandle={true}\n                    onSortEnd={sort}\n                    helperClass={\"SortableHelper\"}\n                />\n            </div>\n            {openEditDialog && \n                <EditDialog \n                    open={openEditDialog}\n                    close={() => setOpenEditDialog(false)}\n                    tool={toolToEdit.current}\n                    updateTool={updateTool}\n            />}\n        </Resizable>\n    );\n});\n\nexport default ToolList;","import React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles, Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { CheckCircle, Close, Warning, Error, Info } from '@material-ui/icons';\nimport { green, amber, blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\n\nconst variantIcon = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info,\n};\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: blue[500],\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 25,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n}));\n  \nfunction CustomSnackbarContent(props) {\n    const classes = useStyles();\n    const { className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            message={\n                <span id=\"message-id\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>}\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                \n                    onClick={onClose}\n                >\n                    <Close />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n  \nCustomSnackbarContent.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n};\n\nconst Alerts = React.memo(forwardRef(({ prop }, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n    const [snackbarInfo, setSnackbarInfo] = useState(undefined);\n    const snackbarQueue = useRef([]);\n\n    useImperativeHandle(ref, () => ({\n        openSnackbar(variant, message) {\n            snackbarQueue.current.push({ variant, message, key: new Date().getTime() });\n        \n            if (showSnackbar) {\n                setShowSnackbar(false);\n            }\n            else {\n                processSnackbarQueue();\n            }\n          }\n    }));\n\n    const processSnackbarQueue = () => {\n        if (snackbarQueue.current.length > 0) {\n            setSnackbarInfo(snackbarQueue.current.shift());\n            setShowSnackbar(true);\n        }\n    };\n    \n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setShowSnackbar(false);\n    };\n    \n    const handleExited = () => {\n        processSnackbarQueue();\n    };\n\n    return (\n        <Snackbar\n            key={snackbarInfo ? snackbarInfo.key : undefined}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            open={showSnackbar}\n            autoHideDuration={2000}\n            onClose={closeSnackbar}\n            onExited={handleExited}\n            ContentProps={{ 'aria-describedby': 'message-id' }} \n        >\n            <CustomSnackbarContent\n                message={snackbarInfo ? snackbarInfo.message : undefined}\n                variant={snackbarInfo ? snackbarInfo.variant : undefined}\n                onClose={closeSnackbar}\n            />\n        </Snackbar>\n    );\n  }));\n\n  export default Alerts;","let lastID = 0;\n\nexport default function() {\n    lastID++;\n    return lastID;\n}","/**\n * https://medium.com/prolanceer/optimizing-react-app-performance-using-web-workers-79266afd4a7\n */\nexport default class WebWorker {\n    constructor (worker) {\n        const code = worker.toString();\n        const blob = new Blob(['('+code+')()']);\n        return new Worker(URL.createObjectURL(blob));\n    }\n}","\nexport default () => {\n\n    // https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript\n    function regexEscape(regex) {\n        return regex.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    };\n      \n    /**\n     * Replace nastroj\n     * TODO: dodelat osetreni na undefined\n     */\n    function getMatchOptions(tool) {\n      if (tool.occurrence === \"all\") {\n          return tool.casesensitive === true ? \"g\" : \"gi\";\n      }\n      else {\n          return tool.casesensitive === true ? \"\" : \"i\";\n      }\n    }\n    \n    function replaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            return text.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {\n                for (var i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else { \n                for (var z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function replaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    text[i].data = text[i].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (var x = 0; x < text.length; x++) {\n                    if (text[x].data === null) {\n                        continue;\n                    }\n\n                    if (text[x].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[x].data = text[x].data.replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (var j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (var z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(regexEscape(tool.find), option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(regexEscape(tool.find), option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    function regexReplaceAll(lines, tool) {\n        var option = tool.casesensitive ? \"g\" : \"gi\";\n        var tmp = \"\";\n\n        for (let i = 0; i < lines.length; i++) {\n            tmp = lines[i].match(new RegExp(tool.find, option));\n\n            if (tmp === null) {\n                continue;\n            }\n\n            var specificMatch = true;\n            for (let j = 0; j < tmp.length; j++) {\n              if (tmp[j] === \"\" && tmp.length > 1) {\n                specificMatch = false;\n                break;\n              }\n            }\n\n            if (specificMatch === true) {\n                lines[i] = lines[i].replace(new RegExp(tool.find, option), tool.replace);\n                continue;\n            }\n            \n            var fullMatch = tmp[0].length === lines[i].length ? true : false;\n            if (fullMatch === true) {\n              lines[i] = tool.replace;\n            }\n            else {\n                lines[i] = lines[i].split(new RegExp(tool.find, option));\n                var firstChar = lines[i][0] === \"\" ? \"\" : tool.replace;\n                var lastChar = lines[i][lines[i].length - 1] === \"\" ? \"\" : tool.replace;\n                lines[i] = firstChar + lines[i].join(tool.replace) + lastChar;\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Regex replace nastroj\n     */\n    function regexReplaceTool(text, tool) {\n        const option = getMatchOptions(tool);\n        var splitedText = text.split('\\n');\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                /*for (var y = 0; y < splitedText.length; y++) {  // TODO: otestovat na fullmatch\n                    splitedText[y] = splitedText[y].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return splitedText.join('\\n');*/\n                return regexReplaceAll(splitedText, tool).join('\\n');\n            }\n            else {                              // Pouze prvni vyskyt\n                for (let i = 0; i < splitedText.length; i++) {\n                    if (splitedText[i].match(new RegExp(tool.find, option)) !== null) {\n                        splitedText[i] = splitedText[i].replace(new RegExp(tool.find, option), tool.replace);\n                        return splitedText.join('\\n');\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = regexReplaceAll([columns[tool.inColumn - 1]], tool);\n                        splitedText[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return splitedText.join('\\n');\n            }\n            else {                              // Prvni vyskyt\n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            splitedText[z] = columns.join(tool.delimiter);\n                            return splitedText.join('\\n');\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    };\n    \n    function regexReplaceInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n      \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = regexReplaceAll([text[i].data], tool)[0];\n                    //text[i] = text[i].replace(new RegExp(tool.find, option), tool.replace);\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.find, option)) !== null) {\n                        text[i].data = text[i].data.replace(new RegExp(tool.find, option), tool.replace);\n                        break;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n      \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let j = 0; j < text.length; j++) {\n                    if (text[j].data === null) {\n                        continue;\n                    }\n\n                    columns = text[j].data.split(tool.delimiter);\n            \n                    if (tool.inColumn <= columns.length) {\n                        columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                        text[j].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            }\n            else {      // Prvni vyskyt\n                for (let z = 0; z < text.length; z++) {\n                    if (text[z].data === null) {\n                        continue;\n                    }\n\n                    columns = text[z].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.find, option)) !== null) {\n                            columns[tool.inColumn - 1] = columns[tool.inColumn - 1].replace(new RegExp(tool.find, option), tool.replace);\n                            text[z].data = columns.join(tool.delimiter);\n                            return text;\n                        }\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Match nastroj\n     */\n    function matchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            text = text.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option));\n            return text === null ? \"\" : text.join('\\n');\n        }\n        else {      // Ve sloupci\n            var splitedText = text.split('\\n');\n            var columns = \"\";\n            var result = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < splitedText.length; i++) {\n                    columns = splitedText[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            result += splitedText[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let z = 0; z < splitedText.length; z++) {\n                    columns = splitedText[z].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null !== columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            return splitedText[z];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function matchInspectTool(text, tool) {\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {        // Vsechny radky\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {  // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option)) === null) {\n                        text[i].data = null;\n                    }\n                    else {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {          // Prvni vyskyt\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (null === columns[tool.inColumn - 1].match(new RegExp(\".*\" + regexEscape(tool.expression) + \".*\", option))) {\n                            text[i].data = null;\n                        }\n                        else {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                            return text;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    }\n\n    /**\n     * Regex match nastroj\n     */\n    function regexMatchTool(text, tool) {    // TODO: tady pokracovat\n        const option = getMatchOptions(tool);\n        var lines = text.split('\\n');\n        var result = \"\";\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        result += lines[i] + '\\n';\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else {\n                for (let i = 0; i < lines.length; i++) {\n                    if (lines[i].match(new RegExp(tool.expression, option)) !== null) {\n                        return lines[i];\n                    }\n                }\n                return \"\";\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            }\n            else { \n                for (let i = 0; i < lines.length; i++) {\n                    columns = lines[i].split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            return lines[i];\n                        }\n                    }\n                }\n                return \"\";\n            }\n        }\n    };\n\n    function regexMatchInspectTool(text, tool) {    // TODO: osetreni na null\n        const option = getMatchOptions(tool);\n        \n        if (tool.inColumn === \"\") {     // Bez sloupcu -> globalne\n            if (tool.occurrence === \"all\") {    // Vsechny vyskyty\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) === null) {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else {\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n\n                    if (text[i].data.match(new RegExp(tool.expression, option)) !== null) {\n                        for (let j = i + 1; j < text.length; j++) {\n                            text[j].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            }\n        }\n        else {      // Ve sloupci\n            var columns = \"\";\n        \n            if (tool.occurrence === \"all\") {    // Vsechno\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n                \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) === null) {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n            else { \n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n              \n                    if (tool.inColumn <= columns.length) {\n                        if (columns[tool.inColumn - 1].match(new RegExp(tool.expression, option)) !== null) {\n                            for (let j = i + 1; j < text.length; j++) {\n                                text[j].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            }\n        }\n    };\n\n    function filterColumnsTool(text, tool) {\n        text = text.split('\\n');\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i] = columns.join(tool.delimiter);\n                    }\n                }\n                return text.join('\\n');\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    columns = text[i].split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i] = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i] = \"\";\n                    }\n                }\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    };\n\n    function filterColumnsInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.variant) {\n            case \"remove\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        columns.splice(tool.position - 1, 1);\n                        text[i].data = columns.join(tool.delimiter);\n                    }\n                }\n                return text;\n            case \"cut\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    columns = text[i].data.split(tool.delimiter);\n\n                    if (tool.position <= columns.length) {\n                        text[i].data = columns[tool.position - 1];\n                    }\n                    else {\n                        text[i].data = \"\";\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    };\n\n    /**\n     * Compare nastroj\n     */\n    function compareTool(text, tool) {\n        var lines = text.split('\\n');\n        var result = \"\";\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] > tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] > tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] >= tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] >= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < lines.length; i++) {\n                        if (lines[i] < tool.value) {\n                            result += lines[i] + '\\n';\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < lines.length; i++) {\n                        columns = lines[i].split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (columns[tool.inColumn - 1] < tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                }\n                return result.slice(0, -1);\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < lines.length; i++) {\n                            if (lines[i] <= tool.value) {\n                                result += lines[i] + '\\n';\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < lines.length; i++) {\n                            columns = lines[i].split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (columns[tool.inColumn - 1] <= tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                    }\n                    return result.slice(0, -1);\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < lines.length; i++) {\n                                if (lines[i] === tool.value) {\n                                    result += lines[i] + '\\n';\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < lines.length; i++) {\n                                columns = lines[i].split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (columns[tool.inColumn - 1] === tool.value) {\n                                        result += lines[i] + '\\n';\n                                    }\n                                }\n                            }\n                        }\n                        return result.slice(0, -1);\n            default:\n                return text;\n        }\n    }\n\n    function compareInspectTool(text, tool) {\n        var columns = \"\";\n\n        switch (tool.comparator) {\n            case \"gt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data > tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] > tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"ge\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i].data >= tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] >= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n            case \"lt\":\n                if (tool.inColumn === \"\") {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        if (!(text[i] < tool.value)) {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                else {\n                    for (let i = 0; i < text.length; i++) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        columns = text[i].data.split(tool.delimiter);\n\n                        if (tool.inColumn <= columns.length) {\n                            if (!(columns[tool.inColumn - 1] < tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                        else {\n                            text[i].data = null;\n                        }\n                    }\n                }\n                return text;\n                case \"le\":\n                    if (tool.inColumn === \"\") {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            if (!(text[i].data <= tool.value)) {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < text.length; i++) {\n                            if (text[i].data === null) {\n                                continue;\n                            }\n                            columns = text[i].data.split(tool.delimiter);\n    \n                            if (tool.inColumn <= columns.length) {\n                                if (!(columns[tool.inColumn - 1] <= tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                            else {\n                                text[i].data = null;\n                            }\n                        }\n                    }\n                    return text;\n                case \"eq\":\n                        if (tool.inColumn === \"\") {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                if (!(text[i].data === tool.value)) {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < text.length; i++) {\n                                if (text[i].data === null) {\n                                    continue;\n                                }\n                                columns = text[i].data.split(tool.delimiter);\n        \n                                if (tool.inColumn <= columns.length) {\n                                    if (!(columns[tool.inColumn - 1] === tool.value)) {\n                                        text[i].data = null;\n                                    }\n                                }\n                                else {\n                                    text[i].data = null;\n                                }\n                            }\n                        }\n                        return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * RemoveLines nastroj\n     */\n    function filterLinesTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                text = text.replace(/\\n+/g, '\\n');\n                break;\n            case \"whiteChars\":\n                text = text.replace(/^\\s*[\\r\\n]/gm, '');\n                text = text.replace(/[\\r\\n]\\s*$/g, '');\n                break;\n            default:\n                return text;\n        }\n        if (text.charAt(0) === '\\n') {\n            text = text.slice(1)\n        }\n        if (text.charAt(text.length - 1) === '\\n') {\n            text = text.slice(0, -1);\n        }\n        return text;\n    }\n\n    function filterLinesInspectTool(text, tool) {\n        switch (tool.content) {\n            case \"empty\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"whiteChars\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    if (text[i].data.trim() === \"\") {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Cut lines nastroj\n     */\n    function cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Insert column nastroj\n     */\n    function insertColumnTool(text, tool) {\n        text = text.split('\\n');\n        const givenColumn = tool.content.split('\\n');\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            columns = text[lineNumber].split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = columns.join(tool.delimiter);\n            lineNumber++;\n        }\n        while(lineNumber < givenColumn.length) {\n            text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].splice(tool.position - 1, 0, givenColumn[lineNumber]);\n            text[lineNumber] = text[lineNumber].join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber] += tool.delimiter;\n            }\n            lineNumber++;\n        }\n        return text.join('\\n');\n    }\n\n    function insertColumnInspectTool(text, tool) {\n        const givenColumn = tool.content.split('\\n');\n        var givenColumnLine = 0;\n        var lineNumber = 0;\n        var columns = \"\";\n\n        while (lineNumber < text.length) {\n            if (text[lineNumber].data === null) {\n                lineNumber++;\n                continue;\n            }\n            columns = text[lineNumber].data.split(tool.delimiter);\n\n            if (columns.length < tool.position) {\n                columns = columns.concat(Array(tool.position - columns.length - 1).fill(\"\"));\n            }\n            columns.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = columns.join(tool.delimiter);\n            givenColumnLine++;\n            lineNumber++;\n        }\n        while(givenColumnLine < givenColumn.length) {\n            text.push({number: lineNumber + 1, data: Array(tool.position - 1).fill(\"\")});\n            //text.push(Array(tool.position - 1).fill(\"\"));\n            text[lineNumber].data.splice(tool.position - 1, 0, givenColumn[givenColumnLine]);\n            text[lineNumber].data = text[lineNumber].data.join(tool.delimiter);\n            if (parseInt(tool.position) === 1) {\n                text[lineNumber].data += tool.delimiter;\n            }\n            givenColumnLine++;\n            lineNumber++;\n        }\n        return text;\n    }\n\n    /**\n     * Swap columns nastroj\n     */\n    function swapColumnsTool(text, tool) {\n        text = text.split('\\n');\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            column = text[i].split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i] = column.join(tool.delimiter);\n        }\n        return text.join('\\n');\n    }\n\n    function swapColumnsInspectTool(text, tool) {\n        const width = tool.first > tool.second ? tool.first : tool.second;\n        var column = \"\";\n        var temp;\n\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            column = text[i].data.split(tool.delimiter);\n\n            if (column.length < width) {\n                column = column.concat(Array(width - column.length - 1).fill(\"\"));\n            }\n            temp = column[tool.first - 1];\n            column[tool.first - 1] = column[tool.second - 1];\n            column[tool.second - 1] = temp;\n            text[i].data = column.join(tool.delimiter);\n        }\n        return text;\n    }\n\n    /**\n     * Convert case nastroj\n     */\n    function convertCaseTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                return text.toUpperCase();\n            case \"lowercase\":\n                return text.toLowerCase();\n            default:\n                return text;\n        }\n    }\n\n    function convertCaseInspectTool(text, tool) {\n        switch (tool.textCase) {\n            case \"uppercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toUpperCase();\n                }\n                return text;\n            case \"lowercase\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.toLowerCase();\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Trim nastroj\n     */\n    function trimTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].trim();\n        }\n\n        return lines.join('\\n');\n    }\n\n    function trimInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.trim();\n        }\n        return text;\n    }\n\n    /**\n     * Remove extra spaces nastroj\n     */\n    function removeExtraSpacesTool(text) {\n        var lines = text.split('\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            lines[i] = lines[i].replace(/\\s+/g, ' ');\n        }\n\n        return lines.join('\\n');\n    }\n\n    function removeExtraSpacesInspectTool(text) {\n        for (let i = 0; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            text[i].data = text[i].data.replace(/\\s+/g, ' ');\n        }\n        return text;\n    }\n\n    /**\n     * Sort nastroj\n     * TODO: Mozna optimalizace porovnavaci funkce\n     */\n    function sortTool(text, tool) {\n        const compare = (a, b) => {\n            if (tool.casesensitive === false) {\n                a = a.toUpperCase();\n                b = b.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a = a.trim();\n                b = b.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a < b) {\n                    return -1;\n                }\n                if (a > b) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a > b) {\n                    return -1;\n                }\n                if (a < b) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n\n        text = text.split('\\n');\n        text.sort(compare);\n        return text.join('\\n');\n    }\n\n    function sortInspectTool(text, tool) {\n        const compareData = (a, b) => {\n            if (a.data === null) {\n                return 1;\n            }\n            if (b.data === null) {\n                return -1;\n            }\n            if (tool.casesensitive === false) {\n                a.data = a.data.toUpperCase();\n                b.data = b.data.toUpperCase();\n            }\n            if (tool.ignoreLeadingBlanks === true) {\n                a.data = a.data.trim();\n                b.data = b.data.trim();\n            }\n            if (tool.order === \"ascending\") {\n                if (a.data < b.data) {\n                    return -1;\n                }\n                if (a.data > b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                if (a.data > b.data) {\n                    return -1;\n                }\n                if (a.data < b.data) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n        text =text.sort(compareData);\n        return text;\n    }\n\n    /**\n     * Reverse nastroj\n     */\n    function reverseTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    text[i] = text[i].split('');\n                    text[i] = text[i].reverse();\n                    text[i] = text[i].join('');\n                }\n                return text.join('\\n');\n            case \"vertical\":\n                text = text.reverse();\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function reverseInspectTool(text, tool) {\n        switch (tool.direction) {\n            case \"horizontal\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    text[i].data = text[i].data.split('');\n                    text[i].data = text[i].data.reverse();\n                    text[i].data = text[i].data.join('');\n                }\n                return text;\n            case \"vertical\":\n                text = text.reverse();\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Unique nastroj\n     */\n    function uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines.length === 1) {\n                    return text[0];\n                }\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n        for (let i = index + 1; i < text.length; i++) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function findPrevLine(text, index) {\n        for (let i = index - 1; i >= 0; i--) {\n            if (text[i].data === null) {\n                continue;\n            }\n            return {index: i, line: text[i]};\n        }\n        return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                            return text;\n                        }   \n                        if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                            text[i].data = null;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        text[nextLine.index].data = null;\n\n                        while ((nextLine = findNextLine(text, i)) !== null) {\n                            if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                                text[nextLine.index].data = null;\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                        text[i].data = null;\n                        continue;\n                    }\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                        for (var lastIndex = nextLine.index; (nextLine = findNextLine(text, nextLine.index)) !== null; lastIndex = nextLine.index) {\n                            if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                                i = nextLine.index - 1;\n                                break;\n                            }\n                        }\n                        i = lastIndex;\n                    }\n                    else {\n                        text[i].data = null;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\n    /**\n     * Ridici funkce\n     */\n    function processTool(text, tool) {\n        var result = \"\";\n\n        switch (tool.toolname) {\n            case \"match\":\n                result = matchTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchTool(text, tool);\n                break;\n        \tcase \"replace\":\n        \t\tresult = replaceTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesTool(text);\n                break;\n            case \"sort\":\n                result = sortTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueTool(text, tool);\n                break;\n        \tdefault:\n        \t\tbreak;\n        } \n        return result;\n    };\n\n    function processInspectTool(text, tool) {\n        var result = \"\";\n      \n        switch (tool.toolname) {\n            case \"match\":\n                result = matchInspectTool(text, tool);\n                break;\n            case \"regexMatch\":\n                result = regexMatchInspectTool(text, tool);\n                break;\n            case \"replace\":\n                result = replaceInspectTool(text, tool);\n                break;\n            case \"regexReplace\":\n                result = regexReplaceInspectTool(text, tool);\n                break;\n            case \"compare\":\n                result = compareInspectTool(text, tool);\n                break;\n            case \"filterColumns\":\n                result = filterColumnsInspectTool(text, tool);\n                break;\n            case \"filterLines\":\n                result = filterLinesInspectTool(text, tool);\n                break;\n            case \"cutLines\":\n                result = cutLinesInspectTool(text, tool);\n                break;\n            case \"insertColumn\":\n                result = insertColumnInspectTool(text, tool);\n                break;\n            case \"swapColumns\":\n                result = swapColumnsInspectTool(text, tool);\n                break;\n            case \"convertCase\":\n                result = convertCaseInspectTool(text, tool);\n                break;\n            case \"trim\":\n                result = trimInspectTool(text);\n                break;\n            case \"removeExtraSpaces\":\n                result = removeExtraSpacesInspectTool(text);\n                break;\n            case \"sort\":\n                result = sortInspectTool(text, tool);\n                break;\n            case \"reverse\":\n                result = reverseInspectTool(text, tool);\n                break;\n            case \"unique\":\n                result = uniqueInspectTool(text, tool);\n                break;\n            default:\n                break;\n        }\n        return result;\n    };\n\n    self.addEventListener('message', event => { // eslint-disable-line no-restricted-globals\n        //var processData = event.data.inspectMode === true ? event.data.text.split('\\n') : event.data.text;\n        var processData = \"\";\n\n        if (event.data.inspectMode === false) {\n            processData = event.data.text;\n        }\n        else {\n            let lines = event.data.text.split('\\n');\n            processData = Array(lines.length);\n\n            for (let index = 0; index < processData.length; index++) {\n                processData[index] = {number: index + 1, data: lines[index]};\n            }\n        }\n\n        const pipeline = event.data.pipeline;\n        const unit = Math.ceil(100 / pipeline.length);\n\n        if (pipeline.length > 0) {\n            postMessage({type: \"progress\", data: 0});\n        }\n        \n        for (var i = 0; i < pipeline.length; i++) {\n        \tif (pipeline[i].active === true) {\n                if (event.data.inspectMode === false) {\n                    processData = processTool(processData, pipeline[i]);\n                }\n                else {\n                    processData = processInspectTool(processData, pipeline[i]);\n                }\n            }\n\n            postMessage({type: \"progress\", data: (i + 1) === pipeline.length ? 100 : (i + 1) * unit});\n        }\n\n        if (event.data.inspectMode === true) {\n            let lines = [];\n            let tempData = [];\n            console.log(processData);\n\n            for (var breakpoint in event.data.breakpoints) {\n                lines.push(parseInt(breakpoint) + 1);\n            }\n\n            for (let index = 0; index < processData.length; index++) {\n                if (lines.includes(processData[index].number) && processData[index].data !== null) {\n                    tempData.push(processData[index].data);\n                }\n            }\n\n            processData = tempData.join('\\n');\n        }\n        /*if (event.data.inspectMode === true) {\n            var temp = [];\n            console.log(processData);\n            for (var breakpoint in event.data.breakpoints) {\n                if (processData[breakpoint] !== null) {\n                    temp.push(processData[breakpoint]);\n                }\n            }\n            processData = temp.join('\\n');\n        }*/\n\n        postMessage({type: \"result\", data: processData});\n    });\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './App.css';\nimport TopPanel from './components/TopPanel';\nimport SplitEditor from './components/SplitEditor';\nimport ToolTabs from './components/ToolTabs';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport ToolList from './components/ToolList';\nimport Alerts from './components/Alerts';\nimport arrayMove from 'array-move';\nimport newID from './scripts/generatorID';\nimport WebWorker from './scripts/WebWorker';\nimport pipeWorker from './scripts/pipeWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[50],\n    },\n    type: 'dark',\n  }\n});\n\n//-------------------------------DEBUG------------------------------------\n/*\nfunction cutLinesTool(text, tool) {\n        text = text.split('\\n');\n\n        switch (tool.variant) {\n            case \"head\":\n                text = text.slice(0, tool.count);\n                return text.join('\\n');\n            case \"tail\":\n                text = text.slice(text.length - tool.count);\n                return text.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function cutLinesInspectTool(text, tool) {\n        var count = 0;\n\n        switch (tool.variant) {\n            case \"head\":\n                for (let i = 0; i < text.length; i++) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i++; i < text.length; i++) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            case \"tail\":\n                for (let i = text.length - 1; 0 <= i; i--) {\n                    if (text[i].data === null) {\n                        continue;\n                    }\n                    else {\n                        count++;\n                    }\n                    if (count === parseInt(tool.count)) {\n                        for (i--; i >= 0; i--) {\n                            text[i].data = null;\n                        }\n                        return text;\n                    }\n                }\n                return text;\n            default:\n                return text;\n        }\n    }\n\nfunction uniqueTool(text, tool) {\n        var lines = text;\n        if (tool.casesensitive === false) {\n            lines = lines.toUpperCase();\n        }\n        lines = lines.split('\\n');\n        text = text.split('\\n');\n        var result = [];\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(count + \" \" + text[i]);\n                            count = 1;\n                        }\n                        else {\n                            count++;\n                        }\n                    }\n                    result.unshift(count + \" \" + text[0]);\n                    return result.join('\\n');\n                }\n                else {\n                    for (let i = lines.length - 1; i > 0; i--) {\n                        if (lines[i] !== lines[i - 1]) {\n                            result.unshift(text[i]);\n                        }\n                    }\n                    result.unshift(text[0]);\n                    return result.join('\\n');\n                }\n            case \"unique\":\n                if (lines[0] !== lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] !== lines[i - 1] && lines[i] !== lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] !== lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            case \"duplicate\":\n                if (lines[0] === lines[1]) {\n                    result.push(text[0]);\n                }\n                for (let i = 1; i < lines.length - 1; i++) {\n                    if (lines[i] === lines[i - 1] || lines[i] === lines[i + 1]) {\n                        result.push(text[i]);\n                    }\n                }\n                if (lines[lines.length - 1] === lines[lines.length - 2]) {\n                    result.push(text[lines.length - 1]);\n                }\n                return result.join('\\n');\n            default:\n                return text.join('\\n');\n        }\n    }\n\n    function findNextLine(text, index) {\n      for (let i = index + 1; i < text.length; i++) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function findPrevLine(text, index) {\n      for (let i = index - 1; i >= 0; i--) {\n        if (text[i].data === null) {\n          continue;\n        }\n        return {index: i, line: text[i]};\n      }\n      return null;\n    }\n\n    function uniqueInspectTool(text, tool) {\n        var nextLine = null;\n        var prevLine = null;\n        var count = 1;\n\n        switch (tool.variant) {\n            case \"merge\":\n                if (tool.countPrefix === true) {\n                    for (let i = text.length - 1; i >= 0; i--) {\n                        if (text[i].data === null) {\n                            continue;\n                        }\n                        prevLine = findPrevLine(text, i);\n                        if (prevLine === null) {\n                          text[i].data = count + \" \" + text[i].data;\n                          return text;\n                        }\n\n                        if ((tool.casesensitive === true && text[i].data !== prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== prevLine.line.data.toUpperCase())) {\n                            text[i].data = count + \" \" + text[i].data;\n                            count = 1;\n                        }\n                        else {\n                            text[i].data = null;\n                            count++;\n                        }\n                        i = prevLine.index + 1;  \n                    }\n                    return text;\n                }\n                else {\n                  for (let i = text.length - 1; i >= 0; i--) {\n                      if (text[i].data === null) {\n                          continue;\n                      }\n                      prevLine = findPrevLine(text, i);\n                      if (prevLine === null) {\n                        return text;\n                      }\n\n                      if ((tool.casesensitive === true && text[i].data === prevLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === prevLine.line.data.toUpperCase())) {\n                          text[i].data = null;\n                      }\n                      i = prevLine.index + 1;  \n                  }\n                  return text;\n                }\n            case \"unique\":\n                for (let i = 0; i < text.length - 1; i++) {\n                    if (text[i].data === null) {\n                      continue;\n                    }\n                    nextLine = findNextLine(text, i);\n                    if (nextLine === null) {\n                      return text;\n                    }\n\n                    if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                      text[nextLine.index].data = null;\n\n                      while ((nextLine = findNextLine(text, i)) !== null) {\n                        if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                          text[nextLine.index].data = null;\n                        }\n                        else {\n                          break;\n                        }\n                      }\n                      text[i].data = null;\n                    }\n                }\n                return text;\n            case \"duplicate\":\n                for (let i = 0; i < text.length; i++) {\n                  if (text[i].data === null) {\n                    continue;\n                  }\n                  nextLine = findNextLine(text, i);\n                  if (nextLine === null) {\n                    text[i].data = null;\n                    continue;\n                  }\n                  if ((tool.casesensitive === true && text[i].data === nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() === nextLine.line.data.toUpperCase())) {\n                    for (var j = i; (nextLine = findNextLine(text, nextLine.index)) !== null; j++) {\n                      if ((tool.casesensitive === true && text[i].data !== nextLine.line.data) || (tool.casesensitive === false && text[i].data.toUpperCase() !== nextLine.line.data.toUpperCase())) {\n                        i = nextLine.index - 1;\n                        break;\n                      }\n                    }\n                    i = j + 1;\n                  }\n                  else {\n                    text[i].data = null;\n                  }\n              }\n              return text;\n            default:\n                return text;\n            }\n        }\n\nfunction processTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction processInspectTool(text, tool) {\n  var result;\n\n  switch (tool.toolname) {\n    case \"unique\":\n        result = uniqueInspectTool(text, tool);\n        break;\n    case \"cutLines\":\n      result = cutLinesInspectTool(text, tool);\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nfunction proc(data) { // eslint-disable-line no-restricted-globals\n  const pipeline = data.pipeline;\n  var processData = \"\";\n\n  if (data.inspectMode === false) {\n    processData = data.text;\n  }\n  else {\n      let lines = data.text.split('\\n');\n      processData = Array(lines.length);\n\n      for (let index = 0; index < processData.length; index++) {\n          processData[index] = {number: index + 1, data: lines[index]};\n      }\n  }\n  \n  for (var i = 0; i < pipeline.length; i++) {\n    if (pipeline[i].active === false)\n      continue;\n\n      if (data.inspectMode === false) {\n        processData = processTool(processData, pipeline[i]);\n      }\n      else {\n        processData = processInspectTool(processData, pipeline[i]);\n      }\n  }\n\n  if (data.inspectMode === true) {\n    let lines = [];\n    let tempData = [];\n\n    for (var breakpoint in data.breakpoints) {\n        lines.push(parseInt(breakpoint) + 1);\n    }\n\n    for (let index = 0; index < processData.length; index++) {\n        if (lines.includes(processData[index].number) && processData[index].data !== null) {\n            tempData.push(processData[index].data);\n        }\n    }\n\n    processData = tempData.join('\\n');\n}\n\n  return processData;\n};\n*/\n//------------------------------------------------------------------------\n\n/**\n * Funkce zkontroluje pole, zda nejsou nastavene breakpointy.\n * Kdyby byla velmi pomala, vytvorit workera.\n */\nfunction emptyBreakpoints(breakpoints) {\n  for (var i in breakpoints) {\n      if (typeof breakpoints[i] !== typeof undefined) {\n          return false;\n      }\n  }\n  return true;\n};\n\nfunction App() {\n  const alertRef = useRef();\n  const [pipeline, setPipeline] = useState([]);\n\n  const [editorContent, setEditorContent] = useState(\"\");\n  const [editorResult, setEditorResult] = useState(\"\");\n  const [inspectMode, setInspectMode] = useState({enabled: false, breakpoints: []});\n  const [pipeProgress, setPipeProgress] = useState(100);\n  //const [inspectMode, setInspectMode] = useState(false);\n\n  const addTool = useCallback((tool) => {\n    tool.id = newID();\n    tool.active = true;\n    setPipeline(c => [...c, tool]);\n  }, [setPipeline]);\n\n  const removeTool = useCallback((tool) => {\n    setPipeline(c => c.filter(each => each.id !== tool.id));\n  }, [setPipeline]);\n\n  const updateTool = useCallback((tool) => {  // TODO: opravit jen na set\n    const tmp = [...pipeline];\n\n    for (var i in tmp) {\n      if (tmp[i].id === tool.id) {\n        tmp[i] = tool;\n        break;\n      }\n    }\n    setPipeline(tmp);\n  }, [pipeline, setPipeline]);\n\n  const reactiveTool = useCallback((tool) => {\n    setPipeline(state => state.map(each => {\n      if (each.id === tool.id) {\n        return {...each, active: !each.active}\n      }\n      else return each}));\n  }, [setPipeline]);\n\n  const onSortPipeline = useCallback(({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      setPipeline(pipeline => arrayMove(pipeline, oldIndex, newIndex));\n    }\n    console.log(pipeline);\n  }, [pipeline, setPipeline]);\n\n  const editText = useCallback((newValue) => {\n    setEditorContent(newValue);\n  }, [setEditorContent]);\n\n  const toggleInspectMode = useCallback(() => {\n    setInspectMode(state => ({ ...state, enabled: !state.enabled}));\n  }, [setInspectMode]);\n\n  const toggleBreakpoint = useCallback((breakpoints) => {\n    setInspectMode(state => ({ ...state, enabled: !emptyBreakpoints(breakpoints), breakpoints: breakpoints}));\n  }, [setInspectMode]);\n\n  const setPipelineActivity = useCallback((value) => {\n    setPipeline(state => state.map(tool => {return {...tool, active: value}}));\n  }, [setPipeline]);\n\n  const clearPipeline = useCallback(() => {\n    setPipeline([]);\n  }, [setPipeline]);\n\n  // Do dokumentace napsat proc neni async/await ale useEffect\n  // Popsat WebWorkers\n  useEffect(() => {\n    //---------------DEBUG---------------------\n    /*\n    setEditorResult(proc({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    }));\n    */\n    //-----------------------------------------\n    const worker = new WebWorker(pipeWorker);\n\n    worker.postMessage({\n      text: editorContent, \n      pipeline: pipeline, \n      breakpoints: inspectMode.breakpoints, \n      inspectMode: inspectMode.enabled\n    });\n\n    worker.onmessage = (event) => {\n      if (event.data.type === \"progress\")\n        setPipeProgress(event.data.data);\n      else\n        setEditorResult(event.data.data);\n    };\n\n    return () => {  // Cleanup\n      worker.terminate();\n    };\n  }, [editorContent, pipeline, inspectMode, setEditorResult]);\n  \n  const showAlert = useCallback((variant, message) => {\n    alertRef.current.openSnackbar(variant, message);\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <TopPanel />\n        <SplitEditor \n          editorContent={editorContent} \n          editText={editText} \n          editorResult={editorResult}\n          showAlert={showAlert} \n          toggleBreakpoint={toggleBreakpoint}\n          inspectMode={inspectMode.enabled}\n          toggleInspectMode={toggleInspectMode}\n          pipeProgress={pipeProgress}\n          pipeline={pipeline}\n          setPipelineActivity={setPipelineActivity}\n          clearPipeline={clearPipeline}\n        />\n        <ToolList \n          tools={pipeline}\n          removeTool={removeTool}\n          reactiveTool={reactiveTool}\n          updateTool={updateTool}\n          sort={onSortPipeline}\n        />\n        <ToolTabs showAlert={showAlert} addTool={addTool}/>\n        <Alerts ref={alertRef} />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}